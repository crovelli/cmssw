//////////////////////////////////////////////////////////
// This class has been automatically generated on
// Tue Oct 15 15:47:31 2013 by ROOT version 5.32/00
// from TTree ntp1/ntp1
// found on file: default_MC.root
//////////////////////////////////////////////////////////

#ifndef boh_h
#define boh_h

#include <TROOT.h>
#include <TChain.h>
#include <TFile.h>

// Header file for the classes stored in the TTree if any.
#include <vector>

// Fixed size dimensions of array or collections stored in the TTree if any.

class boh {
public :
   TTree          *fChain;   //!pointer to the analyzed TTree or TChain
   Int_t           fCurrent; //!current Tree number in a TChain

   // Declaration of leaf types
   Int_t           nl1Technical;
   Int_t           l1Technical[3];   //[nl1Technical]
   Int_t           nl1Global;
   Int_t           l1Global[5];   //[nl1Global]
   Float_t         rhoFastjet;
   Float_t         sigmaFastjet;
   Float_t         rhoJetsFastJet;
   Float_t         rhoJetsCentralNeutralFastJet;
   Float_t         rhoJetsFastJet_nopu;
   Int_t           runNumber;
   ULong64_t       eventNumber;
   Int_t           lumiBlock;
   Int_t           bunchCrossing;
   Int_t           orbitNumber;
   Double_t        beamSpotX;
   Double_t        beamSpotY;
   Double_t        beamSpotZ;
   Int_t           nBX;
   Int_t           nPU[3];   //[nBX]
   Int_t           bxPU[3];   //[nBX]
   Int_t           nMc;
   Float_t         pMc[101];   //[nMc]
   Float_t         thetaMc[101];   //[nMc]
   Float_t         etaMc[101];   //[nMc]
   Float_t         phiMc[101];   //[nMc]
   Float_t         energyMc[101];   //[nMc]
   Float_t         vxMc[101];   //[nMc]
   Float_t         vyMc[101];   //[nMc]
   Float_t         vzMc[101];   //[nMc]
   Int_t           idMc[101];   //[nMc]
   Int_t           mothMc[101];   //[nMc]
   Int_t           statusMc[101];   //[nMc]
   Int_t           nTrg;
   Int_t           firedTrg[16];   //[nTrg]
   Int_t           nHLT;
   Int_t           indexHLT[455];   //[nHLT]
   vector<string>  *nameHLT;
   Int_t           nTriggerPaths;
   Int_t           nTriggerObsPassing;
   Int_t           sizePassing[455];   //[nTriggerPaths]
   Int_t           indexPassing[434];   //[nTriggerObsPassing]
   Int_t           indexPassingPerPath[455];   //[nTriggerPaths]
   Int_t           nTriggerObs;
   Float_t         triggerObsPt[1665];   //[nTriggerObs]
   Float_t         triggerObsPhi[1665];   //[nTriggerObs]
   Float_t         triggerObsEta[1665];   //[nTriggerObs]
   Float_t         triggerObsMass[1665];   //[nTriggerObs]
   Int_t           nEle;
   Int_t           chargeEle[4];   //[nEle]
   Float_t         energyEle[4];   //[nEle]
   Float_t         thetaEle[4];   //[nEle]
   Float_t         etaEle[4];   //[nEle]
   Float_t         phiEle[4];   //[nEle]
   Float_t         pxEle[4];   //[nEle]
   Float_t         pyEle[4];   //[nEle]
   Float_t         pzEle[4];   //[nEle]
   Float_t         vertexXEle[4];   //[nEle]
   Float_t         vertexYEle[4];   //[nEle]
   Float_t         vertexZEle[4];   //[nEle]
   Int_t           fiducialFlagsEle[4];   //[nEle]
   Int_t           recoFlagsEle[4];   //[nEle]
   Float_t         trackMomentumErrorEle[4];   //[nEle]
   Int_t           superClusterIndexEle[4];   //[nEle]
   Int_t           PFsuperClusterIndexEle[4];   //[nEle]
   Int_t           trackIndexEle[4];   //[nEle]
   Int_t           gsfTrackIndexEle[4];   //[nEle]
   Float_t         convDistEle[4];   //[nEle]
   Float_t         convDcotEle[4];   //[nEle]
   Float_t         convRadiusEle[4];   //[nEle]
   Int_t           convTrackIndexEle[4];   //[nEle]
   Int_t           scPixChargeEle[4];   //[nEle]
   Bool_t          hasMatchedConversionEle[4];   //[nEle]
   Int_t           classificationEle[4];   //[nEle]
   Float_t         fbremEle[4];   //[nEle]
   Int_t           nbremsEle[4];   //[nEle]
   Float_t         hOverEEle[4];   //[nEle]
   Float_t         eSuperClusterOverPEle[4];   //[nEle]
   Float_t         eSeedOverPoutEle[4];   //[nEle]
   Float_t         eEleClusterOverPoutEle[4];   //[nEle]
   Float_t         deltaEtaAtVtxEle[4];   //[nEle]
   Float_t         deltaPhiAtVtxEle[4];   //[nEle]
   Float_t         deltaEtaAtCaloEle[4];   //[nEle]
   Float_t         deltaPhiAtCaloEle[4];   //[nEle]
   Float_t         deltaEtaEleClusterTrackAtCaloEle[4];   //[nEle]
   Float_t         deltaPhiEleClusterTrackAtCaloEle[4];   //[nEle]
   Float_t         dr03TkSumPtEle[4];   //[nEle]
   Float_t         dr03EcalRecHitSumEtEle[4];   //[nEle]
   Float_t         dr03HcalTowerSumEtEle[4];   //[nEle]
   Float_t         dr04TkSumPtEle[4];   //[nEle]
   Float_t         dr04EcalRecHitSumEtEle[4];   //[nEle]
   Float_t         dr04HcalTowerSumEtEle[4];   //[nEle]
   Float_t         dr03HcalTowerSumEtFullConeEle[4];   //[nEle]
   Float_t         dr04HcalTowerSumEtFullConeEle[4];   //[nEle]
   Float_t         pflowMVAEle[4];   //[nEle]
   Float_t         mvaidnontrigEle[4];   //[nEle]
   Float_t         mvaidtrigEle[4];   //[nEle]
   Float_t         mvaidisotrigEle[4];   //[nEle]
   Float_t         pfCombinedIsoEle[4];   //[nEle]
   Float_t         pfCandChargedIso03Ele[4];   //[nEle]
   Float_t         pfCandNeutralIso03Ele[4];   //[nEle]
   Float_t         pfCandPhotonIso03Ele[4];   //[nEle]
   Float_t         pfCandChargedIso04Ele[4];   //[nEle]
   Float_t         pfCandNeutralIso04Ele[4];   //[nEle]
   Float_t         pfCandPhotonIso04Ele[4];   //[nEle]
   Float_t         pfCandChargedDirIso04Ele[4];   //[nEle]
   Float_t         pfCandNeutralDirIso04Ele[4];   //[nEle]
   Float_t         pfCandPhotonDirIso04Ele[4];   //[nEle]
   Float_t         pfCandChargedPUIso03Ele[4];   //[nEle]
   Float_t         pfCandChargedPUIso04Ele[4];   //[nEle]
   Int_t           nCalibEle;
   Int_t           chargeCalibEle[4];   //[nCalibEle]
   Float_t         energyCalibEle[4];   //[nCalibEle]
   Float_t         thetaCalibEle[4];   //[nCalibEle]
   Float_t         etaCalibEle[4];   //[nCalibEle]
   Float_t         phiCalibEle[4];   //[nCalibEle]
   Float_t         pxCalibEle[4];   //[nCalibEle]
   Float_t         pyCalibEle[4];   //[nCalibEle]
   Float_t         pzCalibEle[4];   //[nCalibEle]
   Float_t         vertexXCalibEle[4];   //[nCalibEle]
   Float_t         vertexYCalibEle[4];   //[nCalibEle]
   Float_t         vertexZCalibEle[4];   //[nCalibEle]
   Float_t         energyErrorCalibEle[4];   //[nCalibEle]
   Int_t           nPho;
   Int_t           nPerPVPho;
   Int_t           chargePho[4];   //[nPho]
   Float_t         energyPho[4];   //[nPho]
   Float_t         thetaPho[4];   //[nPho]
   Float_t         etaPho[4];   //[nPho]
   Float_t         phiPho[4];   //[nPho]
   Float_t         pxPho[4];   //[nPho]
   Float_t         pyPho[4];   //[nPho]
   Float_t         pzPho[4];   //[nPho]
   Float_t         vertexXPho[4];   //[nPho]
   Float_t         vertexYPho[4];   //[nPho]
   Float_t         vertexZPho[4];   //[nPho]
   Int_t           fiducialFlagsPho[4];   //[nPho]
   Int_t           recoFlagsPho[4];   //[nPho]
   Int_t           superClusterIndexPho[4];   //[nPho]
   Int_t           PFsuperClusterIndexPho[4];   //[nPho]
   Float_t         hOverEPho[4];   //[nPho]
   Float_t         hTowOverEPho[4];   //[nPho]
   Float_t         dr03TkSumPtPho[4];   //[nPho]
   Float_t         dr03HollowTkSumPtPho[4];   //[nPho]
   Float_t         dr03EcalRecHitSumEtPho[4];   //[nPho]
   Float_t         dr03HcalTowerSumEtPho[4];   //[nPho]
   Float_t         dr04TkSumPtPho[4];   //[nPho]
   Float_t         dr04HollowTkSumPtPho[4];   //[nPho]
   Float_t         dr04EcalRecHitSumEtPho[4];   //[nPho]
   Float_t         dr04HcalTowerSumEtPho[4];   //[nPho]
   Float_t         chargedHadronIsoPho[4];   //[nPho]
   Float_t         neutralHadronIsoPho[4];   //[nPho]
   Float_t         photonIsoPho[4];   //[nPho]
   Int_t           hasPixelSeedPho[4];   //[nPho]
   Bool_t          hasMatchedConversionPho[4];   //[nPho]
   Float_t         dr01NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr01PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr02NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr02PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr03NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr03PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr04NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr04PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr05NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr05PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr06NeutralHadronPFIsoPho[4];   //[nPho]
   Float_t         dr06PhotonPFIsoPho[4];   //[nPho]
   Float_t         dr01ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Float_t         dr02ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Float_t         dr03ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Float_t         dr04ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Float_t         dr05ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Float_t         dr06ChargedHadronPFIsoPho[116];   //[nPerPVPho]
   Int_t           nConv;
   Float_t         pxPairConv[29];   //[nConv]
   Float_t         pyPairConv[29];   //[nConv]
   Float_t         pzPairConv[29];   //[nConv]
   Float_t         pxRefittedPairConv[29];   //[nConv]
   Float_t         pyRefittedPairConv[29];   //[nConv]
   Float_t         pzRefittedPairConv[29];   //[nConv]
   Float_t         etaRefittedPairConv[29];   //[nConv]
   Float_t         phiRefittedPairConv[29];   //[nConv]
   Float_t         ptRefittedPairConv[29];   //[nConv]
   Float_t         energyRefittedPairConv[29];   //[nConv]
   Float_t         eOverPRefittedPairConv[29];   //[nConv]
   Float_t         zOfPVFromTracksConv[29];   //[nConv]
   Float_t         xVtxConv[29];   //[nConv]
   Float_t         yVtxConv[29];   //[nConv]
   Float_t         zVtxConv[29];   //[nConv]
   Float_t         chi2VtxConv[29];   //[nConv]
   Float_t         chi2ProbVtxConv[29];   //[nConv]
   Int_t           isValidVtxConv[29];   //[nConv]
   Int_t           nTracksVtxConv[29];   //[nConv]
   Float_t         mvaOutVtxConv[29];   //[nConv]
   Float_t         trk1DzConv[29];   //[nConv]
   Float_t         trk1DzErrorConv[29];   //[nConv]
   Float_t         trk1ChargeConv[29];   //[nConv]
   Float_t         trk1AlgoConv[29];   //[nConv]
   Float_t         trk1PtConv[29];   //[nConv]
   Float_t         trk1D0Conv[29];   //[nConv]
   Float_t         trk1PoutConv[29];   //[nConv]
   Float_t         trk1PinConv[29];   //[nConv]
   Float_t         trk2DzConv[29];   //[nConv]
   Float_t         trk2DzErrorConv[29];   //[nConv]
   Float_t         trk2ChargeConv[29];   //[nConv]
   Float_t         trk2AlgoConv[29];   //[nConv]
   Float_t         trk2PtConv[29];   //[nConv]
   Float_t         trk2D0Conv[29];   //[nConv]
   Float_t         trk2PoutConv[29];   //[nConv]
   Float_t         trk2PinConv[29];   //[nConv]
   Int_t           nSC;
   Int_t           nBCSC[5];   //[nSC]
   Int_t           nCrystalsSC[5];   //[nSC]
   Float_t         rawEnergySC[5];   //[nSC]
   Float_t         energySC[5];   //[nSC]
   Float_t         seedClusterEnergySC[5];   //[nSC]
   Float_t         esEnergySC[5];   //[nSC]
   Float_t         etaSC[5];   //[nSC]
   Float_t         thetaSC[5];   //[nSC]
   Float_t         phiSC[5];   //[nSC]
   Float_t         xPosSC[5];   //[nSC]
   Float_t         yPosSC[5];   //[nSC]
   Float_t         zPosSC[5];   //[nSC]
   Float_t         phiWidthSC[5];   //[nSC]
   Float_t         etaWidthSC[5];   //[nSC]
   Float_t         e3x3SC[5];   //[nSC]
   Float_t         e3x1SC[5];   //[nSC]
   Float_t         e1x3SC[5];   //[nSC]
   Float_t         e4x4SC[5];   //[nSC]
   Float_t         e5x5SC[5];   //[nSC]
   Float_t         eMaxSC[5];   //[nSC]
   Float_t         e2x2SC[5];   //[nSC]
   Float_t         e2ndSC[5];   //[nSC]
   Float_t         e1x5SC[5];   //[nSC]
   Float_t         e2x5MaxSC[5];   //[nSC]
   Float_t         e2x5LeftSC[5];   //[nSC]
   Float_t         e2x5RightSC[5];   //[nSC]
   Float_t         e2x5TopSC[5];   //[nSC]
   Float_t         e2x5BottomSC[5];   //[nSC]
   Float_t         eLeftSC[5];   //[nSC]
   Float_t         eRightSC[5];   //[nSC]
   Float_t         eTopSC[5];   //[nSC]
   Float_t         eBottomSC[5];   //[nSC]
   Float_t         e4SwissCrossSC[5];   //[nSC]
   Float_t         covIEtaIEtaSC[5];   //[nSC]
   Float_t         covIEtaIPhiSC[5];   //[nSC]
   Float_t         covIPhiIPhiSC[5];   //[nSC]
   Float_t         sMajSC[5];   //[nSC]
   Float_t         sMinSC[5];   //[nSC]
   Float_t         alphaSC[5];   //[nSC]
   Float_t         hOverESC[5];   //[nSC]
   Int_t           recoFlagSC[5];   //[nSC]
   Float_t         timeSC[5];   //[nSC]
   Float_t         chi2SC[5];   //[nSC]
   Float_t         seedEnergySC[5];   //[nSC]
   Float_t         seedXSC[5];   //[nSC]
   Float_t         seedYSC[5];   //[nSC]
   Float_t         esEffsIxIxSC[5];   //[nSC]
   Float_t         esEffsIyIySC[5];   //[nSC]
   Float_t         esL1EnergySC[5];   //[nSC]
   Float_t         esL2EnergySC[5];   //[nSC]
   Int_t           esL1StripsSC[5];   //[nSC]
   Int_t           esL2StripsSC[5];   //[nSC]
   Int_t           nPFSC;
   Int_t           nBCPFSC[3];   //[nPFSC]
   Int_t           nCrystalsPFSC[3];   //[nPFSC]
   Float_t         rawEnergyPFSC[3];   //[nPFSC]
   Float_t         energyPFSC[3];   //[nPFSC]
   Float_t         seedClusterEnergyPFSC[3];   //[nPFSC]
   Float_t         esEnergyPFSC[3];   //[nPFSC]
   Float_t         etaPFSC[3];   //[nPFSC]
   Float_t         thetaPFSC[3];   //[nPFSC]
   Float_t         phiPFSC[3];   //[nPFSC]
   Float_t         xPosPFSC[3];   //[nPFSC]
   Float_t         yPosPFSC[3];   //[nPFSC]
   Float_t         zPosPFSC[3];   //[nPFSC]
   Float_t         phiWidthPFSC[3];   //[nPFSC]
   Float_t         etaWidthPFSC[3];   //[nPFSC]
   Float_t         e3x3PFSC[3];   //[nPFSC]
   Float_t         e3x1PFSC[3];   //[nPFSC]
   Float_t         e1x3PFSC[3];   //[nPFSC]
   Float_t         e4x4PFSC[3];   //[nPFSC]
   Float_t         e5x5PFSC[3];   //[nPFSC]
   Float_t         eMaxPFSC[3];   //[nPFSC]
   Float_t         e2x2PFSC[3];   //[nPFSC]
   Float_t         e2ndPFSC[3];   //[nPFSC]
   Float_t         e1x5PFSC[3];   //[nPFSC]
   Float_t         e2x5MaxPFSC[3];   //[nPFSC]
   Float_t         e2x5LeftPFSC[3];   //[nPFSC]
   Float_t         e2x5RightPFSC[3];   //[nPFSC]
   Float_t         e2x5TopPFSC[3];   //[nPFSC]
   Float_t         e2x5BottomPFSC[3];   //[nPFSC]
   Float_t         eLeftPFSC[3];   //[nPFSC]
   Float_t         eRightPFSC[3];   //[nPFSC]
   Float_t         eTopPFSC[3];   //[nPFSC]
   Float_t         eBottomPFSC[3];   //[nPFSC]
   Float_t         e4SwissCrossPFSC[3];   //[nPFSC]
   Float_t         covIEtaIEtaPFSC[3];   //[nPFSC]
   Float_t         covIEtaIPhiPFSC[3];   //[nPFSC]
   Float_t         covIPhiIPhiPFSC[3];   //[nPFSC]
   Float_t         sMajPFSC[3];   //[nPFSC]
   Float_t         sMinPFSC[3];   //[nPFSC]
   Float_t         alphaPFSC[3];   //[nPFSC]
   Float_t         hOverEPFSC[3];   //[nPFSC]
   Int_t           recoFlagPFSC[3];   //[nPFSC]
   Float_t         timePFSC[3];   //[nPFSC]
   Float_t         chi2PFSC[3];   //[nPFSC]
   Float_t         seedEnergyPFSC[3];   //[nPFSC]
   Float_t         seedXPFSC[3];   //[nPFSC]
   Float_t         seedYPFSC[3];   //[nPFSC]
   Float_t         esEffsIxIxPFSC[3];   //[nPFSC]
   Float_t         esEffsIyIyPFSC[3];   //[nPFSC]
   Float_t         esL1EnergyPFSC[3];   //[nPFSC]
   Float_t         esL2EnergyPFSC[3];   //[nPFSC]
   Int_t           esL1StripsPFSC[3];   //[nPFSC]
   Int_t           esL2StripsPFSC[3];   //[nPFSC]
   Int_t           nPhoPFSC;
   Int_t           nBCPhoPFSC[2];   //[nPhoPFSC]
   Int_t           nCrystalsPhoPFSC[2];   //[nPhoPFSC]
   Float_t         rawEnergyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         energyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         seedClusterEnergyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         esEnergyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         etaPhoPFSC[2];   //[nPhoPFSC]
   Float_t         thetaPhoPFSC[2];   //[nPhoPFSC]
   Float_t         phiPhoPFSC[2];   //[nPhoPFSC]
   Float_t         xPosPhoPFSC[2];   //[nPhoPFSC]
   Float_t         yPosPhoPFSC[2];   //[nPhoPFSC]
   Float_t         zPosPhoPFSC[2];   //[nPhoPFSC]
   Float_t         phiWidthPhoPFSC[2];   //[nPhoPFSC]
   Float_t         etaWidthPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e3x3PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e3x1PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e1x3PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e4x4PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e5x5PhoPFSC[2];   //[nPhoPFSC]
   Float_t         eMaxPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x2PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2ndPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e1x5PhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x5MaxPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x5LeftPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x5RightPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x5TopPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e2x5BottomPhoPFSC[2];   //[nPhoPFSC]
   Float_t         eLeftPhoPFSC[2];   //[nPhoPFSC]
   Float_t         eRightPhoPFSC[2];   //[nPhoPFSC]
   Float_t         eTopPhoPFSC[2];   //[nPhoPFSC]
   Float_t         eBottomPhoPFSC[2];   //[nPhoPFSC]
   Float_t         e4SwissCrossPhoPFSC[2];   //[nPhoPFSC]
   Float_t         covIEtaIEtaPhoPFSC[2];   //[nPhoPFSC]
   Float_t         covIEtaIPhiPhoPFSC[2];   //[nPhoPFSC]
   Float_t         covIPhiIPhiPhoPFSC[2];   //[nPhoPFSC]
   Float_t         sMajPhoPFSC[2];   //[nPhoPFSC]
   Float_t         sMinPhoPFSC[2];   //[nPhoPFSC]
   Float_t         alphaPhoPFSC[2];   //[nPhoPFSC]
   Float_t         hOverEPhoPFSC[2];   //[nPhoPFSC]
   Int_t           recoFlagPhoPFSC[2];   //[nPhoPFSC]
   Float_t         timePhoPFSC[2];   //[nPhoPFSC]
   Float_t         chi2PhoPFSC[2];   //[nPhoPFSC]
   Float_t         seedEnergyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         seedXPhoPFSC[2];   //[nPhoPFSC]
   Float_t         seedYPhoPFSC[2];   //[nPhoPFSC]
   Float_t         esEffsIxIxPhoPFSC[2];   //[nPhoPFSC]
   Float_t         esEffsIyIyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         esL1EnergyPhoPFSC[2];   //[nPhoPFSC]
   Float_t         esL2EnergyPhoPFSC[2];   //[nPhoPFSC]
   Int_t           esL1StripsPhoPFSC[2];   //[nPhoPFSC]
   Int_t           esL2StripsPhoPFSC[2];   //[nPhoPFSC]
   Int_t           nBC;
   Float_t         etaBC[5];   //[nBC]
   Float_t         thetaBC[5];   //[nBC]
   Float_t         phiBC[5];   //[nBC]
   Float_t         etaCrystalBC[5];   //[nBC]
   Float_t         phiCrystalBC[5];   //[nBC]
   Int_t           iEtaBC[5];   //[nBC]
   Int_t           iPhiBC[5];   //[nBC]
   Float_t         thetaTiltBC[5];   //[nBC]
   Float_t         phiTiltBC[5];   //[nBC]
   Int_t           indexSCBC[5];   //[nBC]
   Int_t           nPFBC;
   Float_t         etaPFBC[9];   //[nPFBC]
   Float_t         thetaPFBC[9];   //[nPFBC]
   Float_t         phiPFBC[9];   //[nPFBC]
   Float_t         etaCrystalPFBC[9];   //[nPFBC]
   Float_t         phiCrystalPFBC[9];   //[nPFBC]
   Int_t           iEtaPFBC[9];   //[nPFBC]
   Int_t           iPhiPFBC[9];   //[nPFBC]
   Float_t         thetaTiltPFBC[9];   //[nPFBC]
   Float_t         phiTiltPFBC[9];   //[nPFBC]
   Int_t           indexSCPFBC[9];   //[nPFBC]
   Int_t           nPhoPFBC;
   Float_t         etaPhoPFBC[8];   //[nPhoPFBC]
   Float_t         thetaPhoPFBC[8];   //[nPhoPFBC]
   Float_t         phiPhoPFBC[8];   //[nPhoPFBC]
   Float_t         etaCrystalPhoPFBC[8];   //[nPhoPFBC]
   Float_t         phiCrystalPhoPFBC[8];   //[nPhoPFBC]
   Int_t           iEtaPhoPFBC[8];   //[nPhoPFBC]
   Int_t           iPhiPhoPFBC[8];   //[nPhoPFBC]
   Float_t         thetaTiltPhoPFBC[8];   //[nPhoPFBC]
   Float_t         phiTiltPhoPFBC[8];   //[nPhoPFBC]
   Int_t           indexSCPhoPFBC[8];   //[nPhoPFBC]
   Int_t           nTrack;
   Float_t         pxTrack[13];   //[nTrack]
   Float_t         pyTrack[13];   //[nTrack]
   Float_t         pzTrack[13];   //[nTrack]
   Int_t           vtxIndexTrack[13];   //[nTrack]
   Float_t         vtxWeightTrack[13];   //[nTrack]
   Float_t         impactPar3DTrack[13];   //[nTrack]
   Float_t         impactPar3DErrorTrack[13];   //[nTrack]
   Float_t         transvImpactParTrack[13];   //[nTrack]
   Float_t         transvImpactParErrorTrack[13];   //[nTrack]
   Float_t         impactPar3DBiasedTrack[13];   //[nTrack]
   Float_t         impactPar3DBiasedErrorTrack[13];   //[nTrack]
   Float_t         transvImpactParBiasedTrack[13];   //[nTrack]
   Float_t         transvImpactParBiasedErrorTrack[13];   //[nTrack]
   Float_t         chargeTrack[13];   //[nTrack]
   Float_t         ptErrorTrack[13];   //[nTrack]
   Float_t         trackValidHitsTrack[13];   //[nTrack]
   Float_t         trackLostHitsTrack[13];   //[nTrack]
   Float_t         trackNormalizedChi2Track[13];   //[nTrack]
   Int_t           qualityMaskTrack[13];   //[nTrack]
   Float_t         trackVxTrack[13];   //[nTrack]
   Float_t         trackVyTrack[13];   //[nTrack]
   Float_t         trackVzTrack[13];   //[nTrack]
   Float_t         d0Track[13];   //[nTrack]
   Float_t         d0ErrorTrack[13];   //[nTrack]
   Float_t         dzTrack[13];   //[nTrack]
   Float_t         dzErrorTrack[13];   //[nTrack]
   Int_t           pixelHitsTrack[13];   //[nTrack]
   Int_t           trackerLayersWithMeasurementTrack[13];   //[nTrack]
   Int_t           expInnerLayersTrack[13];   //[nTrack]
   Int_t           numberOfValidPixelBarrelHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidPixelEndcapHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidStripTIBHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidStripTIDHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidStripTOBHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidStripTECHitsTrack[13];   //[nTrack]
   Int_t           numberOfValidMuonHitsTrack[13];   //[nTrack]
   Int_t           nGsfTrack;
   Float_t         pxGsfTrack[14];   //[nGsfTrack]
   Float_t         pyGsfTrack[14];   //[nGsfTrack]
   Float_t         pzGsfTrack[14];   //[nGsfTrack]
   Int_t           vtxIndexGsfTrack[14];   //[nGsfTrack]
   Float_t         vtxWeightGsfTrack[14];   //[nGsfTrack]
   Float_t         impactPar3DGsfTrack[14];   //[nGsfTrack]
   Float_t         impactPar3DErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         transvImpactParGsfTrack[14];   //[nGsfTrack]
   Float_t         transvImpactParErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         impactPar3DBiasedGsfTrack[14];   //[nGsfTrack]
   Float_t         impactPar3DBiasedErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         transvImpactParBiasedGsfTrack[14];   //[nGsfTrack]
   Float_t         transvImpactParBiasedErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         chargeGsfTrack[14];   //[nGsfTrack]
   Float_t         ptErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         trackValidHitsGsfTrack[14];   //[nGsfTrack]
   Float_t         trackLostHitsGsfTrack[14];   //[nGsfTrack]
   Float_t         trackNormalizedChi2GsfTrack[14];   //[nGsfTrack]
   Int_t           qualityMaskGsfTrack[14];   //[nGsfTrack]
   Float_t         trackVxGsfTrack[14];   //[nGsfTrack]
   Float_t         trackVyGsfTrack[14];   //[nGsfTrack]
   Float_t         trackVzGsfTrack[14];   //[nGsfTrack]
   Float_t         d0GsfTrack[14];   //[nGsfTrack]
   Float_t         d0ErrorGsfTrack[14];   //[nGsfTrack]
   Float_t         dzGsfTrack[14];   //[nGsfTrack]
   Float_t         dzErrorGsfTrack[14];   //[nGsfTrack]
   Int_t           pixelHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           trackerLayersWithMeasurementGsfTrack[14];   //[nGsfTrack]
   Int_t           expInnerLayersGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidPixelBarrelHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidPixelEndcapHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidStripTIBHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidStripTIDHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidStripTOBHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidStripTECHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           numberOfValidMuonHitsGsfTrack[14];   //[nGsfTrack]
   Int_t           chargeModeGsfTrack[14];   //[nGsfTrack]
   Float_t         pxModeGsfTrack[14];   //[nGsfTrack]
   Float_t         pyModeGsfTrack[14];   //[nGsfTrack]
   Float_t         pzModeGsfTrack[14];   //[nGsfTrack]
   Int_t           nGlobalMuonTrack;
   Float_t         pxGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         pyGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         pzGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           vtxIndexGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         vtxWeightGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         impactPar3DGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         impactPar3DErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         transvImpactParGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         transvImpactParErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         impactPar3DBiasedGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         impactPar3DBiasedErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         transvImpactParBiasedGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         transvImpactParBiasedErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         chargeGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         ptErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackValidHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackLostHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackNormalizedChi2GlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           qualityMaskGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackVxGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackVyGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         trackVzGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         d0GlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         d0ErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         dzGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Float_t         dzErrorGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           pixelHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           trackerLayersWithMeasurementGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           expInnerLayersGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidPixelBarrelHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidPixelEndcapHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidStripTIBHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidStripTIDHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidStripTOBHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidStripTECHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           numberOfValidMuonHitsGlobalMuonTrack[3];   //[nGlobalMuonTrack]
   Int_t           nSTAMuonTrack;
   Float_t         pxSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         pySTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         pzSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         chargeSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         ptErrorSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackValidHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackLostHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackNormalizedChi2STAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           qualityMaskSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackVxSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackVySTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         trackVzSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         d0STAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         d0ErrorSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         dzSTAMuonTrack[3];   //[nSTAMuonTrack]
   Float_t         dzErrorSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           pixelHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           trackerLayersWithMeasurementSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           expInnerLayersSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidPixelBarrelHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidPixelEndcapHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidStripTIBHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidStripTIDHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidStripTOBHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidStripTECHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           numberOfValidMuonHitsSTAMuonTrack[3];   //[nSTAMuonTrack]
   Int_t           nPV;
   Float_t         PVxPV[40];   //[nPV]
   Float_t         PVyPV[40];   //[nPV]
   Float_t         PVzPV[40];   //[nPV]
   Float_t         PVErrxPV[40];   //[nPV]
   Float_t         PVErryPV[40];   //[nPV]
   Float_t         PVErrzPV[40];   //[nPV]
   Float_t         SumPtPV[40];   //[nPV]
   Float_t         rhoPV[40];   //[nPV]
   Float_t         ndofPV[40];   //[nPV]
   Float_t         chi2PV[40];   //[nPV]
   Float_t         normChi2PV[40];   //[nPV]
   Float_t         pxChMetPV[40];   //[nPV]
   Float_t         pyChMetPV[40];   //[nPV]
   Float_t         pzChMetPV[40];   //[nPV]
   Int_t           isFakePV[40];   //[nPV]
   Int_t           isValidPV[40];   //[nPV]
   Int_t           trackSizePV[40];   //[nPV]
   Int_t           nMuon;
   Int_t           chargeMuon[13];   //[nMuon]
   Float_t         energyMuon[13];   //[nMuon]
   Float_t         thetaMuon[13];   //[nMuon]
   Float_t         etaMuon[13];   //[nMuon]
   Float_t         phiMuon[13];   //[nMuon]
   Float_t         pxMuon[13];   //[nMuon]
   Float_t         pyMuon[13];   //[nMuon]
   Float_t         pzMuon[13];   //[nMuon]
   Float_t         vertexXMuon[13];   //[nMuon]
   Float_t         vertexYMuon[13];   //[nMuon]
   Float_t         vertexZMuon[13];   //[nMuon]
   Int_t           trackIndexMuon[13];   //[nMuon]
   Int_t           standAloneTrackIndexMuon[13];   //[nMuon]
   Int_t           combinedTrackIndexMuon[13];   //[nMuon]
   Int_t           muonIdMuon[13];   //[nMuon]
   Bool_t          pfmuonIdMuon[13];   //[nMuon]
   Int_t           typeMuon[13];   //[nMuon]
   Int_t           numberOfMatchesMuon[13];   //[nMuon]
   Float_t         sumPt03Muon[13];   //[nMuon]
   Float_t         emEt03Muon[13];   //[nMuon]
   Float_t         hadEt03Muon[13];   //[nMuon]
   Float_t         hoEt03Muon[13];   //[nMuon]
   Float_t         nTrk03Muon[13];   //[nMuon]
   Float_t         nJets03Muon[13];   //[nMuon]
   Float_t         sumPt05Muon[13];   //[nMuon]
   Float_t         emEt05Muon[13];   //[nMuon]
   Float_t         hadEt05Muon[13];   //[nMuon]
   Float_t         hoEt05Muon[13];   //[nMuon]
   Float_t         nTrk05Muon[13];   //[nMuon]
   Float_t         nJets05Muon[13];   //[nMuon]
   Float_t         pfCombinedIsoMuon[13];   //[nMuon]
   Float_t         pfCandChargedIso01Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso01Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso01Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso02Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso02Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso02Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso03Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso03Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso03Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso04Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso04Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso04Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso05Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso05Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso05Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso06Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso06Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso06Muon[13];   //[nMuon]
   Float_t         pfCandChargedIso07Muon[13];   //[nMuon]
   Float_t         pfCandNeutralIso07Muon[13];   //[nMuon]
   Float_t         pfCandPhotonIso07Muon[13];   //[nMuon]
   Float_t         pfCandChargedDirIso04Muon[13];   //[nMuon]
   Float_t         pfCandNeutralDirIso04Muon[13];   //[nMuon]
   Float_t         pfCandPhotonDirIso04Muon[13];   //[nMuon]
   Float_t         pfIsolationSumPUPtR03Muon[13];   //[nMuon]
   Float_t         pfIsolationSumPUPtR04Muon[13];   //[nMuon]
   Float_t         pfCandChargedPUIso03Muon[13];   //[nMuon]
   Float_t         pfCandChargedPUIso04Muon[13];   //[nMuon]
   Float_t         kinkMuon[13];   //[nMuon]
   Float_t         mvaisoMuon[13];   //[nMuon]
   Float_t         EcalExpDepoMuon[13];   //[nMuon]
   Float_t         HcalExpDepoMuon[13];   //[nMuon]
   Float_t         HoExpDepoMuon[13];   //[nMuon]
   Float_t         emS9Muon[13];   //[nMuon]
   Float_t         hadS9Muon[13];   //[nMuon]
   Float_t         hoS9Muon[13];   //[nMuon]
   Float_t         CaloCompMuon[13];   //[nMuon]
   Int_t           nPFCand;
   Int_t           chargePFCand[8];   //[nPFCand]
   Float_t         energyPFCand[8];   //[nPFCand]
   Float_t         thetaPFCand[8];   //[nPFCand]
   Float_t         etaPFCand[8];   //[nPFCand]
   Float_t         phiPFCand[8];   //[nPFCand]
   Float_t         pxPFCand[8];   //[nPFCand]
   Float_t         pyPFCand[8];   //[nPFCand]
   Float_t         pzPFCand[8];   //[nPFCand]
   Float_t         vertexXPFCand[8];   //[nPFCand]
   Float_t         vertexYPFCand[8];   //[nPFCand]
   Float_t         vertexZPFCand[8];   //[nPFCand]
   Int_t           particleIdPFCand[8];   //[nPFCand]
   Double_t        ChargedIso03PFCand[8];   //[nPFCand]
   Double_t        NeutralIso03PFCand[8];   //[nPFCand]
   Double_t        PhotonIso03PFCand[8];   //[nPFCand]
   Double_t        SumPUPtR03PFCand[8];   //[nPFCand]
   Int_t           nReducedPFCand;
   Int_t           chargeReducedPFCand[317];   //[nReducedPFCand]
   Float_t         energyReducedPFCand[317];   //[nReducedPFCand]
   Float_t         thetaReducedPFCand[317];   //[nReducedPFCand]
   Float_t         etaReducedPFCand[317];   //[nReducedPFCand]
   Float_t         phiReducedPFCand[317];   //[nReducedPFCand]
   Float_t         pxReducedPFCand[317];   //[nReducedPFCand]
   Float_t         pyReducedPFCand[317];   //[nReducedPFCand]
   Float_t         pzReducedPFCand[317];   //[nReducedPFCand]
   Float_t         vertexXReducedPFCand[317];   //[nReducedPFCand]
   Float_t         vertexYReducedPFCand[317];   //[nReducedPFCand]
   Float_t         vertexZReducedPFCand[317];   //[nReducedPFCand]
   Int_t           nMet;
   Int_t           chargeMet[1];   //[nMet]
   Float_t         energyMet[1];   //[nMet]
   Float_t         thetaMet[1];   //[nMet]
   Float_t         etaMet[1];   //[nMet]
   Float_t         phiMet[1];   //[nMet]
   Float_t         pxMet[1];   //[nMet]
   Float_t         pyMet[1];   //[nMet]
   Float_t         pzMet[1];   //[nMet]
   Float_t         vertexXMet[1];   //[nMet]
   Float_t         vertexYMet[1];   //[nMet]
   Float_t         vertexZMet[1];   //[nMet]
   Float_t         sumEtMet[1];   //[nMet]
   Float_t         mEtSigMet[1];   //[nMet]
   Float_t         significanceMet[1];   //[nMet]
   Int_t           nPFMet;
   Int_t           chargePFMet[4];   //[nPFMet]
   Float_t         energyPFMet[4];   //[nPFMet]
   Float_t         thetaPFMet[4];   //[nPFMet]
   Float_t         etaPFMet[4];   //[nPFMet]
   Float_t         phiPFMet[4];   //[nPFMet]
   Float_t         pxPFMet[4];   //[nPFMet]
   Float_t         pyPFMet[4];   //[nPFMet]
   Float_t         pzPFMet[4];   //[nPFMet]
   Float_t         vertexXPFMet[4];   //[nPFMet]
   Float_t         vertexYPFMet[4];   //[nPFMet]
   Float_t         vertexZPFMet[4];   //[nPFMet]
   Float_t         sumEtPFMet[4];   //[nPFMet]
   Float_t         mEtSigPFMet[4];   //[nPFMet]
   Float_t         significancePFMet[4];   //[nPFMet]
   Int_t           nPFChMet;
   Int_t           chargePFChMet[1];   //[nPFChMet]
   Float_t         energyPFChMet[1];   //[nPFChMet]
   Float_t         thetaPFChMet[1];   //[nPFChMet]
   Float_t         etaPFChMet[1];   //[nPFChMet]
   Float_t         phiPFChMet[1];   //[nPFChMet]
   Float_t         pxPFChMet[1];   //[nPFChMet]
   Float_t         pyPFChMet[1];   //[nPFChMet]
   Float_t         pzPFChMet[1];   //[nPFChMet]
   Float_t         vertexXPFChMet[1];   //[nPFChMet]
   Float_t         vertexYPFChMet[1];   //[nPFChMet]
   Float_t         vertexZPFChMet[1];   //[nPFChMet]
   Float_t         sumEtPFChMet[1];   //[nPFChMet]
   Float_t         mEtSigPFChMet[1];   //[nPFChMet]
   Float_t         significancePFChMet[1];   //[nPFChMet]
   Int_t           nGenMet;
   Int_t           chargeGenMet[1];   //[nGenMet]
   Float_t         energyGenMet[1];   //[nGenMet]
   Float_t         thetaGenMet[1];   //[nGenMet]
   Float_t         etaGenMet[1];   //[nGenMet]
   Float_t         phiGenMet[1];   //[nGenMet]
   Float_t         pxGenMet[1];   //[nGenMet]
   Float_t         pyGenMet[1];   //[nGenMet]
   Float_t         pzGenMet[1];   //[nGenMet]
   Float_t         vertexXGenMet[1];   //[nGenMet]
   Float_t         vertexYGenMet[1];   //[nGenMet]
   Float_t         vertexZGenMet[1];   //[nGenMet]
   Int_t           nAK5Jet;
   Int_t           chargeAK5Jet[103];   //[nAK5Jet]
   Float_t         energyAK5Jet[103];   //[nAK5Jet]
   Float_t         thetaAK5Jet[103];   //[nAK5Jet]
   Float_t         etaAK5Jet[103];   //[nAK5Jet]
   Float_t         phiAK5Jet[103];   //[nAK5Jet]
   Float_t         pxAK5Jet[103];   //[nAK5Jet]
   Float_t         pyAK5Jet[103];   //[nAK5Jet]
   Float_t         pzAK5Jet[103];   //[nAK5Jet]
   Float_t         vertexXAK5Jet[103];   //[nAK5Jet]
   Float_t         vertexYAK5Jet[103];   //[nAK5Jet]
   Float_t         vertexZAK5Jet[103];   //[nAK5Jet]
   Float_t         emFracAK5Jet[103];   //[nAK5Jet]
   Float_t         hadFracAK5Jet[103];   //[nAK5Jet]
   Float_t         areaAK5Jet[103];   //[nAK5Jet]
   Int_t           IdAK5Jet[103];   //[nAK5Jet]
   Int_t           nHitAK5Jet[103];   //[nAK5Jet]
   Int_t           nHit90AK5Jet[103];   //[nAK5Jet]
   Float_t         fHPDAK5Jet[103];   //[nAK5Jet]
   Float_t         covEtaEtaAK5Jet[103];   //[nAK5Jet]
   Float_t         covPhiPhiAK5Jet[103];   //[nAK5Jet]
   Float_t         fLSAK5Jet[103];   //[nAK5Jet]
   Float_t         fOOTAK5Jet[103];   //[nAK5Jet]
   Float_t         combinedSecondaryVertexBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         simpleSecondaryVertexHighEffBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         simpleSecondaryVertexHighPurBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         trackCountingHighPurBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         trackCountingHighEffBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         trackCountingVeryHighEffBJetTagsAK5Jet[103];   //[nAK5Jet]
   Float_t         uncorrEnergyAK5Jet[103];   //[nAK5Jet]
   Int_t           nAK5PFNoPUJet;
   Int_t           chargeAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         energyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         uncorrenergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         thetaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         etaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         phiAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pxAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pzAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         uncorrpxAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         uncorrpyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         uncorrpzAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         vertexXAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         vertexYAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         vertexZAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         chargedHadronEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         neutralHadronEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         photonEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         electronEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         muonEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         HFHadronEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         HFEMEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           chargedHadronMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           neutralHadronMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           photonMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           electronMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           muonMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           HFHadronMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           HFEMMultiplicityAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         areaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         weightedDz1AK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         weightedDz2AK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         betastarAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         rmsCandsHandAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         jetIdMvaFullAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         dR2MeanIdMvaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         dRMeanIdMvaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         betastarIdMvaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         betastarclassicIdMvaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         chargedEmEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         neutralEmEnergyAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         combinedSecondaryVertexBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         combinedSecondaryVertexMVABJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         jetBProbabilityBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         jetProbabilityBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         simpleSecondaryVertexHighEffBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         simpleSecondaryVertexHighPurBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         trackCountingHighPurBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         trackCountingHighEffBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         trackCountingVeryHighEffBJetTagsAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         rmsCandAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         ptDAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         axis1AK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         axis2AK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pullAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         tanaAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         rmsCand_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         ptD_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         axis1_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         axis2_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pull_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         tana_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           nChg_ptCutAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           nChg_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           nChg_ptCut_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           nNeutral_ptCutAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         RchgAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         RneutralAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         RAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         Rchg_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pTMaxAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pTMaxChgAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pTMaxNeutralAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Float_t         pTMaxChg_QCAK5PFNoPUJet[40];   //[nAK5PFNoPUJet]
   Int_t           nAK5PFPUcorrJet;
   Int_t           chargeAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         energyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         uncorrenergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         thetaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         etaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         phiAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pxAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pzAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         uncorrpxAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         uncorrpyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         uncorrpzAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         vertexXAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         vertexYAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         vertexZAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         chargedHadronEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         neutralHadronEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         photonEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         electronEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         muonEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         HFHadronEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         HFEMEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           chargedHadronMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           neutralHadronMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           photonMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           electronMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           muonMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           HFHadronMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           HFEMMultiplicityAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         areaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         weightedDz1AK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         weightedDz2AK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         betastarAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         rmsCandsHandAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         jetIdMvaFullAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         dR2MeanIdMvaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         dRMeanIdMvaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         betastarIdMvaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         betastarclassicIdMvaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         chargedEmEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         neutralEmEnergyAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         combinedSecondaryVertexBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         combinedSecondaryVertexMVABJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         jetBProbabilityBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         jetProbabilityBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         simpleSecondaryVertexHighEffBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         simpleSecondaryVertexHighPurBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         trackCountingHighPurBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         trackCountingHighEffBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         trackCountingVeryHighEffBJetTagsAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         rmsCandAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         ptDAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         axis1AK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         axis2AK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pullAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         tanaAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         rmsCand_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         ptD_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         axis1_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         axis2_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pull_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         tana_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           nChg_ptCutAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           nChg_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           nChg_ptCut_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           nNeutral_ptCutAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         RchgAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         RneutralAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         RAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         Rchg_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pTMaxAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pTMaxChgAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pTMaxNeutralAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Float_t         pTMaxChg_QCAK5PFPUcorrJet[72];   //[nAK5PFPUcorrJet]
   Int_t           nAK5GenJet;
   Int_t           chargeAK5GenJet[6];   //[nAK5GenJet]
   Float_t         energyAK5GenJet[6];   //[nAK5GenJet]
   Float_t         thetaAK5GenJet[6];   //[nAK5GenJet]
   Float_t         etaAK5GenJet[6];   //[nAK5GenJet]
   Float_t         phiAK5GenJet[6];   //[nAK5GenJet]
   Float_t         pxAK5GenJet[6];   //[nAK5GenJet]
   Float_t         pyAK5GenJet[6];   //[nAK5GenJet]
   Float_t         pzAK5GenJet[6];   //[nAK5GenJet]
   Float_t         vertexXAK5GenJet[6];   //[nAK5GenJet]
   Float_t         vertexYAK5GenJet[6];   //[nAK5GenJet]
   Float_t         vertexZAK5GenJet[6];   //[nAK5GenJet]
   Double_t        genPtHat;
   Double_t        genProcessId;
   Double_t        genWeight;
   Double_t        genAlphaQCD;
   Double_t        genAlphaQED;
   Bool_t          failHPDHits;
   Bool_t          failHPDNoOtherHits;
   Bool_t          failMaxZeros;
   Bool_t          failTS4TS5;
   Bool_t          failE2E10;
   Bool_t          failICHEPFilter;
   Bool_t          fail2011Filter;
   Int_t           nIsolatedHBHENoise;
   Double_t        sumEIsolatedHBHENoise;
   Int_t           nTimingHBHENoise;
   Double_t        sumETimingHBHENoise;
   Int_t           nFlatHBHENoise;
   Double_t        sumEFlatHBHENoise;
   Int_t           nSpikeHBHENoise;
   Double_t        sumESpikeHBHENoise;
   Int_t           nTriangleHBHENoise;
   Double_t        sumETriangleHBHENoise;
   Int_t           nHFPMT;
   Double_t        sumEHFPMT;

   // List of branches
   TBranch        *b_nl1Technical;   //!
   TBranch        *b_l1Technical;   //!
   TBranch        *b_nl1Global;   //!
   TBranch        *b_l1Global;   //!
   TBranch        *b_rhoFastjet;   //!
   TBranch        *b_sigmaFastjet;   //!
   TBranch        *b_rhoJetsFastJet;   //!
   TBranch        *b_rhoJetsCentralNeutralFastJet;   //!
   TBranch        *b_rhoJetsFastJet_nopu;   //!
   TBranch        *b_runNumber;   //!
   TBranch        *b_eventNumber;   //!
   TBranch        *b_lumiBlock;   //!
   TBranch        *b_bunchCrossing;   //!
   TBranch        *b_orbitNumber;   //!
   TBranch        *b_beamSpotX;   //!
   TBranch        *b_beamSpotY;   //!
   TBranch        *b_beamSpotZ;   //!
   TBranch        *b_nBX;   //!
   TBranch        *b_nPU;   //!
   TBranch        *b_bxPU;   //!
   TBranch        *b_nMc;   //!
   TBranch        *b_pMc;   //!
   TBranch        *b_thetaMc;   //!
   TBranch        *b_etaMc;   //!
   TBranch        *b_phiMc;   //!
   TBranch        *b_energyMc;   //!
   TBranch        *b_vxMc;   //!
   TBranch        *b_vyMc;   //!
   TBranch        *b_vzMc;   //!
   TBranch        *b_idMc;   //!
   TBranch        *b_mothMc;   //!
   TBranch        *b_statusMc;   //!
   TBranch        *b_nTrg;   //!
   TBranch        *b_firedTrg;   //!
   TBranch        *b_nHLT;   //!
   TBranch        *b_indexHLT;   //!
   TBranch        *b_nameHLT;   //!
   TBranch        *b_nTriggerPaths;   //!
   TBranch        *b_nTriggerObsPassing;   //!
   TBranch        *b_sizePassing;   //!
   TBranch        *b_indexPassing;   //!
   TBranch        *b_indexPassingPerPath;   //!
   TBranch        *b_nTriggerObs;   //!
   TBranch        *b_triggerObsPt;   //!
   TBranch        *b_triggerObsPhi;   //!
   TBranch        *b_triggerObsEta;   //!
   TBranch        *b_triggerObsMass;   //!
   TBranch        *b_nEle;   //!
   TBranch        *b_chargeEle;   //!
   TBranch        *b_energyEle;   //!
   TBranch        *b_thetaEle;   //!
   TBranch        *b_etaEle;   //!
   TBranch        *b_phiEle;   //!
   TBranch        *b_pxEle;   //!
   TBranch        *b_pyEle;   //!
   TBranch        *b_pzEle;   //!
   TBranch        *b_vertexXEle;   //!
   TBranch        *b_vertexYEle;   //!
   TBranch        *b_vertexZEle;   //!
   TBranch        *b_fiducialFlagsEle;   //!
   TBranch        *b_recoFlagsEle;   //!
   TBranch        *b_trackMomentumErrorEle;   //!
   TBranch        *b_superClusterIndexEle;   //!
   TBranch        *b_PFsuperClusterIndexEle;   //!
   TBranch        *b_trackIndexEle;   //!
   TBranch        *b_gsfTrackIndexEle;   //!
   TBranch        *b_convDistEle;   //!
   TBranch        *b_convDcotEle;   //!
   TBranch        *b_convRadiusEle;   //!
   TBranch        *b_convTrackIndexEle;   //!
   TBranch        *b_scPixChargeEle;   //!
   TBranch        *b_hasMatchedConversionEle;   //!
   TBranch        *b_classificationEle;   //!
   TBranch        *b_fbremEle;   //!
   TBranch        *b_nbremsEle;   //!
   TBranch        *b_hOverEEle;   //!
   TBranch        *b_eSuperClusterOverPEle;   //!
   TBranch        *b_eSeedOverPoutEle;   //!
   TBranch        *b_eEleClusterOverPoutEle;   //!
   TBranch        *b_deltaEtaAtVtxEle;   //!
   TBranch        *b_deltaPhiAtVtxEle;   //!
   TBranch        *b_deltaEtaAtCaloEle;   //!
   TBranch        *b_deltaPhiAtCaloEle;   //!
   TBranch        *b_deltaEtaEleClusterTrackAtCaloEle;   //!
   TBranch        *b_deltaPhiEleClusterTrackAtCaloEle;   //!
   TBranch        *b_dr03TkSumPtEle;   //!
   TBranch        *b_dr03EcalRecHitSumEtEle;   //!
   TBranch        *b_dr03HcalTowerSumEtEle;   //!
   TBranch        *b_dr04TkSumPtEle;   //!
   TBranch        *b_dr04EcalRecHitSumEtEle;   //!
   TBranch        *b_dr04HcalTowerSumEtEle;   //!
   TBranch        *b_dr03HcalTowerSumEtFullConeEle;   //!
   TBranch        *b_dr04HcalTowerSumEtFullConeEle;   //!
   TBranch        *b_pflowMVAEle;   //!
   TBranch        *b_mvaidnontrigEle;   //!
   TBranch        *b_mvaidtrigEle;   //!
   TBranch        *b_mvaidisotrigEle;   //!
   TBranch        *b_pfCombinedIsoEle;   //!
   TBranch        *b_pfCandChargedIso03Ele;   //!
   TBranch        *b_pfCandNeutralIso03Ele;   //!
   TBranch        *b_pfCandPhotonIso03Ele;   //!
   TBranch        *b_pfCandChargedIso04Ele;   //!
   TBranch        *b_pfCandNeutralIso04Ele;   //!
   TBranch        *b_pfCandPhotonIso04Ele;   //!
   TBranch        *b_pfCandChargedDirIso04Ele;   //!
   TBranch        *b_pfCandNeutralDirIso04Ele;   //!
   TBranch        *b_pfCandPhotonDirIso04Ele;   //!
   TBranch        *b_pfCandChargedPUIso03Ele;   //!
   TBranch        *b_pfCandChargedPUIso04Ele;   //!
   TBranch        *b_nCalibEle;   //!
   TBranch        *b_chargeCalibEle;   //!
   TBranch        *b_energyCalibEle;   //!
   TBranch        *b_thetaCalibEle;   //!
   TBranch        *b_etaCalibEle;   //!
   TBranch        *b_phiCalibEle;   //!
   TBranch        *b_pxCalibEle;   //!
   TBranch        *b_pyCalibEle;   //!
   TBranch        *b_pzCalibEle;   //!
   TBranch        *b_vertexXCalibEle;   //!
   TBranch        *b_vertexYCalibEle;   //!
   TBranch        *b_vertexZCalibEle;   //!
   TBranch        *b_energyErrorCalibEle;   //!
   TBranch        *b_nPho;   //!
   TBranch        *b_nPerPVPho;   //!
   TBranch        *b_chargePho;   //!
   TBranch        *b_energyPho;   //!
   TBranch        *b_thetaPho;   //!
   TBranch        *b_etaPho;   //!
   TBranch        *b_phiPho;   //!
   TBranch        *b_pxPho;   //!
   TBranch        *b_pyPho;   //!
   TBranch        *b_pzPho;   //!
   TBranch        *b_vertexXPho;   //!
   TBranch        *b_vertexYPho;   //!
   TBranch        *b_vertexZPho;   //!
   TBranch        *b_fiducialFlagsPho;   //!
   TBranch        *b_recoFlagsPho;   //!
   TBranch        *b_superClusterIndexPho;   //!
   TBranch        *b_PFsuperClusterIndexPho;   //!
   TBranch        *b_hOverEPho;   //!
   TBranch        *b_hTowOverEPho;   //!
   TBranch        *b_dr03TkSumPtPho;   //!
   TBranch        *b_dr03HollowTkSumPtPho;   //!
   TBranch        *b_dr03EcalRecHitSumEtPho;   //!
   TBranch        *b_dr03HcalTowerSumEtPho;   //!
   TBranch        *b_dr04TkSumPtPho;   //!
   TBranch        *b_dr04HollowTkSumPtPho;   //!
   TBranch        *b_dr04EcalRecHitSumEtPho;   //!
   TBranch        *b_dr04HcalTowerSumEtPho;   //!
   TBranch        *b_chargedHadronIsoPho;   //!
   TBranch        *b_neutralHadronIsoPho;   //!
   TBranch        *b_photonIsoPho;   //!
   TBranch        *b_hasPixelSeedPho;   //!
   TBranch        *b_hasMatchedConversionPho;   //!
   TBranch        *b_dr01NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr01PhotonPFIsoPho;   //!
   TBranch        *b_dr02NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr02PhotonPFIsoPho;   //!
   TBranch        *b_dr03NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr03PhotonPFIsoPho;   //!
   TBranch        *b_dr04NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr04PhotonPFIsoPho;   //!
   TBranch        *b_dr05NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr05PhotonPFIsoPho;   //!
   TBranch        *b_dr06NeutralHadronPFIsoPho;   //!
   TBranch        *b_dr06PhotonPFIsoPho;   //!
   TBranch        *b_dr01ChargedHadronPFIsoPho;   //!
   TBranch        *b_dr02ChargedHadronPFIsoPho;   //!
   TBranch        *b_dr03ChargedHadronPFIsoPho;   //!
   TBranch        *b_dr04ChargedHadronPFIsoPho;   //!
   TBranch        *b_dr05ChargedHadronPFIsoPho;   //!
   TBranch        *b_dr06ChargedHadronPFIsoPho;   //!
   TBranch        *b_nConv;   //!
   TBranch        *b_pxPairConv;   //!
   TBranch        *b_pyPairConv;   //!
   TBranch        *b_pzPairConv;   //!
   TBranch        *b_pxRefittedPairConv;   //!
   TBranch        *b_pyRefittedPairConv;   //!
   TBranch        *b_pzRefittedPairConv;   //!
   TBranch        *b_etaRefittedPairConv;   //!
   TBranch        *b_phiRefittedPairConv;   //!
   TBranch        *b_ptRefittedPairConv;   //!
   TBranch        *b_energyRefittedPairConv;   //!
   TBranch        *b_eOverPRefittedPairConv;   //!
   TBranch        *b_zOfPVFromTracksConv;   //!
   TBranch        *b_xVtxConv;   //!
   TBranch        *b_yVtxConv;   //!
   TBranch        *b_zVtxConv;   //!
   TBranch        *b_chi2VtxConv;   //!
   TBranch        *b_chi2ProbVtxConv;   //!
   TBranch        *b_isValidVtxConv;   //!
   TBranch        *b_nTracksVtxConv;   //!
   TBranch        *b_mvaOutVtxConv;   //!
   TBranch        *b_trk1DzConv;   //!
   TBranch        *b_trk1DzErrorConv;   //!
   TBranch        *b_trk1ChargeConv;   //!
   TBranch        *b_trk1AlgoConv;   //!
   TBranch        *b_trk1PtConv;   //!
   TBranch        *b_trk1D0Conv;   //!
   TBranch        *b_trk1PoutConv;   //!
   TBranch        *b_trk1PinConv;   //!
   TBranch        *b_trk2DzConv;   //!
   TBranch        *b_trk2DzErrorConv;   //!
   TBranch        *b_trk2ChargeConv;   //!
   TBranch        *b_trk2AlgoConv;   //!
   TBranch        *b_trk2PtConv;   //!
   TBranch        *b_trk2D0Conv;   //!
   TBranch        *b_trk2PoutConv;   //!
   TBranch        *b_trk2PinConv;   //!
   TBranch        *b_nSC;   //!
   TBranch        *b_nBCSC;   //!
   TBranch        *b_nCrystalsSC;   //!
   TBranch        *b_rawEnergySC;   //!
   TBranch        *b_energySC;   //!
   TBranch        *b_seedClusterEnergySC;   //!
   TBranch        *b_esEnergySC;   //!
   TBranch        *b_etaSC;   //!
   TBranch        *b_thetaSC;   //!
   TBranch        *b_phiSC;   //!
   TBranch        *b_xPosSC;   //!
   TBranch        *b_yPosSC;   //!
   TBranch        *b_zPosSC;   //!
   TBranch        *b_phiWidthSC;   //!
   TBranch        *b_etaWidthSC;   //!
   TBranch        *b_e3x3SC;   //!
   TBranch        *b_e3x1SC;   //!
   TBranch        *b_e1x3SC;   //!
   TBranch        *b_e4x4SC;   //!
   TBranch        *b_e5x5SC;   //!
   TBranch        *b_eMaxSC;   //!
   TBranch        *b_e2x2SC;   //!
   TBranch        *b_e2ndSC;   //!
   TBranch        *b_e1x5SC;   //!
   TBranch        *b_e2x5MaxSC;   //!
   TBranch        *b_e2x5LeftSC;   //!
   TBranch        *b_e2x5RightSC;   //!
   TBranch        *b_e2x5TopSC;   //!
   TBranch        *b_e2x5BottomSC;   //!
   TBranch        *b_eLeftSC;   //!
   TBranch        *b_eRightSC;   //!
   TBranch        *b_eTopSC;   //!
   TBranch        *b_eBottomSC;   //!
   TBranch        *b_e4SwissCrossSC;   //!
   TBranch        *b_covIEtaIEtaSC;   //!
   TBranch        *b_covIEtaIPhiSC;   //!
   TBranch        *b_covIPhiIPhiSC;   //!
   TBranch        *b_sMajSC;   //!
   TBranch        *b_sMinSC;   //!
   TBranch        *b_alphaSC;   //!
   TBranch        *b_hOverESC;   //!
   TBranch        *b_recoFlagSC;   //!
   TBranch        *b_timeSC;   //!
   TBranch        *b_chi2SC;   //!
   TBranch        *b_seedEnergySC;   //!
   TBranch        *b_seedXSC;   //!
   TBranch        *b_seedYSC;   //!
   TBranch        *b_esEffsIxIxSC;   //!
   TBranch        *b_esEffsIyIySC;   //!
   TBranch        *b_esL1EnergySC;   //!
   TBranch        *b_esL2EnergySC;   //!
   TBranch        *b_esL1StripsSC;   //!
   TBranch        *b_esL2StripsSC;   //!
   TBranch        *b_nPFSC;   //!
   TBranch        *b_nBCPFSC;   //!
   TBranch        *b_nCrystalsPFSC;   //!
   TBranch        *b_rawEnergyPFSC;   //!
   TBranch        *b_energyPFSC;   //!
   TBranch        *b_seedClusterEnergyPFSC;   //!
   TBranch        *b_esEnergyPFSC;   //!
   TBranch        *b_etaPFSC;   //!
   TBranch        *b_thetaPFSC;   //!
   TBranch        *b_phiPFSC;   //!
   TBranch        *b_xPosPFSC;   //!
   TBranch        *b_yPosPFSC;   //!
   TBranch        *b_zPosPFSC;   //!
   TBranch        *b_phiWidthPFSC;   //!
   TBranch        *b_etaWidthPFSC;   //!
   TBranch        *b_e3x3PFSC;   //!
   TBranch        *b_e3x1PFSC;   //!
   TBranch        *b_e1x3PFSC;   //!
   TBranch        *b_e4x4PFSC;   //!
   TBranch        *b_e5x5PFSC;   //!
   TBranch        *b_eMaxPFSC;   //!
   TBranch        *b_e2x2PFSC;   //!
   TBranch        *b_e2ndPFSC;   //!
   TBranch        *b_e1x5PFSC;   //!
   TBranch        *b_e2x5MaxPFSC;   //!
   TBranch        *b_e2x5LeftPFSC;   //!
   TBranch        *b_e2x5RightPFSC;   //!
   TBranch        *b_e2x5TopPFSC;   //!
   TBranch        *b_e2x5BottomPFSC;   //!
   TBranch        *b_eLeftPFSC;   //!
   TBranch        *b_eRightPFSC;   //!
   TBranch        *b_eTopPFSC;   //!
   TBranch        *b_eBottomPFSC;   //!
   TBranch        *b_e4SwissCrossPFSC;   //!
   TBranch        *b_covIEtaIEtaPFSC;   //!
   TBranch        *b_covIEtaIPhiPFSC;   //!
   TBranch        *b_covIPhiIPhiPFSC;   //!
   TBranch        *b_sMajPFSC;   //!
   TBranch        *b_sMinPFSC;   //!
   TBranch        *b_alphaPFSC;   //!
   TBranch        *b_hOverEPFSC;   //!
   TBranch        *b_recoFlagPFSC;   //!
   TBranch        *b_timePFSC;   //!
   TBranch        *b_chi2PFSC;   //!
   TBranch        *b_seedEnergyPFSC;   //!
   TBranch        *b_seedXPFSC;   //!
   TBranch        *b_seedYPFSC;   //!
   TBranch        *b_esEffsIxIxPFSC;   //!
   TBranch        *b_esEffsIyIyPFSC;   //!
   TBranch        *b_esL1EnergyPFSC;   //!
   TBranch        *b_esL2EnergyPFSC;   //!
   TBranch        *b_esL1StripsPFSC;   //!
   TBranch        *b_esL2StripsPFSC;   //!
   TBranch        *b_nPhoPFSC;   //!
   TBranch        *b_nBCPhoPFSC;   //!
   TBranch        *b_nCrystalsPhoPFSC;   //!
   TBranch        *b_rawEnergyPhoPFSC;   //!
   TBranch        *b_energyPhoPFSC;   //!
   TBranch        *b_seedClusterEnergyPhoPFSC;   //!
   TBranch        *b_esEnergyPhoPFSC;   //!
   TBranch        *b_etaPhoPFSC;   //!
   TBranch        *b_thetaPhoPFSC;   //!
   TBranch        *b_phiPhoPFSC;   //!
   TBranch        *b_xPosPhoPFSC;   //!
   TBranch        *b_yPosPhoPFSC;   //!
   TBranch        *b_zPosPhoPFSC;   //!
   TBranch        *b_phiWidthPhoPFSC;   //!
   TBranch        *b_etaWidthPhoPFSC;   //!
   TBranch        *b_e3x3PhoPFSC;   //!
   TBranch        *b_e3x1PhoPFSC;   //!
   TBranch        *b_e1x3PhoPFSC;   //!
   TBranch        *b_e4x4PhoPFSC;   //!
   TBranch        *b_e5x5PhoPFSC;   //!
   TBranch        *b_eMaxPhoPFSC;   //!
   TBranch        *b_e2x2PhoPFSC;   //!
   TBranch        *b_e2ndPhoPFSC;   //!
   TBranch        *b_e1x5PhoPFSC;   //!
   TBranch        *b_e2x5MaxPhoPFSC;   //!
   TBranch        *b_e2x5LeftPhoPFSC;   //!
   TBranch        *b_e2x5RightPhoPFSC;   //!
   TBranch        *b_e2x5TopPhoPFSC;   //!
   TBranch        *b_e2x5BottomPhoPFSC;   //!
   TBranch        *b_eLeftPhoPFSC;   //!
   TBranch        *b_eRightPhoPFSC;   //!
   TBranch        *b_eTopPhoPFSC;   //!
   TBranch        *b_eBottomPhoPFSC;   //!
   TBranch        *b_e4SwissCrossPhoPFSC;   //!
   TBranch        *b_covIEtaIEtaPhoPFSC;   //!
   TBranch        *b_covIEtaIPhiPhoPFSC;   //!
   TBranch        *b_covIPhiIPhiPhoPFSC;   //!
   TBranch        *b_sMajPhoPFSC;   //!
   TBranch        *b_sMinPhoPFSC;   //!
   TBranch        *b_alphaPhoPFSC;   //!
   TBranch        *b_hOverEPhoPFSC;   //!
   TBranch        *b_recoFlagPhoPFSC;   //!
   TBranch        *b_timePhoPFSC;   //!
   TBranch        *b_chi2PhoPFSC;   //!
   TBranch        *b_seedEnergyPhoPFSC;   //!
   TBranch        *b_seedXPhoPFSC;   //!
   TBranch        *b_seedYPhoPFSC;   //!
   TBranch        *b_esEffsIxIxPhoPFSC;   //!
   TBranch        *b_esEffsIyIyPhoPFSC;   //!
   TBranch        *b_esL1EnergyPhoPFSC;   //!
   TBranch        *b_esL2EnergyPhoPFSC;   //!
   TBranch        *b_esL1StripsPhoPFSC;   //!
   TBranch        *b_esL2StripsPhoPFSC;   //!
   TBranch        *b_nBC;   //!
   TBranch        *b_etaBC;   //!
   TBranch        *b_thetaBC;   //!
   TBranch        *b_phiBC;   //!
   TBranch        *b_etaCrystalBC;   //!
   TBranch        *b_phiCrystalBC;   //!
   TBranch        *b_iEtaBC;   //!
   TBranch        *b_iPhiBC;   //!
   TBranch        *b_thetaTiltBC;   //!
   TBranch        *b_phiTiltBC;   //!
   TBranch        *b_indexSCBC;   //!
   TBranch        *b_nPFBC;   //!
   TBranch        *b_etaPFBC;   //!
   TBranch        *b_thetaPFBC;   //!
   TBranch        *b_phiPFBC;   //!
   TBranch        *b_etaCrystalPFBC;   //!
   TBranch        *b_phiCrystalPFBC;   //!
   TBranch        *b_iEtaPFBC;   //!
   TBranch        *b_iPhiPFBC;   //!
   TBranch        *b_thetaTiltPFBC;   //!
   TBranch        *b_phiTiltPFBC;   //!
   TBranch        *b_indexSCPFBC;   //!
   TBranch        *b_nPhoPFBC;   //!
   TBranch        *b_etaPhoPFBC;   //!
   TBranch        *b_thetaPhoPFBC;   //!
   TBranch        *b_phiPhoPFBC;   //!
   TBranch        *b_etaCrystalPhoPFBC;   //!
   TBranch        *b_phiCrystalPhoPFBC;   //!
   TBranch        *b_iEtaPhoPFBC;   //!
   TBranch        *b_iPhiPhoPFBC;   //!
   TBranch        *b_thetaTiltPhoPFBC;   //!
   TBranch        *b_phiTiltPhoPFBC;   //!
   TBranch        *b_indexSCPhoPFBC;   //!
   TBranch        *b_nTrack;   //!
   TBranch        *b_pxTrack;   //!
   TBranch        *b_pyTrack;   //!
   TBranch        *b_pzTrack;   //!
   TBranch        *b_vtxIndexTrack;   //!
   TBranch        *b_vtxWeightTrack;   //!
   TBranch        *b_impactPar3DTrack;   //!
   TBranch        *b_impactPar3DErrorTrack;   //!
   TBranch        *b_transvImpactParTrack;   //!
   TBranch        *b_transvImpactParErrorTrack;   //!
   TBranch        *b_impactPar3DBiasedTrack;   //!
   TBranch        *b_impactPar3DBiasedErrorTrack;   //!
   TBranch        *b_transvImpactParBiasedTrack;   //!
   TBranch        *b_transvImpactParBiasedErrorTrack;   //!
   TBranch        *b_chargeTrack;   //!
   TBranch        *b_ptErrorTrack;   //!
   TBranch        *b_trackValidHitsTrack;   //!
   TBranch        *b_trackLostHitsTrack;   //!
   TBranch        *b_trackNormalizedChi2Track;   //!
   TBranch        *b_qualityMaskTrack;   //!
   TBranch        *b_trackVxTrack;   //!
   TBranch        *b_trackVyTrack;   //!
   TBranch        *b_trackVzTrack;   //!
   TBranch        *b_d0Track;   //!
   TBranch        *b_d0ErrorTrack;   //!
   TBranch        *b_dzTrack;   //!
   TBranch        *b_dzErrorTrack;   //!
   TBranch        *b_pixelHitsTrack;   //!
   TBranch        *b_trackerLayersWithMeasurementTrack;   //!
   TBranch        *b_expInnerLayersTrack;   //!
   TBranch        *b_numberOfValidPixelBarrelHitsTrack;   //!
   TBranch        *b_numberOfValidPixelEndcapHitsTrack;   //!
   TBranch        *b_numberOfValidStripTIBHitsTrack;   //!
   TBranch        *b_numberOfValidStripTIDHitsTrack;   //!
   TBranch        *b_numberOfValidStripTOBHitsTrack;   //!
   TBranch        *b_numberOfValidStripTECHitsTrack;   //!
   TBranch        *b_numberOfValidMuonHitsTrack;   //!
   TBranch        *b_nGsfTrack;   //!
   TBranch        *b_pxGsfTrack;   //!
   TBranch        *b_pyGsfTrack;   //!
   TBranch        *b_pzGsfTrack;   //!
   TBranch        *b_vtxIndexGsfTrack;   //!
   TBranch        *b_vtxWeightGsfTrack;   //!
   TBranch        *b_impactPar3DGsfTrack;   //!
   TBranch        *b_impactPar3DErrorGsfTrack;   //!
   TBranch        *b_transvImpactParGsfTrack;   //!
   TBranch        *b_transvImpactParErrorGsfTrack;   //!
   TBranch        *b_impactPar3DBiasedGsfTrack;   //!
   TBranch        *b_impactPar3DBiasedErrorGsfTrack;   //!
   TBranch        *b_transvImpactParBiasedGsfTrack;   //!
   TBranch        *b_transvImpactParBiasedErrorGsfTrack;   //!
   TBranch        *b_chargeGsfTrack;   //!
   TBranch        *b_ptErrorGsfTrack;   //!
   TBranch        *b_trackValidHitsGsfTrack;   //!
   TBranch        *b_trackLostHitsGsfTrack;   //!
   TBranch        *b_trackNormalizedChi2GsfTrack;   //!
   TBranch        *b_qualityMaskGsfTrack;   //!
   TBranch        *b_trackVxGsfTrack;   //!
   TBranch        *b_trackVyGsfTrack;   //!
   TBranch        *b_trackVzGsfTrack;   //!
   TBranch        *b_d0GsfTrack;   //!
   TBranch        *b_d0ErrorGsfTrack;   //!
   TBranch        *b_dzGsfTrack;   //!
   TBranch        *b_dzErrorGsfTrack;   //!
   TBranch        *b_pixelHitsGsfTrack;   //!
   TBranch        *b_trackerLayersWithMeasurementGsfTrack;   //!
   TBranch        *b_expInnerLayersGsfTrack;   //!
   TBranch        *b_numberOfValidPixelBarrelHitsGsfTrack;   //!
   TBranch        *b_numberOfValidPixelEndcapHitsGsfTrack;   //!
   TBranch        *b_numberOfValidStripTIBHitsGsfTrack;   //!
   TBranch        *b_numberOfValidStripTIDHitsGsfTrack;   //!
   TBranch        *b_numberOfValidStripTOBHitsGsfTrack;   //!
   TBranch        *b_numberOfValidStripTECHitsGsfTrack;   //!
   TBranch        *b_numberOfValidMuonHitsGsfTrack;   //!
   TBranch        *b_chargeModeGsfTrack;   //!
   TBranch        *b_pxModeGsfTrack;   //!
   TBranch        *b_pyModeGsfTrack;   //!
   TBranch        *b_pzModeGsfTrack;   //!
   TBranch        *b_nGlobalMuonTrack;   //!
   TBranch        *b_pxGlobalMuonTrack;   //!
   TBranch        *b_pyGlobalMuonTrack;   //!
   TBranch        *b_pzGlobalMuonTrack;   //!
   TBranch        *b_vtxIndexGlobalMuonTrack;   //!
   TBranch        *b_vtxWeightGlobalMuonTrack;   //!
   TBranch        *b_impactPar3DGlobalMuonTrack;   //!
   TBranch        *b_impactPar3DErrorGlobalMuonTrack;   //!
   TBranch        *b_transvImpactParGlobalMuonTrack;   //!
   TBranch        *b_transvImpactParErrorGlobalMuonTrack;   //!
   TBranch        *b_impactPar3DBiasedGlobalMuonTrack;   //!
   TBranch        *b_impactPar3DBiasedErrorGlobalMuonTrack;   //!
   TBranch        *b_transvImpactParBiasedGlobalMuonTrack;   //!
   TBranch        *b_transvImpactParBiasedErrorGlobalMuonTrack;   //!
   TBranch        *b_chargeGlobalMuonTrack;   //!
   TBranch        *b_ptErrorGlobalMuonTrack;   //!
   TBranch        *b_trackValidHitsGlobalMuonTrack;   //!
   TBranch        *b_trackLostHitsGlobalMuonTrack;   //!
   TBranch        *b_trackNormalizedChi2GlobalMuonTrack;   //!
   TBranch        *b_qualityMaskGlobalMuonTrack;   //!
   TBranch        *b_trackVxGlobalMuonTrack;   //!
   TBranch        *b_trackVyGlobalMuonTrack;   //!
   TBranch        *b_trackVzGlobalMuonTrack;   //!
   TBranch        *b_d0GlobalMuonTrack;   //!
   TBranch        *b_d0ErrorGlobalMuonTrack;   //!
   TBranch        *b_dzGlobalMuonTrack;   //!
   TBranch        *b_dzErrorGlobalMuonTrack;   //!
   TBranch        *b_pixelHitsGlobalMuonTrack;   //!
   TBranch        *b_trackerLayersWithMeasurementGlobalMuonTrack;   //!
   TBranch        *b_expInnerLayersGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidPixelBarrelHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidPixelEndcapHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidStripTIBHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidStripTIDHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidStripTOBHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidStripTECHitsGlobalMuonTrack;   //!
   TBranch        *b_numberOfValidMuonHitsGlobalMuonTrack;   //!
   TBranch        *b_nSTAMuonTrack;   //!
   TBranch        *b_pxSTAMuonTrack;   //!
   TBranch        *b_pySTAMuonTrack;   //!
   TBranch        *b_pzSTAMuonTrack;   //!
   TBranch        *b_chargeSTAMuonTrack;   //!
   TBranch        *b_ptErrorSTAMuonTrack;   //!
   TBranch        *b_trackValidHitsSTAMuonTrack;   //!
   TBranch        *b_trackLostHitsSTAMuonTrack;   //!
   TBranch        *b_trackNormalizedChi2STAMuonTrack;   //!
   TBranch        *b_qualityMaskSTAMuonTrack;   //!
   TBranch        *b_trackVxSTAMuonTrack;   //!
   TBranch        *b_trackVySTAMuonTrack;   //!
   TBranch        *b_trackVzSTAMuonTrack;   //!
   TBranch        *b_d0STAMuonTrack;   //!
   TBranch        *b_d0ErrorSTAMuonTrack;   //!
   TBranch        *b_dzSTAMuonTrack;   //!
   TBranch        *b_dzErrorSTAMuonTrack;   //!
   TBranch        *b_pixelHitsSTAMuonTrack;   //!
   TBranch        *b_trackerLayersWithMeasurementSTAMuonTrack;   //!
   TBranch        *b_expInnerLayersSTAMuonTrack;   //!
   TBranch        *b_numberOfValidPixelBarrelHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidPixelEndcapHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidStripTIBHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidStripTIDHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidStripTOBHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidStripTECHitsSTAMuonTrack;   //!
   TBranch        *b_numberOfValidMuonHitsSTAMuonTrack;   //!
   TBranch        *b_nPV;   //!
   TBranch        *b_PVxPV;   //!
   TBranch        *b_PVyPV;   //!
   TBranch        *b_PVzPV;   //!
   TBranch        *b_PVErrxPV;   //!
   TBranch        *b_PVErryPV;   //!
   TBranch        *b_PVErrzPV;   //!
   TBranch        *b_SumPtPV;   //!
   TBranch        *b_rhoPV;   //!
   TBranch        *b_ndofPV;   //!
   TBranch        *b_chi2PV;   //!
   TBranch        *b_normChi2PV;   //!
   TBranch        *b_pxChMetPV;   //!
   TBranch        *b_pyChMetPV;   //!
   TBranch        *b_pzChMetPV;   //!
   TBranch        *b_isFakePV;   //!
   TBranch        *b_isValidPV;   //!
   TBranch        *b_trackSizePV;   //!
   TBranch        *b_nMuon;   //!
   TBranch        *b_chargeMuon;   //!
   TBranch        *b_energyMuon;   //!
   TBranch        *b_thetaMuon;   //!
   TBranch        *b_etaMuon;   //!
   TBranch        *b_phiMuon;   //!
   TBranch        *b_pxMuon;   //!
   TBranch        *b_pyMuon;   //!
   TBranch        *b_pzMuon;   //!
   TBranch        *b_vertexXMuon;   //!
   TBranch        *b_vertexYMuon;   //!
   TBranch        *b_vertexZMuon;   //!
   TBranch        *b_trackIndexMuon;   //!
   TBranch        *b_standAloneTrackIndexMuon;   //!
   TBranch        *b_combinedTrackIndexMuon;   //!
   TBranch        *b_muonIdMuon;   //!
   TBranch        *b_pfmuonIdMuon;   //!
   TBranch        *b_typeMuon;   //!
   TBranch        *b_numberOfMatchesMuon;   //!
   TBranch        *b_sumPt03Muon;   //!
   TBranch        *b_emEt03Muon;   //!
   TBranch        *b_hadEt03Muon;   //!
   TBranch        *b_hoEt03Muon;   //!
   TBranch        *b_nTrk03Muon;   //!
   TBranch        *b_nJets03Muon;   //!
   TBranch        *b_sumPt05Muon;   //!
   TBranch        *b_emEt05Muon;   //!
   TBranch        *b_hadEt05Muon;   //!
   TBranch        *b_hoEt05Muon;   //!
   TBranch        *b_nTrk05Muon;   //!
   TBranch        *b_nJets05Muon;   //!
   TBranch        *b_pfCombinedIsoMuon;   //!
   TBranch        *b_pfCandChargedIso01Muon;   //!
   TBranch        *b_pfCandNeutralIso01Muon;   //!
   TBranch        *b_pfCandPhotonIso01Muon;   //!
   TBranch        *b_pfCandChargedIso02Muon;   //!
   TBranch        *b_pfCandNeutralIso02Muon;   //!
   TBranch        *b_pfCandPhotonIso02Muon;   //!
   TBranch        *b_pfCandChargedIso03Muon;   //!
   TBranch        *b_pfCandNeutralIso03Muon;   //!
   TBranch        *b_pfCandPhotonIso03Muon;   //!
   TBranch        *b_pfCandChargedIso04Muon;   //!
   TBranch        *b_pfCandNeutralIso04Muon;   //!
   TBranch        *b_pfCandPhotonIso04Muon;   //!
   TBranch        *b_pfCandChargedIso05Muon;   //!
   TBranch        *b_pfCandNeutralIso05Muon;   //!
   TBranch        *b_pfCandPhotonIso05Muon;   //!
   TBranch        *b_pfCandChargedIso06Muon;   //!
   TBranch        *b_pfCandNeutralIso06Muon;   //!
   TBranch        *b_pfCandPhotonIso06Muon;   //!
   TBranch        *b_pfCandChargedIso07Muon;   //!
   TBranch        *b_pfCandNeutralIso07Muon;   //!
   TBranch        *b_pfCandPhotonIso07Muon;   //!
   TBranch        *b_pfCandChargedDirIso04Muon;   //!
   TBranch        *b_pfCandNeutralDirIso04Muon;   //!
   TBranch        *b_pfCandPhotonDirIso04Muon;   //!
   TBranch        *b_pfIsolationSumPUPtR03Muon;   //!
   TBranch        *b_pfIsolationSumPUPtR04Muon;   //!
   TBranch        *b_pfCandChargedPUIso03Muon;   //!
   TBranch        *b_pfCandChargedPUIso04Muon;   //!
   TBranch        *b_kinkMuon;   //!
   TBranch        *b_mvaisoMuon;   //!
   TBranch        *b_EcalExpDepoMuon;   //!
   TBranch        *b_HcalExpDepoMuon;   //!
   TBranch        *b_HoExpDepoMuon;   //!
   TBranch        *b_emS9Muon;   //!
   TBranch        *b_hadS9Muon;   //!
   TBranch        *b_hoS9Muon;   //!
   TBranch        *b_CaloCompMuon;   //!
   TBranch        *b_nPFCand;   //!
   TBranch        *b_chargePFCand;   //!
   TBranch        *b_energyPFCand;   //!
   TBranch        *b_thetaPFCand;   //!
   TBranch        *b_etaPFCand;   //!
   TBranch        *b_phiPFCand;   //!
   TBranch        *b_pxPFCand;   //!
   TBranch        *b_pyPFCand;   //!
   TBranch        *b_pzPFCand;   //!
   TBranch        *b_vertexXPFCand;   //!
   TBranch        *b_vertexYPFCand;   //!
   TBranch        *b_vertexZPFCand;   //!
   TBranch        *b_particleIdPFCand;   //!
   TBranch        *b_ChargedIso03PFCand;   //!
   TBranch        *b_NeutralIso03PFCand;   //!
   TBranch        *b_PhotonIso03PFCand;   //!
   TBranch        *b_SumPUPtR03PFCand;   //!
   TBranch        *b_nReducedPFCand;   //!
   TBranch        *b_chargeReducedPFCand;   //!
   TBranch        *b_energyReducedPFCand;   //!
   TBranch        *b_thetaReducedPFCand;   //!
   TBranch        *b_etaReducedPFCand;   //!
   TBranch        *b_phiReducedPFCand;   //!
   TBranch        *b_pxReducedPFCand;   //!
   TBranch        *b_pyReducedPFCand;   //!
   TBranch        *b_pzReducedPFCand;   //!
   TBranch        *b_vertexXReducedPFCand;   //!
   TBranch        *b_vertexYReducedPFCand;   //!
   TBranch        *b_vertexZReducedPFCand;   //!
   TBranch        *b_nMet;   //!
   TBranch        *b_chargeMet;   //!
   TBranch        *b_energyMet;   //!
   TBranch        *b_thetaMet;   //!
   TBranch        *b_etaMet;   //!
   TBranch        *b_phiMet;   //!
   TBranch        *b_pxMet;   //!
   TBranch        *b_pyMet;   //!
   TBranch        *b_pzMet;   //!
   TBranch        *b_vertexXMet;   //!
   TBranch        *b_vertexYMet;   //!
   TBranch        *b_vertexZMet;   //!
   TBranch        *b_sumEtMet;   //!
   TBranch        *b_mEtSigMet;   //!
   TBranch        *b_significanceMet;   //!
   TBranch        *b_nPFMet;   //!
   TBranch        *b_chargePFMet;   //!
   TBranch        *b_energyPFMet;   //!
   TBranch        *b_thetaPFMet;   //!
   TBranch        *b_etaPFMet;   //!
   TBranch        *b_phiPFMet;   //!
   TBranch        *b_pxPFMet;   //!
   TBranch        *b_pyPFMet;   //!
   TBranch        *b_pzPFMet;   //!
   TBranch        *b_vertexXPFMet;   //!
   TBranch        *b_vertexYPFMet;   //!
   TBranch        *b_vertexZPFMet;   //!
   TBranch        *b_sumEtPFMet;   //!
   TBranch        *b_mEtSigPFMet;   //!
   TBranch        *b_significancePFMet;   //!
   TBranch        *b_nPFChMet;   //!
   TBranch        *b_chargePFChMet;   //!
   TBranch        *b_energyPFChMet;   //!
   TBranch        *b_thetaPFChMet;   //!
   TBranch        *b_etaPFChMet;   //!
   TBranch        *b_phiPFChMet;   //!
   TBranch        *b_pxPFChMet;   //!
   TBranch        *b_pyPFChMet;   //!
   TBranch        *b_pzPFChMet;   //!
   TBranch        *b_vertexXPFChMet;   //!
   TBranch        *b_vertexYPFChMet;   //!
   TBranch        *b_vertexZPFChMet;   //!
   TBranch        *b_sumEtPFChMet;   //!
   TBranch        *b_mEtSigPFChMet;   //!
   TBranch        *b_significancePFChMet;   //!
   TBranch        *b_nGenMet;   //!
   TBranch        *b_chargeGenMet;   //!
   TBranch        *b_energyGenMet;   //!
   TBranch        *b_thetaGenMet;   //!
   TBranch        *b_etaGenMet;   //!
   TBranch        *b_phiGenMet;   //!
   TBranch        *b_pxGenMet;   //!
   TBranch        *b_pyGenMet;   //!
   TBranch        *b_pzGenMet;   //!
   TBranch        *b_vertexXGenMet;   //!
   TBranch        *b_vertexYGenMet;   //!
   TBranch        *b_vertexZGenMet;   //!
   TBranch        *b_nAK5Jet;   //!
   TBranch        *b_chargeAK5Jet;   //!
   TBranch        *b_energyAK5Jet;   //!
   TBranch        *b_thetaAK5Jet;   //!
   TBranch        *b_etaAK5Jet;   //!
   TBranch        *b_phiAK5Jet;   //!
   TBranch        *b_pxAK5Jet;   //!
   TBranch        *b_pyAK5Jet;   //!
   TBranch        *b_pzAK5Jet;   //!
   TBranch        *b_vertexXAK5Jet;   //!
   TBranch        *b_vertexYAK5Jet;   //!
   TBranch        *b_vertexZAK5Jet;   //!
   TBranch        *b_emFracAK5Jet;   //!
   TBranch        *b_hadFracAK5Jet;   //!
   TBranch        *b_areaAK5Jet;   //!
   TBranch        *b_IdAK5Jet;   //!
   TBranch        *b_nHitAK5Jet;   //!
   TBranch        *b_nHit90AK5Jet;   //!
   TBranch        *b_fHPDAK5Jet;   //!
   TBranch        *b_covEtaEtaAK5Jet;   //!
   TBranch        *b_covPhiPhiAK5Jet;   //!
   TBranch        *b_fLSAK5Jet;   //!
   TBranch        *b_fOOTAK5Jet;   //!
   TBranch        *b_combinedSecondaryVertexBJetTagsAK5Jet;   //!
   TBranch        *b_simpleSecondaryVertexHighEffBJetTagsAK5Jet;   //!
   TBranch        *b_simpleSecondaryVertexHighPurBJetTagsAK5Jet;   //!
   TBranch        *b_trackCountingHighPurBJetTagsAK5Jet;   //!
   TBranch        *b_trackCountingHighEffBJetTagsAK5Jet;   //!
   TBranch        *b_trackCountingVeryHighEffBJetTagsAK5Jet;   //!
   TBranch        *b_uncorrEnergyAK5Jet;   //!
   TBranch        *b_nAK5PFNoPUJet;   //!
   TBranch        *b_chargeAK5PFNoPUJet;   //!
   TBranch        *b_energyAK5PFNoPUJet;   //!
   TBranch        *b_uncorrenergyAK5PFNoPUJet;   //!
   TBranch        *b_thetaAK5PFNoPUJet;   //!
   TBranch        *b_etaAK5PFNoPUJet;   //!
   TBranch        *b_phiAK5PFNoPUJet;   //!
   TBranch        *b_pxAK5PFNoPUJet;   //!
   TBranch        *b_pyAK5PFNoPUJet;   //!
   TBranch        *b_pzAK5PFNoPUJet;   //!
   TBranch        *b_uncorrpxAK5PFNoPUJet;   //!
   TBranch        *b_uncorrpyAK5PFNoPUJet;   //!
   TBranch        *b_uncorrpzAK5PFNoPUJet;   //!
   TBranch        *b_vertexXAK5PFNoPUJet;   //!
   TBranch        *b_vertexYAK5PFNoPUJet;   //!
   TBranch        *b_vertexZAK5PFNoPUJet;   //!
   TBranch        *b_chargedHadronEnergyAK5PFNoPUJet;   //!
   TBranch        *b_neutralHadronEnergyAK5PFNoPUJet;   //!
   TBranch        *b_photonEnergyAK5PFNoPUJet;   //!
   TBranch        *b_electronEnergyAK5PFNoPUJet;   //!
   TBranch        *b_muonEnergyAK5PFNoPUJet;   //!
   TBranch        *b_HFHadronEnergyAK5PFNoPUJet;   //!
   TBranch        *b_HFEMEnergyAK5PFNoPUJet;   //!
   TBranch        *b_chargedHadronMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_neutralHadronMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_photonMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_electronMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_muonMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_HFHadronMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_HFEMMultiplicityAK5PFNoPUJet;   //!
   TBranch        *b_areaAK5PFNoPUJet;   //!
   TBranch        *b_weightedDz1AK5PFNoPUJet;   //!
   TBranch        *b_weightedDz2AK5PFNoPUJet;   //!
   TBranch        *b_betastarAK5PFNoPUJet;   //!
   TBranch        *b_rmsCandsHandAK5PFNoPUJet;   //!
   TBranch        *b_jetIdMvaFullAK5PFNoPUJet;   //!
   TBranch        *b_dR2MeanIdMvaAK5PFNoPUJet;   //!
   TBranch        *b_dRMeanIdMvaAK5PFNoPUJet;   //!
   TBranch        *b_betastarIdMvaAK5PFNoPUJet;   //!
   TBranch        *b_betastarclassicIdMvaAK5PFNoPUJet;   //!
   TBranch        *b_chargedEmEnergyAK5PFNoPUJet;   //!
   TBranch        *b_neutralEmEnergyAK5PFNoPUJet;   //!
   TBranch        *b_combinedSecondaryVertexBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_combinedSecondaryVertexMVABJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_jetBProbabilityBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_jetProbabilityBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_simpleSecondaryVertexHighEffBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_simpleSecondaryVertexHighPurBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_trackCountingHighPurBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_trackCountingHighEffBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_trackCountingVeryHighEffBJetTagsAK5PFNoPUJet;   //!
   TBranch        *b_rmsCandAK5PFNoPUJet;   //!
   TBranch        *b_ptDAK5PFNoPUJet;   //!
   TBranch        *b_axis1AK5PFNoPUJet;   //!
   TBranch        *b_axis2AK5PFNoPUJet;   //!
   TBranch        *b_pullAK5PFNoPUJet;   //!
   TBranch        *b_tanaAK5PFNoPUJet;   //!
   TBranch        *b_rmsCand_QCAK5PFNoPUJet;   //!
   TBranch        *b_ptD_QCAK5PFNoPUJet;   //!
   TBranch        *b_axis1_QCAK5PFNoPUJet;   //!
   TBranch        *b_axis2_QCAK5PFNoPUJet;   //!
   TBranch        *b_pull_QCAK5PFNoPUJet;   //!
   TBranch        *b_tana_QCAK5PFNoPUJet;   //!
   TBranch        *b_nChg_ptCutAK5PFNoPUJet;   //!
   TBranch        *b_nChg_QCAK5PFNoPUJet;   //!
   TBranch        *b_nChg_ptCut_QCAK5PFNoPUJet;   //!
   TBranch        *b_nNeutral_ptCutAK5PFNoPUJet;   //!
   TBranch        *b_RchgAK5PFNoPUJet;   //!
   TBranch        *b_RneutralAK5PFNoPUJet;   //!
   TBranch        *b_RAK5PFNoPUJet;   //!
   TBranch        *b_Rchg_QCAK5PFNoPUJet;   //!
   TBranch        *b_pTMaxAK5PFNoPUJet;   //!
   TBranch        *b_pTMaxChgAK5PFNoPUJet;   //!
   TBranch        *b_pTMaxNeutralAK5PFNoPUJet;   //!
   TBranch        *b_pTMaxChg_QCAK5PFNoPUJet;   //!
   TBranch        *b_nAK5PFPUcorrJet;   //!
   TBranch        *b_chargeAK5PFPUcorrJet;   //!
   TBranch        *b_energyAK5PFPUcorrJet;   //!
   TBranch        *b_uncorrenergyAK5PFPUcorrJet;   //!
   TBranch        *b_thetaAK5PFPUcorrJet;   //!
   TBranch        *b_etaAK5PFPUcorrJet;   //!
   TBranch        *b_phiAK5PFPUcorrJet;   //!
   TBranch        *b_pxAK5PFPUcorrJet;   //!
   TBranch        *b_pyAK5PFPUcorrJet;   //!
   TBranch        *b_pzAK5PFPUcorrJet;   //!
   TBranch        *b_uncorrpxAK5PFPUcorrJet;   //!
   TBranch        *b_uncorrpyAK5PFPUcorrJet;   //!
   TBranch        *b_uncorrpzAK5PFPUcorrJet;   //!
   TBranch        *b_vertexXAK5PFPUcorrJet;   //!
   TBranch        *b_vertexYAK5PFPUcorrJet;   //!
   TBranch        *b_vertexZAK5PFPUcorrJet;   //!
   TBranch        *b_chargedHadronEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_neutralHadronEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_photonEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_electronEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_muonEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_HFHadronEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_HFEMEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_chargedHadronMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_neutralHadronMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_photonMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_electronMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_muonMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_HFHadronMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_HFEMMultiplicityAK5PFPUcorrJet;   //!
   TBranch        *b_areaAK5PFPUcorrJet;   //!
   TBranch        *b_weightedDz1AK5PFPUcorrJet;   //!
   TBranch        *b_weightedDz2AK5PFPUcorrJet;   //!
   TBranch        *b_betastarAK5PFPUcorrJet;   //!
   TBranch        *b_rmsCandsHandAK5PFPUcorrJet;   //!
   TBranch        *b_jetIdMvaFullAK5PFPUcorrJet;   //!
   TBranch        *b_dR2MeanIdMvaAK5PFPUcorrJet;   //!
   TBranch        *b_dRMeanIdMvaAK5PFPUcorrJet;   //!
   TBranch        *b_betastarIdMvaAK5PFPUcorrJet;   //!
   TBranch        *b_betastarclassicIdMvaAK5PFPUcorrJet;   //!
   TBranch        *b_chargedEmEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_neutralEmEnergyAK5PFPUcorrJet;   //!
   TBranch        *b_combinedSecondaryVertexBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_combinedSecondaryVertexMVABJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_jetBProbabilityBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_jetProbabilityBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_simpleSecondaryVertexHighEffBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_simpleSecondaryVertexHighPurBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_trackCountingHighPurBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_trackCountingHighEffBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_trackCountingVeryHighEffBJetTagsAK5PFPUcorrJet;   //!
   TBranch        *b_rmsCandAK5PFPUcorrJet;   //!
   TBranch        *b_ptDAK5PFPUcorrJet;   //!
   TBranch        *b_axis1AK5PFPUcorrJet;   //!
   TBranch        *b_axis2AK5PFPUcorrJet;   //!
   TBranch        *b_pullAK5PFPUcorrJet;   //!
   TBranch        *b_tanaAK5PFPUcorrJet;   //!
   TBranch        *b_rmsCand_QCAK5PFPUcorrJet;   //!
   TBranch        *b_ptD_QCAK5PFPUcorrJet;   //!
   TBranch        *b_axis1_QCAK5PFPUcorrJet;   //!
   TBranch        *b_axis2_QCAK5PFPUcorrJet;   //!
   TBranch        *b_pull_QCAK5PFPUcorrJet;   //!
   TBranch        *b_tana_QCAK5PFPUcorrJet;   //!
   TBranch        *b_nChg_ptCutAK5PFPUcorrJet;   //!
   TBranch        *b_nChg_QCAK5PFPUcorrJet;   //!
   TBranch        *b_nChg_ptCut_QCAK5PFPUcorrJet;   //!
   TBranch        *b_nNeutral_ptCutAK5PFPUcorrJet;   //!
   TBranch        *b_RchgAK5PFPUcorrJet;   //!
   TBranch        *b_RneutralAK5PFPUcorrJet;   //!
   TBranch        *b_RAK5PFPUcorrJet;   //!
   TBranch        *b_Rchg_QCAK5PFPUcorrJet;   //!
   TBranch        *b_pTMaxAK5PFPUcorrJet;   //!
   TBranch        *b_pTMaxChgAK5PFPUcorrJet;   //!
   TBranch        *b_pTMaxNeutralAK5PFPUcorrJet;   //!
   TBranch        *b_pTMaxChg_QCAK5PFPUcorrJet;   //!
   TBranch        *b_nAK5GenJet;   //!
   TBranch        *b_chargeAK5GenJet;   //!
   TBranch        *b_energyAK5GenJet;   //!
   TBranch        *b_thetaAK5GenJet;   //!
   TBranch        *b_etaAK5GenJet;   //!
   TBranch        *b_phiAK5GenJet;   //!
   TBranch        *b_pxAK5GenJet;   //!
   TBranch        *b_pyAK5GenJet;   //!
   TBranch        *b_pzAK5GenJet;   //!
   TBranch        *b_vertexXAK5GenJet;   //!
   TBranch        *b_vertexYAK5GenJet;   //!
   TBranch        *b_vertexZAK5GenJet;   //!
   TBranch        *b_genPtHat;   //!
   TBranch        *b_genProcessId;   //!
   TBranch        *b_genWeight;   //!
   TBranch        *b_genAlphaQCD;   //!
   TBranch        *b_genAlphaQED;   //!
   TBranch        *b_failHPDHits;   //!
   TBranch        *b_failHPDNoOtherHits;   //!
   TBranch        *b_failMaxZeros;   //!
   TBranch        *b_failTS4TS5;   //!
   TBranch        *b_failE2E10;   //!
   TBranch        *b_failICHEPFilter;   //!
   TBranch        *b_fail2011Filter;   //!
   TBranch        *b_nIsolatedHBHENoise;   //!
   TBranch        *b_sumEIsolatedHBHENoise;   //!
   TBranch        *b_nTimingHBHENoise;   //!
   TBranch        *b_sumETimingHBHENoise;   //!
   TBranch        *b_nFlatHBHENoise;   //!
   TBranch        *b_sumEFlatHBHENoise;   //!
   TBranch        *b_nSpikeHBHENoise;   //!
   TBranch        *b_sumESpikeHBHENoise;   //!
   TBranch        *b_nTriangleHBHENoise;   //!
   TBranch        *b_sumETriangleHBHENoise;   //!
   TBranch        *b_nHFPMT;   //!
   TBranch        *b_sumEHFPMT;   //!

   boh(TTree *tree=0);
   virtual ~boh();
   virtual Int_t    Cut(Long64_t entry);
   virtual Int_t    GetEntry(Long64_t entry);
   virtual Long64_t LoadTree(Long64_t entry);
   virtual void     Init(TTree *tree);
   virtual void     Loop();
   virtual Bool_t   Notify();
   virtual void     Show(Long64_t entry = -1);
};

#endif

#ifdef boh_cxx
boh::boh(TTree *tree) : fChain(0) 
{
// if parameter tree is not specified (or zero), connect the file
// used to generate this class and read the Tree.
   if (tree == 0) {
      TFile *f = (TFile*)gROOT->GetListOfFiles()->FindObject("default_MC.root");
      if (!f || !f->IsOpen()) {
         f = new TFile("default_MC.root");
      }
      f->GetObject("ntp1",tree);

   }
   Init(tree);
}

boh::~boh()
{
   if (!fChain) return;
   delete fChain->GetCurrentFile();
}

Int_t boh::GetEntry(Long64_t entry)
{
// Read contents of entry.
   if (!fChain) return 0;
   return fChain->GetEntry(entry);
}
Long64_t boh::LoadTree(Long64_t entry)
{
// Set the environment to read one entry
   if (!fChain) return -5;
   Long64_t centry = fChain->LoadTree(entry);
   if (centry < 0) return centry;
   if (fChain->GetTreeNumber() != fCurrent) {
      fCurrent = fChain->GetTreeNumber();
      Notify();
   }
   return centry;
}

void boh::Init(TTree *tree)
{
   // The Init() function is called when the selector needs to initialize
   // a new tree or chain. Typically here the branch addresses and branch
   // pointers of the tree will be set.
   // It is normally not necessary to make changes to the generated
   // code, but the routine can be extended by the user if needed.
   // Init() will be called many times when running on PROOF
   // (once per file to be processed).

   // Set object pointer
   nameHLT = 0;
   // Set branch addresses and branch pointers
   if (!tree) return;
   fChain = tree;
   fCurrent = -1;
   fChain->SetMakeClass(1);

   fChain->SetBranchAddress("nl1Technical", &nl1Technical, &b_nl1Technical);
   fChain->SetBranchAddress("l1Technical", l1Technical, &b_l1Technical);
   fChain->SetBranchAddress("nl1Global", &nl1Global, &b_nl1Global);
   fChain->SetBranchAddress("l1Global", l1Global, &b_l1Global);
   fChain->SetBranchAddress("rhoFastjet", &rhoFastjet, &b_rhoFastjet);
   fChain->SetBranchAddress("sigmaFastjet", &sigmaFastjet, &b_sigmaFastjet);
   fChain->SetBranchAddress("rhoJetsFastJet", &rhoJetsFastJet, &b_rhoJetsFastJet);
   fChain->SetBranchAddress("rhoJetsCentralNeutralFastJet", &rhoJetsCentralNeutralFastJet, &b_rhoJetsCentralNeutralFastJet);
   fChain->SetBranchAddress("rhoJetsFastJet_nopu", &rhoJetsFastJet_nopu, &b_rhoJetsFastJet_nopu);
   fChain->SetBranchAddress("runNumber", &runNumber, &b_runNumber);
   fChain->SetBranchAddress("eventNumber", &eventNumber, &b_eventNumber);
   fChain->SetBranchAddress("lumiBlock", &lumiBlock, &b_lumiBlock);
   fChain->SetBranchAddress("bunchCrossing", &bunchCrossing, &b_bunchCrossing);
   fChain->SetBranchAddress("orbitNumber", &orbitNumber, &b_orbitNumber);
   fChain->SetBranchAddress("beamSpotX", &beamSpotX, &b_beamSpotX);
   fChain->SetBranchAddress("beamSpotY", &beamSpotY, &b_beamSpotY);
   fChain->SetBranchAddress("beamSpotZ", &beamSpotZ, &b_beamSpotZ);
   fChain->SetBranchAddress("nBX", &nBX, &b_nBX);
   fChain->SetBranchAddress("nPU", nPU, &b_nPU);
   fChain->SetBranchAddress("bxPU", bxPU, &b_bxPU);
   fChain->SetBranchAddress("nMc", &nMc, &b_nMc);
   fChain->SetBranchAddress("pMc", pMc, &b_pMc);
   fChain->SetBranchAddress("thetaMc", thetaMc, &b_thetaMc);
   fChain->SetBranchAddress("etaMc", etaMc, &b_etaMc);
   fChain->SetBranchAddress("phiMc", phiMc, &b_phiMc);
   fChain->SetBranchAddress("energyMc", energyMc, &b_energyMc);
   fChain->SetBranchAddress("vxMc", vxMc, &b_vxMc);
   fChain->SetBranchAddress("vyMc", vyMc, &b_vyMc);
   fChain->SetBranchAddress("vzMc", vzMc, &b_vzMc);
   fChain->SetBranchAddress("idMc", idMc, &b_idMc);
   fChain->SetBranchAddress("mothMc", mothMc, &b_mothMc);
   fChain->SetBranchAddress("statusMc", statusMc, &b_statusMc);
   fChain->SetBranchAddress("nTrg", &nTrg, &b_nTrg);
   fChain->SetBranchAddress("firedTrg", firedTrg, &b_firedTrg);
   fChain->SetBranchAddress("nHLT", &nHLT, &b_nHLT);
   fChain->SetBranchAddress("indexHLT", indexHLT, &b_indexHLT);
   fChain->SetBranchAddress("nameHLT", &nameHLT, &b_nameHLT);
   fChain->SetBranchAddress("nTriggerPaths", &nTriggerPaths, &b_nTriggerPaths);
   fChain->SetBranchAddress("nTriggerObsPassing", &nTriggerObsPassing, &b_nTriggerObsPassing);
   fChain->SetBranchAddress("sizePassing", sizePassing, &b_sizePassing);
   fChain->SetBranchAddress("indexPassing", indexPassing, &b_indexPassing);
   fChain->SetBranchAddress("indexPassingPerPath", indexPassingPerPath, &b_indexPassingPerPath);
   fChain->SetBranchAddress("nTriggerObs", &nTriggerObs, &b_nTriggerObs);
   fChain->SetBranchAddress("triggerObsPt", triggerObsPt, &b_triggerObsPt);
   fChain->SetBranchAddress("triggerObsPhi", triggerObsPhi, &b_triggerObsPhi);
   fChain->SetBranchAddress("triggerObsEta", triggerObsEta, &b_triggerObsEta);
   fChain->SetBranchAddress("triggerObsMass", triggerObsMass, &b_triggerObsMass);
   fChain->SetBranchAddress("nEle", &nEle, &b_nEle);
   fChain->SetBranchAddress("chargeEle", chargeEle, &b_chargeEle);
   fChain->SetBranchAddress("energyEle", energyEle, &b_energyEle);
   fChain->SetBranchAddress("thetaEle", thetaEle, &b_thetaEle);
   fChain->SetBranchAddress("etaEle", etaEle, &b_etaEle);
   fChain->SetBranchAddress("phiEle", phiEle, &b_phiEle);
   fChain->SetBranchAddress("pxEle", pxEle, &b_pxEle);
   fChain->SetBranchAddress("pyEle", pyEle, &b_pyEle);
   fChain->SetBranchAddress("pzEle", pzEle, &b_pzEle);
   fChain->SetBranchAddress("vertexXEle", vertexXEle, &b_vertexXEle);
   fChain->SetBranchAddress("vertexYEle", vertexYEle, &b_vertexYEle);
   fChain->SetBranchAddress("vertexZEle", vertexZEle, &b_vertexZEle);
   fChain->SetBranchAddress("fiducialFlagsEle", fiducialFlagsEle, &b_fiducialFlagsEle);
   fChain->SetBranchAddress("recoFlagsEle", recoFlagsEle, &b_recoFlagsEle);
   fChain->SetBranchAddress("trackMomentumErrorEle", trackMomentumErrorEle, &b_trackMomentumErrorEle);
   fChain->SetBranchAddress("superClusterIndexEle", superClusterIndexEle, &b_superClusterIndexEle);
   fChain->SetBranchAddress("PFsuperClusterIndexEle", PFsuperClusterIndexEle, &b_PFsuperClusterIndexEle);
   fChain->SetBranchAddress("trackIndexEle", trackIndexEle, &b_trackIndexEle);
   fChain->SetBranchAddress("gsfTrackIndexEle", gsfTrackIndexEle, &b_gsfTrackIndexEle);
   fChain->SetBranchAddress("convDistEle", convDistEle, &b_convDistEle);
   fChain->SetBranchAddress("convDcotEle", convDcotEle, &b_convDcotEle);
   fChain->SetBranchAddress("convRadiusEle", convRadiusEle, &b_convRadiusEle);
   fChain->SetBranchAddress("convTrackIndexEle", convTrackIndexEle, &b_convTrackIndexEle);
   fChain->SetBranchAddress("scPixChargeEle", scPixChargeEle, &b_scPixChargeEle);
   fChain->SetBranchAddress("hasMatchedConversionEle", hasMatchedConversionEle, &b_hasMatchedConversionEle);
   fChain->SetBranchAddress("classificationEle", classificationEle, &b_classificationEle);
   fChain->SetBranchAddress("fbremEle", fbremEle, &b_fbremEle);
   fChain->SetBranchAddress("nbremsEle", nbremsEle, &b_nbremsEle);
   fChain->SetBranchAddress("hOverEEle", hOverEEle, &b_hOverEEle);
   fChain->SetBranchAddress("eSuperClusterOverPEle", eSuperClusterOverPEle, &b_eSuperClusterOverPEle);
   fChain->SetBranchAddress("eSeedOverPoutEle", eSeedOverPoutEle, &b_eSeedOverPoutEle);
   fChain->SetBranchAddress("eEleClusterOverPoutEle", eEleClusterOverPoutEle, &b_eEleClusterOverPoutEle);
   fChain->SetBranchAddress("deltaEtaAtVtxEle", deltaEtaAtVtxEle, &b_deltaEtaAtVtxEle);
   fChain->SetBranchAddress("deltaPhiAtVtxEle", deltaPhiAtVtxEle, &b_deltaPhiAtVtxEle);
   fChain->SetBranchAddress("deltaEtaAtCaloEle", deltaEtaAtCaloEle, &b_deltaEtaAtCaloEle);
   fChain->SetBranchAddress("deltaPhiAtCaloEle", deltaPhiAtCaloEle, &b_deltaPhiAtCaloEle);
   fChain->SetBranchAddress("deltaEtaEleClusterTrackAtCaloEle", deltaEtaEleClusterTrackAtCaloEle, &b_deltaEtaEleClusterTrackAtCaloEle);
   fChain->SetBranchAddress("deltaPhiEleClusterTrackAtCaloEle", deltaPhiEleClusterTrackAtCaloEle, &b_deltaPhiEleClusterTrackAtCaloEle);
   fChain->SetBranchAddress("dr03TkSumPtEle", dr03TkSumPtEle, &b_dr03TkSumPtEle);
   fChain->SetBranchAddress("dr03EcalRecHitSumEtEle", dr03EcalRecHitSumEtEle, &b_dr03EcalRecHitSumEtEle);
   fChain->SetBranchAddress("dr03HcalTowerSumEtEle", dr03HcalTowerSumEtEle, &b_dr03HcalTowerSumEtEle);
   fChain->SetBranchAddress("dr04TkSumPtEle", dr04TkSumPtEle, &b_dr04TkSumPtEle);
   fChain->SetBranchAddress("dr04EcalRecHitSumEtEle", dr04EcalRecHitSumEtEle, &b_dr04EcalRecHitSumEtEle);
   fChain->SetBranchAddress("dr04HcalTowerSumEtEle", dr04HcalTowerSumEtEle, &b_dr04HcalTowerSumEtEle);
   fChain->SetBranchAddress("dr03HcalTowerSumEtFullConeEle", dr03HcalTowerSumEtFullConeEle, &b_dr03HcalTowerSumEtFullConeEle);
   fChain->SetBranchAddress("dr04HcalTowerSumEtFullConeEle", dr04HcalTowerSumEtFullConeEle, &b_dr04HcalTowerSumEtFullConeEle);
   fChain->SetBranchAddress("pflowMVAEle", pflowMVAEle, &b_pflowMVAEle);
   fChain->SetBranchAddress("mvaidnontrigEle", mvaidnontrigEle, &b_mvaidnontrigEle);
   fChain->SetBranchAddress("mvaidtrigEle", mvaidtrigEle, &b_mvaidtrigEle);
   fChain->SetBranchAddress("mvaidisotrigEle", mvaidisotrigEle, &b_mvaidisotrigEle);
   fChain->SetBranchAddress("pfCombinedIsoEle", pfCombinedIsoEle, &b_pfCombinedIsoEle);
   fChain->SetBranchAddress("pfCandChargedIso03Ele", pfCandChargedIso03Ele, &b_pfCandChargedIso03Ele);
   fChain->SetBranchAddress("pfCandNeutralIso03Ele", pfCandNeutralIso03Ele, &b_pfCandNeutralIso03Ele);
   fChain->SetBranchAddress("pfCandPhotonIso03Ele", pfCandPhotonIso03Ele, &b_pfCandPhotonIso03Ele);
   fChain->SetBranchAddress("pfCandChargedIso04Ele", pfCandChargedIso04Ele, &b_pfCandChargedIso04Ele);
   fChain->SetBranchAddress("pfCandNeutralIso04Ele", pfCandNeutralIso04Ele, &b_pfCandNeutralIso04Ele);
   fChain->SetBranchAddress("pfCandPhotonIso04Ele", pfCandPhotonIso04Ele, &b_pfCandPhotonIso04Ele);
   fChain->SetBranchAddress("pfCandChargedDirIso04Ele", pfCandChargedDirIso04Ele, &b_pfCandChargedDirIso04Ele);
   fChain->SetBranchAddress("pfCandNeutralDirIso04Ele", pfCandNeutralDirIso04Ele, &b_pfCandNeutralDirIso04Ele);
   fChain->SetBranchAddress("pfCandPhotonDirIso04Ele", pfCandPhotonDirIso04Ele, &b_pfCandPhotonDirIso04Ele);
   fChain->SetBranchAddress("pfCandChargedPUIso03Ele", pfCandChargedPUIso03Ele, &b_pfCandChargedPUIso03Ele);
   fChain->SetBranchAddress("pfCandChargedPUIso04Ele", pfCandChargedPUIso04Ele, &b_pfCandChargedPUIso04Ele);
   fChain->SetBranchAddress("nCalibEle", &nCalibEle, &b_nCalibEle);
   fChain->SetBranchAddress("chargeCalibEle", chargeCalibEle, &b_chargeCalibEle);
   fChain->SetBranchAddress("energyCalibEle", energyCalibEle, &b_energyCalibEle);
   fChain->SetBranchAddress("thetaCalibEle", thetaCalibEle, &b_thetaCalibEle);
   fChain->SetBranchAddress("etaCalibEle", etaCalibEle, &b_etaCalibEle);
   fChain->SetBranchAddress("phiCalibEle", phiCalibEle, &b_phiCalibEle);
   fChain->SetBranchAddress("pxCalibEle", pxCalibEle, &b_pxCalibEle);
   fChain->SetBranchAddress("pyCalibEle", pyCalibEle, &b_pyCalibEle);
   fChain->SetBranchAddress("pzCalibEle", pzCalibEle, &b_pzCalibEle);
   fChain->SetBranchAddress("vertexXCalibEle", vertexXCalibEle, &b_vertexXCalibEle);
   fChain->SetBranchAddress("vertexYCalibEle", vertexYCalibEle, &b_vertexYCalibEle);
   fChain->SetBranchAddress("vertexZCalibEle", vertexZCalibEle, &b_vertexZCalibEle);
   fChain->SetBranchAddress("energyErrorCalibEle", energyErrorCalibEle, &b_energyErrorCalibEle);
   fChain->SetBranchAddress("nPho", &nPho, &b_nPho);
   fChain->SetBranchAddress("nPerPVPho", &nPerPVPho, &b_nPerPVPho);
   fChain->SetBranchAddress("chargePho", chargePho, &b_chargePho);
   fChain->SetBranchAddress("energyPho", energyPho, &b_energyPho);
   fChain->SetBranchAddress("thetaPho", thetaPho, &b_thetaPho);
   fChain->SetBranchAddress("etaPho", etaPho, &b_etaPho);
   fChain->SetBranchAddress("phiPho", phiPho, &b_phiPho);
   fChain->SetBranchAddress("pxPho", pxPho, &b_pxPho);
   fChain->SetBranchAddress("pyPho", pyPho, &b_pyPho);
   fChain->SetBranchAddress("pzPho", pzPho, &b_pzPho);
   fChain->SetBranchAddress("vertexXPho", vertexXPho, &b_vertexXPho);
   fChain->SetBranchAddress("vertexYPho", vertexYPho, &b_vertexYPho);
   fChain->SetBranchAddress("vertexZPho", vertexZPho, &b_vertexZPho);
   fChain->SetBranchAddress("fiducialFlagsPho", fiducialFlagsPho, &b_fiducialFlagsPho);
   fChain->SetBranchAddress("recoFlagsPho", recoFlagsPho, &b_recoFlagsPho);
   fChain->SetBranchAddress("superClusterIndexPho", superClusterIndexPho, &b_superClusterIndexPho);
   fChain->SetBranchAddress("PFsuperClusterIndexPho", PFsuperClusterIndexPho, &b_PFsuperClusterIndexPho);
   fChain->SetBranchAddress("hOverEPho", hOverEPho, &b_hOverEPho);
   fChain->SetBranchAddress("hTowOverEPho", hTowOverEPho, &b_hTowOverEPho);
   fChain->SetBranchAddress("dr03TkSumPtPho", dr03TkSumPtPho, &b_dr03TkSumPtPho);
   fChain->SetBranchAddress("dr03HollowTkSumPtPho", dr03HollowTkSumPtPho, &b_dr03HollowTkSumPtPho);
   fChain->SetBranchAddress("dr03EcalRecHitSumEtPho", dr03EcalRecHitSumEtPho, &b_dr03EcalRecHitSumEtPho);
   fChain->SetBranchAddress("dr03HcalTowerSumEtPho", dr03HcalTowerSumEtPho, &b_dr03HcalTowerSumEtPho);
   fChain->SetBranchAddress("dr04TkSumPtPho", dr04TkSumPtPho, &b_dr04TkSumPtPho);
   fChain->SetBranchAddress("dr04HollowTkSumPtPho", dr04HollowTkSumPtPho, &b_dr04HollowTkSumPtPho);
   fChain->SetBranchAddress("dr04EcalRecHitSumEtPho", dr04EcalRecHitSumEtPho, &b_dr04EcalRecHitSumEtPho);
   fChain->SetBranchAddress("dr04HcalTowerSumEtPho", dr04HcalTowerSumEtPho, &b_dr04HcalTowerSumEtPho);
   fChain->SetBranchAddress("chargedHadronIsoPho", chargedHadronIsoPho, &b_chargedHadronIsoPho);
   fChain->SetBranchAddress("neutralHadronIsoPho", neutralHadronIsoPho, &b_neutralHadronIsoPho);
   fChain->SetBranchAddress("photonIsoPho", photonIsoPho, &b_photonIsoPho);
   fChain->SetBranchAddress("hasPixelSeedPho", hasPixelSeedPho, &b_hasPixelSeedPho);
   fChain->SetBranchAddress("hasMatchedConversionPho", hasMatchedConversionPho, &b_hasMatchedConversionPho);
   fChain->SetBranchAddress("dr01NeutralHadronPFIsoPho", dr01NeutralHadronPFIsoPho, &b_dr01NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr01PhotonPFIsoPho", dr01PhotonPFIsoPho, &b_dr01PhotonPFIsoPho);
   fChain->SetBranchAddress("dr02NeutralHadronPFIsoPho", dr02NeutralHadronPFIsoPho, &b_dr02NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr02PhotonPFIsoPho", dr02PhotonPFIsoPho, &b_dr02PhotonPFIsoPho);
   fChain->SetBranchAddress("dr03NeutralHadronPFIsoPho", dr03NeutralHadronPFIsoPho, &b_dr03NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr03PhotonPFIsoPho", dr03PhotonPFIsoPho, &b_dr03PhotonPFIsoPho);
   fChain->SetBranchAddress("dr04NeutralHadronPFIsoPho", dr04NeutralHadronPFIsoPho, &b_dr04NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr04PhotonPFIsoPho", dr04PhotonPFIsoPho, &b_dr04PhotonPFIsoPho);
   fChain->SetBranchAddress("dr05NeutralHadronPFIsoPho", dr05NeutralHadronPFIsoPho, &b_dr05NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr05PhotonPFIsoPho", dr05PhotonPFIsoPho, &b_dr05PhotonPFIsoPho);
   fChain->SetBranchAddress("dr06NeutralHadronPFIsoPho", dr06NeutralHadronPFIsoPho, &b_dr06NeutralHadronPFIsoPho);
   fChain->SetBranchAddress("dr06PhotonPFIsoPho", dr06PhotonPFIsoPho, &b_dr06PhotonPFIsoPho);
   fChain->SetBranchAddress("dr01ChargedHadronPFIsoPho", dr01ChargedHadronPFIsoPho, &b_dr01ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("dr02ChargedHadronPFIsoPho", dr02ChargedHadronPFIsoPho, &b_dr02ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("dr03ChargedHadronPFIsoPho", dr03ChargedHadronPFIsoPho, &b_dr03ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("dr04ChargedHadronPFIsoPho", dr04ChargedHadronPFIsoPho, &b_dr04ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("dr05ChargedHadronPFIsoPho", dr05ChargedHadronPFIsoPho, &b_dr05ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("dr06ChargedHadronPFIsoPho", dr06ChargedHadronPFIsoPho, &b_dr06ChargedHadronPFIsoPho);
   fChain->SetBranchAddress("nConv", &nConv, &b_nConv);
   fChain->SetBranchAddress("pxPairConv", pxPairConv, &b_pxPairConv);
   fChain->SetBranchAddress("pyPairConv", pyPairConv, &b_pyPairConv);
   fChain->SetBranchAddress("pzPairConv", pzPairConv, &b_pzPairConv);
   fChain->SetBranchAddress("pxRefittedPairConv", pxRefittedPairConv, &b_pxRefittedPairConv);
   fChain->SetBranchAddress("pyRefittedPairConv", pyRefittedPairConv, &b_pyRefittedPairConv);
   fChain->SetBranchAddress("pzRefittedPairConv", pzRefittedPairConv, &b_pzRefittedPairConv);
   fChain->SetBranchAddress("etaRefittedPairConv", etaRefittedPairConv, &b_etaRefittedPairConv);
   fChain->SetBranchAddress("phiRefittedPairConv", phiRefittedPairConv, &b_phiRefittedPairConv);
   fChain->SetBranchAddress("ptRefittedPairConv", ptRefittedPairConv, &b_ptRefittedPairConv);
   fChain->SetBranchAddress("energyRefittedPairConv", energyRefittedPairConv, &b_energyRefittedPairConv);
   fChain->SetBranchAddress("eOverPRefittedPairConv", eOverPRefittedPairConv, &b_eOverPRefittedPairConv);
   fChain->SetBranchAddress("zOfPVFromTracksConv", zOfPVFromTracksConv, &b_zOfPVFromTracksConv);
   fChain->SetBranchAddress("xVtxConv", xVtxConv, &b_xVtxConv);
   fChain->SetBranchAddress("yVtxConv", yVtxConv, &b_yVtxConv);
   fChain->SetBranchAddress("zVtxConv", zVtxConv, &b_zVtxConv);
   fChain->SetBranchAddress("chi2VtxConv", chi2VtxConv, &b_chi2VtxConv);
   fChain->SetBranchAddress("chi2ProbVtxConv", chi2ProbVtxConv, &b_chi2ProbVtxConv);
   fChain->SetBranchAddress("isValidVtxConv", isValidVtxConv, &b_isValidVtxConv);
   fChain->SetBranchAddress("nTracksVtxConv", nTracksVtxConv, &b_nTracksVtxConv);
   fChain->SetBranchAddress("mvaOutVtxConv", mvaOutVtxConv, &b_mvaOutVtxConv);
   fChain->SetBranchAddress("trk1DzConv", trk1DzConv, &b_trk1DzConv);
   fChain->SetBranchAddress("trk1DzErrorConv", trk1DzErrorConv, &b_trk1DzErrorConv);
   fChain->SetBranchAddress("trk1ChargeConv", trk1ChargeConv, &b_trk1ChargeConv);
   fChain->SetBranchAddress("trk1AlgoConv", trk1AlgoConv, &b_trk1AlgoConv);
   fChain->SetBranchAddress("trk1PtConv", trk1PtConv, &b_trk1PtConv);
   fChain->SetBranchAddress("trk1D0Conv", trk1D0Conv, &b_trk1D0Conv);
   fChain->SetBranchAddress("trk1PoutConv", trk1PoutConv, &b_trk1PoutConv);
   fChain->SetBranchAddress("trk1PinConv", trk1PinConv, &b_trk1PinConv);
   fChain->SetBranchAddress("trk2DzConv", trk2DzConv, &b_trk2DzConv);
   fChain->SetBranchAddress("trk2DzErrorConv", trk2DzErrorConv, &b_trk2DzErrorConv);
   fChain->SetBranchAddress("trk2ChargeConv", trk2ChargeConv, &b_trk2ChargeConv);
   fChain->SetBranchAddress("trk2AlgoConv", trk2AlgoConv, &b_trk2AlgoConv);
   fChain->SetBranchAddress("trk2PtConv", trk2PtConv, &b_trk2PtConv);
   fChain->SetBranchAddress("trk2D0Conv", trk2D0Conv, &b_trk2D0Conv);
   fChain->SetBranchAddress("trk2PoutConv", trk2PoutConv, &b_trk2PoutConv);
   fChain->SetBranchAddress("trk2PinConv", trk2PinConv, &b_trk2PinConv);
   fChain->SetBranchAddress("nSC", &nSC, &b_nSC);
   fChain->SetBranchAddress("nBCSC", nBCSC, &b_nBCSC);
   fChain->SetBranchAddress("nCrystalsSC", nCrystalsSC, &b_nCrystalsSC);
   fChain->SetBranchAddress("rawEnergySC", rawEnergySC, &b_rawEnergySC);
   fChain->SetBranchAddress("energySC", energySC, &b_energySC);
   fChain->SetBranchAddress("seedClusterEnergySC", seedClusterEnergySC, &b_seedClusterEnergySC);
   fChain->SetBranchAddress("esEnergySC", esEnergySC, &b_esEnergySC);
   fChain->SetBranchAddress("etaSC", etaSC, &b_etaSC);
   fChain->SetBranchAddress("thetaSC", thetaSC, &b_thetaSC);
   fChain->SetBranchAddress("phiSC", phiSC, &b_phiSC);
   fChain->SetBranchAddress("xPosSC", xPosSC, &b_xPosSC);
   fChain->SetBranchAddress("yPosSC", yPosSC, &b_yPosSC);
   fChain->SetBranchAddress("zPosSC", zPosSC, &b_zPosSC);
   fChain->SetBranchAddress("phiWidthSC", phiWidthSC, &b_phiWidthSC);
   fChain->SetBranchAddress("etaWidthSC", etaWidthSC, &b_etaWidthSC);
   fChain->SetBranchAddress("e3x3SC", e3x3SC, &b_e3x3SC);
   fChain->SetBranchAddress("e3x1SC", e3x1SC, &b_e3x1SC);
   fChain->SetBranchAddress("e1x3SC", e1x3SC, &b_e1x3SC);
   fChain->SetBranchAddress("e4x4SC", e4x4SC, &b_e4x4SC);
   fChain->SetBranchAddress("e5x5SC", e5x5SC, &b_e5x5SC);
   fChain->SetBranchAddress("eMaxSC", eMaxSC, &b_eMaxSC);
   fChain->SetBranchAddress("e2x2SC", e2x2SC, &b_e2x2SC);
   fChain->SetBranchAddress("e2ndSC", e2ndSC, &b_e2ndSC);
   fChain->SetBranchAddress("e1x5SC", e1x5SC, &b_e1x5SC);
   fChain->SetBranchAddress("e2x5MaxSC", e2x5MaxSC, &b_e2x5MaxSC);
   fChain->SetBranchAddress("e2x5LeftSC", e2x5LeftSC, &b_e2x5LeftSC);
   fChain->SetBranchAddress("e2x5RightSC", e2x5RightSC, &b_e2x5RightSC);
   fChain->SetBranchAddress("e2x5TopSC", e2x5TopSC, &b_e2x5TopSC);
   fChain->SetBranchAddress("e2x5BottomSC", e2x5BottomSC, &b_e2x5BottomSC);
   fChain->SetBranchAddress("eLeftSC", eLeftSC, &b_eLeftSC);
   fChain->SetBranchAddress("eRightSC", eRightSC, &b_eRightSC);
   fChain->SetBranchAddress("eTopSC", eTopSC, &b_eTopSC);
   fChain->SetBranchAddress("eBottomSC", eBottomSC, &b_eBottomSC);
   fChain->SetBranchAddress("e4SwissCrossSC", e4SwissCrossSC, &b_e4SwissCrossSC);
   fChain->SetBranchAddress("covIEtaIEtaSC", covIEtaIEtaSC, &b_covIEtaIEtaSC);
   fChain->SetBranchAddress("covIEtaIPhiSC", covIEtaIPhiSC, &b_covIEtaIPhiSC);
   fChain->SetBranchAddress("covIPhiIPhiSC", covIPhiIPhiSC, &b_covIPhiIPhiSC);
   fChain->SetBranchAddress("sMajSC", sMajSC, &b_sMajSC);
   fChain->SetBranchAddress("sMinSC", sMinSC, &b_sMinSC);
   fChain->SetBranchAddress("alphaSC", alphaSC, &b_alphaSC);
   fChain->SetBranchAddress("hOverESC", hOverESC, &b_hOverESC);
   fChain->SetBranchAddress("recoFlagSC", recoFlagSC, &b_recoFlagSC);
   fChain->SetBranchAddress("timeSC", timeSC, &b_timeSC);
   fChain->SetBranchAddress("chi2SC", chi2SC, &b_chi2SC);
   fChain->SetBranchAddress("seedEnergySC", seedEnergySC, &b_seedEnergySC);
   fChain->SetBranchAddress("seedXSC", seedXSC, &b_seedXSC);
   fChain->SetBranchAddress("seedYSC", seedYSC, &b_seedYSC);
   fChain->SetBranchAddress("esEffsIxIxSC", esEffsIxIxSC, &b_esEffsIxIxSC);
   fChain->SetBranchAddress("esEffsIyIySC", esEffsIyIySC, &b_esEffsIyIySC);
   fChain->SetBranchAddress("esL1EnergySC", esL1EnergySC, &b_esL1EnergySC);
   fChain->SetBranchAddress("esL2EnergySC", esL2EnergySC, &b_esL2EnergySC);
   fChain->SetBranchAddress("esL1StripsSC", esL1StripsSC, &b_esL1StripsSC);
   fChain->SetBranchAddress("esL2StripsSC", esL2StripsSC, &b_esL2StripsSC);
   fChain->SetBranchAddress("nPFSC", &nPFSC, &b_nPFSC);
   fChain->SetBranchAddress("nBCPFSC", nBCPFSC, &b_nBCPFSC);
   fChain->SetBranchAddress("nCrystalsPFSC", nCrystalsPFSC, &b_nCrystalsPFSC);
   fChain->SetBranchAddress("rawEnergyPFSC", rawEnergyPFSC, &b_rawEnergyPFSC);
   fChain->SetBranchAddress("energyPFSC", energyPFSC, &b_energyPFSC);
   fChain->SetBranchAddress("seedClusterEnergyPFSC", seedClusterEnergyPFSC, &b_seedClusterEnergyPFSC);
   fChain->SetBranchAddress("esEnergyPFSC", esEnergyPFSC, &b_esEnergyPFSC);
   fChain->SetBranchAddress("etaPFSC", etaPFSC, &b_etaPFSC);
   fChain->SetBranchAddress("thetaPFSC", thetaPFSC, &b_thetaPFSC);
   fChain->SetBranchAddress("phiPFSC", phiPFSC, &b_phiPFSC);
   fChain->SetBranchAddress("xPosPFSC", xPosPFSC, &b_xPosPFSC);
   fChain->SetBranchAddress("yPosPFSC", yPosPFSC, &b_yPosPFSC);
   fChain->SetBranchAddress("zPosPFSC", zPosPFSC, &b_zPosPFSC);
   fChain->SetBranchAddress("phiWidthPFSC", phiWidthPFSC, &b_phiWidthPFSC);
   fChain->SetBranchAddress("etaWidthPFSC", etaWidthPFSC, &b_etaWidthPFSC);
   fChain->SetBranchAddress("e3x3PFSC", e3x3PFSC, &b_e3x3PFSC);
   fChain->SetBranchAddress("e3x1PFSC", e3x1PFSC, &b_e3x1PFSC);
   fChain->SetBranchAddress("e1x3PFSC", e1x3PFSC, &b_e1x3PFSC);
   fChain->SetBranchAddress("e4x4PFSC", e4x4PFSC, &b_e4x4PFSC);
   fChain->SetBranchAddress("e5x5PFSC", e5x5PFSC, &b_e5x5PFSC);
   fChain->SetBranchAddress("eMaxPFSC", eMaxPFSC, &b_eMaxPFSC);
   fChain->SetBranchAddress("e2x2PFSC", e2x2PFSC, &b_e2x2PFSC);
   fChain->SetBranchAddress("e2ndPFSC", e2ndPFSC, &b_e2ndPFSC);
   fChain->SetBranchAddress("e1x5PFSC", e1x5PFSC, &b_e1x5PFSC);
   fChain->SetBranchAddress("e2x5MaxPFSC", e2x5MaxPFSC, &b_e2x5MaxPFSC);
   fChain->SetBranchAddress("e2x5LeftPFSC", e2x5LeftPFSC, &b_e2x5LeftPFSC);
   fChain->SetBranchAddress("e2x5RightPFSC", e2x5RightPFSC, &b_e2x5RightPFSC);
   fChain->SetBranchAddress("e2x5TopPFSC", e2x5TopPFSC, &b_e2x5TopPFSC);
   fChain->SetBranchAddress("e2x5BottomPFSC", e2x5BottomPFSC, &b_e2x5BottomPFSC);
   fChain->SetBranchAddress("eLeftPFSC", eLeftPFSC, &b_eLeftPFSC);
   fChain->SetBranchAddress("eRightPFSC", eRightPFSC, &b_eRightPFSC);
   fChain->SetBranchAddress("eTopPFSC", eTopPFSC, &b_eTopPFSC);
   fChain->SetBranchAddress("eBottomPFSC", eBottomPFSC, &b_eBottomPFSC);
   fChain->SetBranchAddress("e4SwissCrossPFSC", e4SwissCrossPFSC, &b_e4SwissCrossPFSC);
   fChain->SetBranchAddress("covIEtaIEtaPFSC", covIEtaIEtaPFSC, &b_covIEtaIEtaPFSC);
   fChain->SetBranchAddress("covIEtaIPhiPFSC", covIEtaIPhiPFSC, &b_covIEtaIPhiPFSC);
   fChain->SetBranchAddress("covIPhiIPhiPFSC", covIPhiIPhiPFSC, &b_covIPhiIPhiPFSC);
   fChain->SetBranchAddress("sMajPFSC", sMajPFSC, &b_sMajPFSC);
   fChain->SetBranchAddress("sMinPFSC", sMinPFSC, &b_sMinPFSC);
   fChain->SetBranchAddress("alphaPFSC", alphaPFSC, &b_alphaPFSC);
   fChain->SetBranchAddress("hOverEPFSC", hOverEPFSC, &b_hOverEPFSC);
   fChain->SetBranchAddress("recoFlagPFSC", recoFlagPFSC, &b_recoFlagPFSC);
   fChain->SetBranchAddress("timePFSC", timePFSC, &b_timePFSC);
   fChain->SetBranchAddress("chi2PFSC", chi2PFSC, &b_chi2PFSC);
   fChain->SetBranchAddress("seedEnergyPFSC", seedEnergyPFSC, &b_seedEnergyPFSC);
   fChain->SetBranchAddress("seedXPFSC", seedXPFSC, &b_seedXPFSC);
   fChain->SetBranchAddress("seedYPFSC", seedYPFSC, &b_seedYPFSC);
   fChain->SetBranchAddress("esEffsIxIxPFSC", esEffsIxIxPFSC, &b_esEffsIxIxPFSC);
   fChain->SetBranchAddress("esEffsIyIyPFSC", esEffsIyIyPFSC, &b_esEffsIyIyPFSC);
   fChain->SetBranchAddress("esL1EnergyPFSC", esL1EnergyPFSC, &b_esL1EnergyPFSC);
   fChain->SetBranchAddress("esL2EnergyPFSC", esL2EnergyPFSC, &b_esL2EnergyPFSC);
   fChain->SetBranchAddress("esL1StripsPFSC", esL1StripsPFSC, &b_esL1StripsPFSC);
   fChain->SetBranchAddress("esL2StripsPFSC", esL2StripsPFSC, &b_esL2StripsPFSC);
   fChain->SetBranchAddress("nPhoPFSC", &nPhoPFSC, &b_nPhoPFSC);
   fChain->SetBranchAddress("nBCPhoPFSC", nBCPhoPFSC, &b_nBCPhoPFSC);
   fChain->SetBranchAddress("nCrystalsPhoPFSC", nCrystalsPhoPFSC, &b_nCrystalsPhoPFSC);
   fChain->SetBranchAddress("rawEnergyPhoPFSC", rawEnergyPhoPFSC, &b_rawEnergyPhoPFSC);
   fChain->SetBranchAddress("energyPhoPFSC", energyPhoPFSC, &b_energyPhoPFSC);
   fChain->SetBranchAddress("seedClusterEnergyPhoPFSC", seedClusterEnergyPhoPFSC, &b_seedClusterEnergyPhoPFSC);
   fChain->SetBranchAddress("esEnergyPhoPFSC", esEnergyPhoPFSC, &b_esEnergyPhoPFSC);
   fChain->SetBranchAddress("etaPhoPFSC", etaPhoPFSC, &b_etaPhoPFSC);
   fChain->SetBranchAddress("thetaPhoPFSC", thetaPhoPFSC, &b_thetaPhoPFSC);
   fChain->SetBranchAddress("phiPhoPFSC", phiPhoPFSC, &b_phiPhoPFSC);
   fChain->SetBranchAddress("xPosPhoPFSC", xPosPhoPFSC, &b_xPosPhoPFSC);
   fChain->SetBranchAddress("yPosPhoPFSC", yPosPhoPFSC, &b_yPosPhoPFSC);
   fChain->SetBranchAddress("zPosPhoPFSC", zPosPhoPFSC, &b_zPosPhoPFSC);
   fChain->SetBranchAddress("phiWidthPhoPFSC", phiWidthPhoPFSC, &b_phiWidthPhoPFSC);
   fChain->SetBranchAddress("etaWidthPhoPFSC", etaWidthPhoPFSC, &b_etaWidthPhoPFSC);
   fChain->SetBranchAddress("e3x3PhoPFSC", e3x3PhoPFSC, &b_e3x3PhoPFSC);
   fChain->SetBranchAddress("e3x1PhoPFSC", e3x1PhoPFSC, &b_e3x1PhoPFSC);
   fChain->SetBranchAddress("e1x3PhoPFSC", e1x3PhoPFSC, &b_e1x3PhoPFSC);
   fChain->SetBranchAddress("e4x4PhoPFSC", e4x4PhoPFSC, &b_e4x4PhoPFSC);
   fChain->SetBranchAddress("e5x5PhoPFSC", e5x5PhoPFSC, &b_e5x5PhoPFSC);
   fChain->SetBranchAddress("eMaxPhoPFSC", eMaxPhoPFSC, &b_eMaxPhoPFSC);
   fChain->SetBranchAddress("e2x2PhoPFSC", e2x2PhoPFSC, &b_e2x2PhoPFSC);
   fChain->SetBranchAddress("e2ndPhoPFSC", e2ndPhoPFSC, &b_e2ndPhoPFSC);
   fChain->SetBranchAddress("e1x5PhoPFSC", e1x5PhoPFSC, &b_e1x5PhoPFSC);
   fChain->SetBranchAddress("e2x5MaxPhoPFSC", e2x5MaxPhoPFSC, &b_e2x5MaxPhoPFSC);
   fChain->SetBranchAddress("e2x5LeftPhoPFSC", e2x5LeftPhoPFSC, &b_e2x5LeftPhoPFSC);
   fChain->SetBranchAddress("e2x5RightPhoPFSC", e2x5RightPhoPFSC, &b_e2x5RightPhoPFSC);
   fChain->SetBranchAddress("e2x5TopPhoPFSC", e2x5TopPhoPFSC, &b_e2x5TopPhoPFSC);
   fChain->SetBranchAddress("e2x5BottomPhoPFSC", e2x5BottomPhoPFSC, &b_e2x5BottomPhoPFSC);
   fChain->SetBranchAddress("eLeftPhoPFSC", eLeftPhoPFSC, &b_eLeftPhoPFSC);
   fChain->SetBranchAddress("eRightPhoPFSC", eRightPhoPFSC, &b_eRightPhoPFSC);
   fChain->SetBranchAddress("eTopPhoPFSC", eTopPhoPFSC, &b_eTopPhoPFSC);
   fChain->SetBranchAddress("eBottomPhoPFSC", eBottomPhoPFSC, &b_eBottomPhoPFSC);
   fChain->SetBranchAddress("e4SwissCrossPhoPFSC", e4SwissCrossPhoPFSC, &b_e4SwissCrossPhoPFSC);
   fChain->SetBranchAddress("covIEtaIEtaPhoPFSC", covIEtaIEtaPhoPFSC, &b_covIEtaIEtaPhoPFSC);
   fChain->SetBranchAddress("covIEtaIPhiPhoPFSC", covIEtaIPhiPhoPFSC, &b_covIEtaIPhiPhoPFSC);
   fChain->SetBranchAddress("covIPhiIPhiPhoPFSC", covIPhiIPhiPhoPFSC, &b_covIPhiIPhiPhoPFSC);
   fChain->SetBranchAddress("sMajPhoPFSC", sMajPhoPFSC, &b_sMajPhoPFSC);
   fChain->SetBranchAddress("sMinPhoPFSC", sMinPhoPFSC, &b_sMinPhoPFSC);
   fChain->SetBranchAddress("alphaPhoPFSC", alphaPhoPFSC, &b_alphaPhoPFSC);
   fChain->SetBranchAddress("hOverEPhoPFSC", hOverEPhoPFSC, &b_hOverEPhoPFSC);
   fChain->SetBranchAddress("recoFlagPhoPFSC", recoFlagPhoPFSC, &b_recoFlagPhoPFSC);
   fChain->SetBranchAddress("timePhoPFSC", timePhoPFSC, &b_timePhoPFSC);
   fChain->SetBranchAddress("chi2PhoPFSC", chi2PhoPFSC, &b_chi2PhoPFSC);
   fChain->SetBranchAddress("seedEnergyPhoPFSC", seedEnergyPhoPFSC, &b_seedEnergyPhoPFSC);
   fChain->SetBranchAddress("seedXPhoPFSC", seedXPhoPFSC, &b_seedXPhoPFSC);
   fChain->SetBranchAddress("seedYPhoPFSC", seedYPhoPFSC, &b_seedYPhoPFSC);
   fChain->SetBranchAddress("esEffsIxIxPhoPFSC", esEffsIxIxPhoPFSC, &b_esEffsIxIxPhoPFSC);
   fChain->SetBranchAddress("esEffsIyIyPhoPFSC", esEffsIyIyPhoPFSC, &b_esEffsIyIyPhoPFSC);
   fChain->SetBranchAddress("esL1EnergyPhoPFSC", esL1EnergyPhoPFSC, &b_esL1EnergyPhoPFSC);
   fChain->SetBranchAddress("esL2EnergyPhoPFSC", esL2EnergyPhoPFSC, &b_esL2EnergyPhoPFSC);
   fChain->SetBranchAddress("esL1StripsPhoPFSC", esL1StripsPhoPFSC, &b_esL1StripsPhoPFSC);
   fChain->SetBranchAddress("esL2StripsPhoPFSC", esL2StripsPhoPFSC, &b_esL2StripsPhoPFSC);
   fChain->SetBranchAddress("nBC", &nBC, &b_nBC);
   fChain->SetBranchAddress("etaBC", etaBC, &b_etaBC);
   fChain->SetBranchAddress("thetaBC", thetaBC, &b_thetaBC);
   fChain->SetBranchAddress("phiBC", phiBC, &b_phiBC);
   fChain->SetBranchAddress("etaCrystalBC", etaCrystalBC, &b_etaCrystalBC);
   fChain->SetBranchAddress("phiCrystalBC", phiCrystalBC, &b_phiCrystalBC);
   fChain->SetBranchAddress("iEtaBC", iEtaBC, &b_iEtaBC);
   fChain->SetBranchAddress("iPhiBC", iPhiBC, &b_iPhiBC);
   fChain->SetBranchAddress("thetaTiltBC", thetaTiltBC, &b_thetaTiltBC);
   fChain->SetBranchAddress("phiTiltBC", phiTiltBC, &b_phiTiltBC);
   fChain->SetBranchAddress("indexSCBC", indexSCBC, &b_indexSCBC);
   fChain->SetBranchAddress("nPFBC", &nPFBC, &b_nPFBC);
   fChain->SetBranchAddress("etaPFBC", etaPFBC, &b_etaPFBC);
   fChain->SetBranchAddress("thetaPFBC", thetaPFBC, &b_thetaPFBC);
   fChain->SetBranchAddress("phiPFBC", phiPFBC, &b_phiPFBC);
   fChain->SetBranchAddress("etaCrystalPFBC", etaCrystalPFBC, &b_etaCrystalPFBC);
   fChain->SetBranchAddress("phiCrystalPFBC", phiCrystalPFBC, &b_phiCrystalPFBC);
   fChain->SetBranchAddress("iEtaPFBC", iEtaPFBC, &b_iEtaPFBC);
   fChain->SetBranchAddress("iPhiPFBC", iPhiPFBC, &b_iPhiPFBC);
   fChain->SetBranchAddress("thetaTiltPFBC", thetaTiltPFBC, &b_thetaTiltPFBC);
   fChain->SetBranchAddress("phiTiltPFBC", phiTiltPFBC, &b_phiTiltPFBC);
   fChain->SetBranchAddress("indexSCPFBC", indexSCPFBC, &b_indexSCPFBC);
   fChain->SetBranchAddress("nPhoPFBC", &nPhoPFBC, &b_nPhoPFBC);
   fChain->SetBranchAddress("etaPhoPFBC", etaPhoPFBC, &b_etaPhoPFBC);
   fChain->SetBranchAddress("thetaPhoPFBC", thetaPhoPFBC, &b_thetaPhoPFBC);
   fChain->SetBranchAddress("phiPhoPFBC", phiPhoPFBC, &b_phiPhoPFBC);
   fChain->SetBranchAddress("etaCrystalPhoPFBC", etaCrystalPhoPFBC, &b_etaCrystalPhoPFBC);
   fChain->SetBranchAddress("phiCrystalPhoPFBC", phiCrystalPhoPFBC, &b_phiCrystalPhoPFBC);
   fChain->SetBranchAddress("iEtaPhoPFBC", iEtaPhoPFBC, &b_iEtaPhoPFBC);
   fChain->SetBranchAddress("iPhiPhoPFBC", iPhiPhoPFBC, &b_iPhiPhoPFBC);
   fChain->SetBranchAddress("thetaTiltPhoPFBC", thetaTiltPhoPFBC, &b_thetaTiltPhoPFBC);
   fChain->SetBranchAddress("phiTiltPhoPFBC", phiTiltPhoPFBC, &b_phiTiltPhoPFBC);
   fChain->SetBranchAddress("indexSCPhoPFBC", indexSCPhoPFBC, &b_indexSCPhoPFBC);
   fChain->SetBranchAddress("nTrack", &nTrack, &b_nTrack);
   fChain->SetBranchAddress("pxTrack", pxTrack, &b_pxTrack);
   fChain->SetBranchAddress("pyTrack", pyTrack, &b_pyTrack);
   fChain->SetBranchAddress("pzTrack", pzTrack, &b_pzTrack);
   fChain->SetBranchAddress("vtxIndexTrack", vtxIndexTrack, &b_vtxIndexTrack);
   fChain->SetBranchAddress("vtxWeightTrack", vtxWeightTrack, &b_vtxWeightTrack);
   fChain->SetBranchAddress("impactPar3DTrack", impactPar3DTrack, &b_impactPar3DTrack);
   fChain->SetBranchAddress("impactPar3DErrorTrack", impactPar3DErrorTrack, &b_impactPar3DErrorTrack);
   fChain->SetBranchAddress("transvImpactParTrack", transvImpactParTrack, &b_transvImpactParTrack);
   fChain->SetBranchAddress("transvImpactParErrorTrack", transvImpactParErrorTrack, &b_transvImpactParErrorTrack);
   fChain->SetBranchAddress("impactPar3DBiasedTrack", impactPar3DBiasedTrack, &b_impactPar3DBiasedTrack);
   fChain->SetBranchAddress("impactPar3DBiasedErrorTrack", impactPar3DBiasedErrorTrack, &b_impactPar3DBiasedErrorTrack);
   fChain->SetBranchAddress("transvImpactParBiasedTrack", transvImpactParBiasedTrack, &b_transvImpactParBiasedTrack);
   fChain->SetBranchAddress("transvImpactParBiasedErrorTrack", transvImpactParBiasedErrorTrack, &b_transvImpactParBiasedErrorTrack);
   fChain->SetBranchAddress("chargeTrack", chargeTrack, &b_chargeTrack);
   fChain->SetBranchAddress("ptErrorTrack", ptErrorTrack, &b_ptErrorTrack);
   fChain->SetBranchAddress("trackValidHitsTrack", trackValidHitsTrack, &b_trackValidHitsTrack);
   fChain->SetBranchAddress("trackLostHitsTrack", trackLostHitsTrack, &b_trackLostHitsTrack);
   fChain->SetBranchAddress("trackNormalizedChi2Track", trackNormalizedChi2Track, &b_trackNormalizedChi2Track);
   fChain->SetBranchAddress("qualityMaskTrack", qualityMaskTrack, &b_qualityMaskTrack);
   fChain->SetBranchAddress("trackVxTrack", trackVxTrack, &b_trackVxTrack);
   fChain->SetBranchAddress("trackVyTrack", trackVyTrack, &b_trackVyTrack);
   fChain->SetBranchAddress("trackVzTrack", trackVzTrack, &b_trackVzTrack);
   fChain->SetBranchAddress("d0Track", d0Track, &b_d0Track);
   fChain->SetBranchAddress("d0ErrorTrack", d0ErrorTrack, &b_d0ErrorTrack);
   fChain->SetBranchAddress("dzTrack", dzTrack, &b_dzTrack);
   fChain->SetBranchAddress("dzErrorTrack", dzErrorTrack, &b_dzErrorTrack);
   fChain->SetBranchAddress("pixelHitsTrack", pixelHitsTrack, &b_pixelHitsTrack);
   fChain->SetBranchAddress("trackerLayersWithMeasurementTrack", trackerLayersWithMeasurementTrack, &b_trackerLayersWithMeasurementTrack);
   fChain->SetBranchAddress("expInnerLayersTrack", expInnerLayersTrack, &b_expInnerLayersTrack);
   fChain->SetBranchAddress("numberOfValidPixelBarrelHitsTrack", numberOfValidPixelBarrelHitsTrack, &b_numberOfValidPixelBarrelHitsTrack);
   fChain->SetBranchAddress("numberOfValidPixelEndcapHitsTrack", numberOfValidPixelEndcapHitsTrack, &b_numberOfValidPixelEndcapHitsTrack);
   fChain->SetBranchAddress("numberOfValidStripTIBHitsTrack", numberOfValidStripTIBHitsTrack, &b_numberOfValidStripTIBHitsTrack);
   fChain->SetBranchAddress("numberOfValidStripTIDHitsTrack", numberOfValidStripTIDHitsTrack, &b_numberOfValidStripTIDHitsTrack);
   fChain->SetBranchAddress("numberOfValidStripTOBHitsTrack", numberOfValidStripTOBHitsTrack, &b_numberOfValidStripTOBHitsTrack);
   fChain->SetBranchAddress("numberOfValidStripTECHitsTrack", numberOfValidStripTECHitsTrack, &b_numberOfValidStripTECHitsTrack);
   fChain->SetBranchAddress("numberOfValidMuonHitsTrack", numberOfValidMuonHitsTrack, &b_numberOfValidMuonHitsTrack);
   fChain->SetBranchAddress("nGsfTrack", &nGsfTrack, &b_nGsfTrack);
   fChain->SetBranchAddress("pxGsfTrack", pxGsfTrack, &b_pxGsfTrack);
   fChain->SetBranchAddress("pyGsfTrack", pyGsfTrack, &b_pyGsfTrack);
   fChain->SetBranchAddress("pzGsfTrack", pzGsfTrack, &b_pzGsfTrack);
   fChain->SetBranchAddress("vtxIndexGsfTrack", vtxIndexGsfTrack, &b_vtxIndexGsfTrack);
   fChain->SetBranchAddress("vtxWeightGsfTrack", vtxWeightGsfTrack, &b_vtxWeightGsfTrack);
   fChain->SetBranchAddress("impactPar3DGsfTrack", impactPar3DGsfTrack, &b_impactPar3DGsfTrack);
   fChain->SetBranchAddress("impactPar3DErrorGsfTrack", impactPar3DErrorGsfTrack, &b_impactPar3DErrorGsfTrack);
   fChain->SetBranchAddress("transvImpactParGsfTrack", transvImpactParGsfTrack, &b_transvImpactParGsfTrack);
   fChain->SetBranchAddress("transvImpactParErrorGsfTrack", transvImpactParErrorGsfTrack, &b_transvImpactParErrorGsfTrack);
   fChain->SetBranchAddress("impactPar3DBiasedGsfTrack", impactPar3DBiasedGsfTrack, &b_impactPar3DBiasedGsfTrack);
   fChain->SetBranchAddress("impactPar3DBiasedErrorGsfTrack", impactPar3DBiasedErrorGsfTrack, &b_impactPar3DBiasedErrorGsfTrack);
   fChain->SetBranchAddress("transvImpactParBiasedGsfTrack", transvImpactParBiasedGsfTrack, &b_transvImpactParBiasedGsfTrack);
   fChain->SetBranchAddress("transvImpactParBiasedErrorGsfTrack", transvImpactParBiasedErrorGsfTrack, &b_transvImpactParBiasedErrorGsfTrack);
   fChain->SetBranchAddress("chargeGsfTrack", chargeGsfTrack, &b_chargeGsfTrack);
   fChain->SetBranchAddress("ptErrorGsfTrack", ptErrorGsfTrack, &b_ptErrorGsfTrack);
   fChain->SetBranchAddress("trackValidHitsGsfTrack", trackValidHitsGsfTrack, &b_trackValidHitsGsfTrack);
   fChain->SetBranchAddress("trackLostHitsGsfTrack", trackLostHitsGsfTrack, &b_trackLostHitsGsfTrack);
   fChain->SetBranchAddress("trackNormalizedChi2GsfTrack", trackNormalizedChi2GsfTrack, &b_trackNormalizedChi2GsfTrack);
   fChain->SetBranchAddress("qualityMaskGsfTrack", qualityMaskGsfTrack, &b_qualityMaskGsfTrack);
   fChain->SetBranchAddress("trackVxGsfTrack", trackVxGsfTrack, &b_trackVxGsfTrack);
   fChain->SetBranchAddress("trackVyGsfTrack", trackVyGsfTrack, &b_trackVyGsfTrack);
   fChain->SetBranchAddress("trackVzGsfTrack", trackVzGsfTrack, &b_trackVzGsfTrack);
   fChain->SetBranchAddress("d0GsfTrack", d0GsfTrack, &b_d0GsfTrack);
   fChain->SetBranchAddress("d0ErrorGsfTrack", d0ErrorGsfTrack, &b_d0ErrorGsfTrack);
   fChain->SetBranchAddress("dzGsfTrack", dzGsfTrack, &b_dzGsfTrack);
   fChain->SetBranchAddress("dzErrorGsfTrack", dzErrorGsfTrack, &b_dzErrorGsfTrack);
   fChain->SetBranchAddress("pixelHitsGsfTrack", pixelHitsGsfTrack, &b_pixelHitsGsfTrack);
   fChain->SetBranchAddress("trackerLayersWithMeasurementGsfTrack", trackerLayersWithMeasurementGsfTrack, &b_trackerLayersWithMeasurementGsfTrack);
   fChain->SetBranchAddress("expInnerLayersGsfTrack", expInnerLayersGsfTrack, &b_expInnerLayersGsfTrack);
   fChain->SetBranchAddress("numberOfValidPixelBarrelHitsGsfTrack", numberOfValidPixelBarrelHitsGsfTrack, &b_numberOfValidPixelBarrelHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidPixelEndcapHitsGsfTrack", numberOfValidPixelEndcapHitsGsfTrack, &b_numberOfValidPixelEndcapHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidStripTIBHitsGsfTrack", numberOfValidStripTIBHitsGsfTrack, &b_numberOfValidStripTIBHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidStripTIDHitsGsfTrack", numberOfValidStripTIDHitsGsfTrack, &b_numberOfValidStripTIDHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidStripTOBHitsGsfTrack", numberOfValidStripTOBHitsGsfTrack, &b_numberOfValidStripTOBHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidStripTECHitsGsfTrack", numberOfValidStripTECHitsGsfTrack, &b_numberOfValidStripTECHitsGsfTrack);
   fChain->SetBranchAddress("numberOfValidMuonHitsGsfTrack", numberOfValidMuonHitsGsfTrack, &b_numberOfValidMuonHitsGsfTrack);
   fChain->SetBranchAddress("chargeModeGsfTrack", chargeModeGsfTrack, &b_chargeModeGsfTrack);
   fChain->SetBranchAddress("pxModeGsfTrack", pxModeGsfTrack, &b_pxModeGsfTrack);
   fChain->SetBranchAddress("pyModeGsfTrack", pyModeGsfTrack, &b_pyModeGsfTrack);
   fChain->SetBranchAddress("pzModeGsfTrack", pzModeGsfTrack, &b_pzModeGsfTrack);
   fChain->SetBranchAddress("nGlobalMuonTrack", &nGlobalMuonTrack, &b_nGlobalMuonTrack);
   fChain->SetBranchAddress("pxGlobalMuonTrack", pxGlobalMuonTrack, &b_pxGlobalMuonTrack);
   fChain->SetBranchAddress("pyGlobalMuonTrack", pyGlobalMuonTrack, &b_pyGlobalMuonTrack);
   fChain->SetBranchAddress("pzGlobalMuonTrack", pzGlobalMuonTrack, &b_pzGlobalMuonTrack);
   fChain->SetBranchAddress("vtxIndexGlobalMuonTrack", vtxIndexGlobalMuonTrack, &b_vtxIndexGlobalMuonTrack);
   fChain->SetBranchAddress("vtxWeightGlobalMuonTrack", vtxWeightGlobalMuonTrack, &b_vtxWeightGlobalMuonTrack);
   fChain->SetBranchAddress("impactPar3DGlobalMuonTrack", impactPar3DGlobalMuonTrack, &b_impactPar3DGlobalMuonTrack);
   fChain->SetBranchAddress("impactPar3DErrorGlobalMuonTrack", impactPar3DErrorGlobalMuonTrack, &b_impactPar3DErrorGlobalMuonTrack);
   fChain->SetBranchAddress("transvImpactParGlobalMuonTrack", transvImpactParGlobalMuonTrack, &b_transvImpactParGlobalMuonTrack);
   fChain->SetBranchAddress("transvImpactParErrorGlobalMuonTrack", transvImpactParErrorGlobalMuonTrack, &b_transvImpactParErrorGlobalMuonTrack);
   fChain->SetBranchAddress("impactPar3DBiasedGlobalMuonTrack", impactPar3DBiasedGlobalMuonTrack, &b_impactPar3DBiasedGlobalMuonTrack);
   fChain->SetBranchAddress("impactPar3DBiasedErrorGlobalMuonTrack", impactPar3DBiasedErrorGlobalMuonTrack, &b_impactPar3DBiasedErrorGlobalMuonTrack);
   fChain->SetBranchAddress("transvImpactParBiasedGlobalMuonTrack", transvImpactParBiasedGlobalMuonTrack, &b_transvImpactParBiasedGlobalMuonTrack);
   fChain->SetBranchAddress("transvImpactParBiasedErrorGlobalMuonTrack", transvImpactParBiasedErrorGlobalMuonTrack, &b_transvImpactParBiasedErrorGlobalMuonTrack);
   fChain->SetBranchAddress("chargeGlobalMuonTrack", chargeGlobalMuonTrack, &b_chargeGlobalMuonTrack);
   fChain->SetBranchAddress("ptErrorGlobalMuonTrack", ptErrorGlobalMuonTrack, &b_ptErrorGlobalMuonTrack);
   fChain->SetBranchAddress("trackValidHitsGlobalMuonTrack", trackValidHitsGlobalMuonTrack, &b_trackValidHitsGlobalMuonTrack);
   fChain->SetBranchAddress("trackLostHitsGlobalMuonTrack", trackLostHitsGlobalMuonTrack, &b_trackLostHitsGlobalMuonTrack);
   fChain->SetBranchAddress("trackNormalizedChi2GlobalMuonTrack", trackNormalizedChi2GlobalMuonTrack, &b_trackNormalizedChi2GlobalMuonTrack);
   fChain->SetBranchAddress("qualityMaskGlobalMuonTrack", qualityMaskGlobalMuonTrack, &b_qualityMaskGlobalMuonTrack);
   fChain->SetBranchAddress("trackVxGlobalMuonTrack", trackVxGlobalMuonTrack, &b_trackVxGlobalMuonTrack);
   fChain->SetBranchAddress("trackVyGlobalMuonTrack", trackVyGlobalMuonTrack, &b_trackVyGlobalMuonTrack);
   fChain->SetBranchAddress("trackVzGlobalMuonTrack", trackVzGlobalMuonTrack, &b_trackVzGlobalMuonTrack);
   fChain->SetBranchAddress("d0GlobalMuonTrack", d0GlobalMuonTrack, &b_d0GlobalMuonTrack);
   fChain->SetBranchAddress("d0ErrorGlobalMuonTrack", d0ErrorGlobalMuonTrack, &b_d0ErrorGlobalMuonTrack);
   fChain->SetBranchAddress("dzGlobalMuonTrack", dzGlobalMuonTrack, &b_dzGlobalMuonTrack);
   fChain->SetBranchAddress("dzErrorGlobalMuonTrack", dzErrorGlobalMuonTrack, &b_dzErrorGlobalMuonTrack);
   fChain->SetBranchAddress("pixelHitsGlobalMuonTrack", pixelHitsGlobalMuonTrack, &b_pixelHitsGlobalMuonTrack);
   fChain->SetBranchAddress("trackerLayersWithMeasurementGlobalMuonTrack", trackerLayersWithMeasurementGlobalMuonTrack, &b_trackerLayersWithMeasurementGlobalMuonTrack);
   fChain->SetBranchAddress("expInnerLayersGlobalMuonTrack", expInnerLayersGlobalMuonTrack, &b_expInnerLayersGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidPixelBarrelHitsGlobalMuonTrack", numberOfValidPixelBarrelHitsGlobalMuonTrack, &b_numberOfValidPixelBarrelHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidPixelEndcapHitsGlobalMuonTrack", numberOfValidPixelEndcapHitsGlobalMuonTrack, &b_numberOfValidPixelEndcapHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTIBHitsGlobalMuonTrack", numberOfValidStripTIBHitsGlobalMuonTrack, &b_numberOfValidStripTIBHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTIDHitsGlobalMuonTrack", numberOfValidStripTIDHitsGlobalMuonTrack, &b_numberOfValidStripTIDHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTOBHitsGlobalMuonTrack", numberOfValidStripTOBHitsGlobalMuonTrack, &b_numberOfValidStripTOBHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTECHitsGlobalMuonTrack", numberOfValidStripTECHitsGlobalMuonTrack, &b_numberOfValidStripTECHitsGlobalMuonTrack);
   fChain->SetBranchAddress("numberOfValidMuonHitsGlobalMuonTrack", numberOfValidMuonHitsGlobalMuonTrack, &b_numberOfValidMuonHitsGlobalMuonTrack);
   fChain->SetBranchAddress("nSTAMuonTrack", &nSTAMuonTrack, &b_nSTAMuonTrack);
   fChain->SetBranchAddress("pxSTAMuonTrack", pxSTAMuonTrack, &b_pxSTAMuonTrack);
   fChain->SetBranchAddress("pySTAMuonTrack", pySTAMuonTrack, &b_pySTAMuonTrack);
   fChain->SetBranchAddress("pzSTAMuonTrack", pzSTAMuonTrack, &b_pzSTAMuonTrack);
   fChain->SetBranchAddress("chargeSTAMuonTrack", chargeSTAMuonTrack, &b_chargeSTAMuonTrack);
   fChain->SetBranchAddress("ptErrorSTAMuonTrack", ptErrorSTAMuonTrack, &b_ptErrorSTAMuonTrack);
   fChain->SetBranchAddress("trackValidHitsSTAMuonTrack", trackValidHitsSTAMuonTrack, &b_trackValidHitsSTAMuonTrack);
   fChain->SetBranchAddress("trackLostHitsSTAMuonTrack", trackLostHitsSTAMuonTrack, &b_trackLostHitsSTAMuonTrack);
   fChain->SetBranchAddress("trackNormalizedChi2STAMuonTrack", trackNormalizedChi2STAMuonTrack, &b_trackNormalizedChi2STAMuonTrack);
   fChain->SetBranchAddress("qualityMaskSTAMuonTrack", qualityMaskSTAMuonTrack, &b_qualityMaskSTAMuonTrack);
   fChain->SetBranchAddress("trackVxSTAMuonTrack", trackVxSTAMuonTrack, &b_trackVxSTAMuonTrack);
   fChain->SetBranchAddress("trackVySTAMuonTrack", trackVySTAMuonTrack, &b_trackVySTAMuonTrack);
   fChain->SetBranchAddress("trackVzSTAMuonTrack", trackVzSTAMuonTrack, &b_trackVzSTAMuonTrack);
   fChain->SetBranchAddress("d0STAMuonTrack", d0STAMuonTrack, &b_d0STAMuonTrack);
   fChain->SetBranchAddress("d0ErrorSTAMuonTrack", d0ErrorSTAMuonTrack, &b_d0ErrorSTAMuonTrack);
   fChain->SetBranchAddress("dzSTAMuonTrack", dzSTAMuonTrack, &b_dzSTAMuonTrack);
   fChain->SetBranchAddress("dzErrorSTAMuonTrack", dzErrorSTAMuonTrack, &b_dzErrorSTAMuonTrack);
   fChain->SetBranchAddress("pixelHitsSTAMuonTrack", pixelHitsSTAMuonTrack, &b_pixelHitsSTAMuonTrack);
   fChain->SetBranchAddress("trackerLayersWithMeasurementSTAMuonTrack", trackerLayersWithMeasurementSTAMuonTrack, &b_trackerLayersWithMeasurementSTAMuonTrack);
   fChain->SetBranchAddress("expInnerLayersSTAMuonTrack", expInnerLayersSTAMuonTrack, &b_expInnerLayersSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidPixelBarrelHitsSTAMuonTrack", numberOfValidPixelBarrelHitsSTAMuonTrack, &b_numberOfValidPixelBarrelHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidPixelEndcapHitsSTAMuonTrack", numberOfValidPixelEndcapHitsSTAMuonTrack, &b_numberOfValidPixelEndcapHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTIBHitsSTAMuonTrack", numberOfValidStripTIBHitsSTAMuonTrack, &b_numberOfValidStripTIBHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTIDHitsSTAMuonTrack", numberOfValidStripTIDHitsSTAMuonTrack, &b_numberOfValidStripTIDHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTOBHitsSTAMuonTrack", numberOfValidStripTOBHitsSTAMuonTrack, &b_numberOfValidStripTOBHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidStripTECHitsSTAMuonTrack", numberOfValidStripTECHitsSTAMuonTrack, &b_numberOfValidStripTECHitsSTAMuonTrack);
   fChain->SetBranchAddress("numberOfValidMuonHitsSTAMuonTrack", numberOfValidMuonHitsSTAMuonTrack, &b_numberOfValidMuonHitsSTAMuonTrack);
   fChain->SetBranchAddress("nPV", &nPV, &b_nPV);
   fChain->SetBranchAddress("PVxPV", PVxPV, &b_PVxPV);
   fChain->SetBranchAddress("PVyPV", PVyPV, &b_PVyPV);
   fChain->SetBranchAddress("PVzPV", PVzPV, &b_PVzPV);
   fChain->SetBranchAddress("PVErrxPV", PVErrxPV, &b_PVErrxPV);
   fChain->SetBranchAddress("PVErryPV", PVErryPV, &b_PVErryPV);
   fChain->SetBranchAddress("PVErrzPV", PVErrzPV, &b_PVErrzPV);
   fChain->SetBranchAddress("SumPtPV", SumPtPV, &b_SumPtPV);
   fChain->SetBranchAddress("rhoPV", rhoPV, &b_rhoPV);
   fChain->SetBranchAddress("ndofPV", ndofPV, &b_ndofPV);
   fChain->SetBranchAddress("chi2PV", chi2PV, &b_chi2PV);
   fChain->SetBranchAddress("normChi2PV", normChi2PV, &b_normChi2PV);
   fChain->SetBranchAddress("pxChMetPV", pxChMetPV, &b_pxChMetPV);
   fChain->SetBranchAddress("pyChMetPV", pyChMetPV, &b_pyChMetPV);
   fChain->SetBranchAddress("pzChMetPV", pzChMetPV, &b_pzChMetPV);
   fChain->SetBranchAddress("isFakePV", isFakePV, &b_isFakePV);
   fChain->SetBranchAddress("isValidPV", isValidPV, &b_isValidPV);
   fChain->SetBranchAddress("trackSizePV", trackSizePV, &b_trackSizePV);
   fChain->SetBranchAddress("nMuon", &nMuon, &b_nMuon);
   fChain->SetBranchAddress("chargeMuon", chargeMuon, &b_chargeMuon);
   fChain->SetBranchAddress("energyMuon", energyMuon, &b_energyMuon);
   fChain->SetBranchAddress("thetaMuon", thetaMuon, &b_thetaMuon);
   fChain->SetBranchAddress("etaMuon", etaMuon, &b_etaMuon);
   fChain->SetBranchAddress("phiMuon", phiMuon, &b_phiMuon);
   fChain->SetBranchAddress("pxMuon", pxMuon, &b_pxMuon);
   fChain->SetBranchAddress("pyMuon", pyMuon, &b_pyMuon);
   fChain->SetBranchAddress("pzMuon", pzMuon, &b_pzMuon);
   fChain->SetBranchAddress("vertexXMuon", vertexXMuon, &b_vertexXMuon);
   fChain->SetBranchAddress("vertexYMuon", vertexYMuon, &b_vertexYMuon);
   fChain->SetBranchAddress("vertexZMuon", vertexZMuon, &b_vertexZMuon);
   fChain->SetBranchAddress("trackIndexMuon", trackIndexMuon, &b_trackIndexMuon);
   fChain->SetBranchAddress("standAloneTrackIndexMuon", standAloneTrackIndexMuon, &b_standAloneTrackIndexMuon);
   fChain->SetBranchAddress("combinedTrackIndexMuon", combinedTrackIndexMuon, &b_combinedTrackIndexMuon);
   fChain->SetBranchAddress("muonIdMuon", muonIdMuon, &b_muonIdMuon);
   fChain->SetBranchAddress("pfmuonIdMuon", pfmuonIdMuon, &b_pfmuonIdMuon);
   fChain->SetBranchAddress("typeMuon", typeMuon, &b_typeMuon);
   fChain->SetBranchAddress("numberOfMatchesMuon", numberOfMatchesMuon, &b_numberOfMatchesMuon);
   fChain->SetBranchAddress("sumPt03Muon", sumPt03Muon, &b_sumPt03Muon);
   fChain->SetBranchAddress("emEt03Muon", emEt03Muon, &b_emEt03Muon);
   fChain->SetBranchAddress("hadEt03Muon", hadEt03Muon, &b_hadEt03Muon);
   fChain->SetBranchAddress("hoEt03Muon", hoEt03Muon, &b_hoEt03Muon);
   fChain->SetBranchAddress("nTrk03Muon", nTrk03Muon, &b_nTrk03Muon);
   fChain->SetBranchAddress("nJets03Muon", nJets03Muon, &b_nJets03Muon);
   fChain->SetBranchAddress("sumPt05Muon", sumPt05Muon, &b_sumPt05Muon);
   fChain->SetBranchAddress("emEt05Muon", emEt05Muon, &b_emEt05Muon);
   fChain->SetBranchAddress("hadEt05Muon", hadEt05Muon, &b_hadEt05Muon);
   fChain->SetBranchAddress("hoEt05Muon", hoEt05Muon, &b_hoEt05Muon);
   fChain->SetBranchAddress("nTrk05Muon", nTrk05Muon, &b_nTrk05Muon);
   fChain->SetBranchAddress("nJets05Muon", nJets05Muon, &b_nJets05Muon);
   fChain->SetBranchAddress("pfCombinedIsoMuon", pfCombinedIsoMuon, &b_pfCombinedIsoMuon);
   fChain->SetBranchAddress("pfCandChargedIso01Muon", pfCandChargedIso01Muon, &b_pfCandChargedIso01Muon);
   fChain->SetBranchAddress("pfCandNeutralIso01Muon", pfCandNeutralIso01Muon, &b_pfCandNeutralIso01Muon);
   fChain->SetBranchAddress("pfCandPhotonIso01Muon", pfCandPhotonIso01Muon, &b_pfCandPhotonIso01Muon);
   fChain->SetBranchAddress("pfCandChargedIso02Muon", pfCandChargedIso02Muon, &b_pfCandChargedIso02Muon);
   fChain->SetBranchAddress("pfCandNeutralIso02Muon", pfCandNeutralIso02Muon, &b_pfCandNeutralIso02Muon);
   fChain->SetBranchAddress("pfCandPhotonIso02Muon", pfCandPhotonIso02Muon, &b_pfCandPhotonIso02Muon);
   fChain->SetBranchAddress("pfCandChargedIso03Muon", pfCandChargedIso03Muon, &b_pfCandChargedIso03Muon);
   fChain->SetBranchAddress("pfCandNeutralIso03Muon", pfCandNeutralIso03Muon, &b_pfCandNeutralIso03Muon);
   fChain->SetBranchAddress("pfCandPhotonIso03Muon", pfCandPhotonIso03Muon, &b_pfCandPhotonIso03Muon);
   fChain->SetBranchAddress("pfCandChargedIso04Muon", pfCandChargedIso04Muon, &b_pfCandChargedIso04Muon);
   fChain->SetBranchAddress("pfCandNeutralIso04Muon", pfCandNeutralIso04Muon, &b_pfCandNeutralIso04Muon);
   fChain->SetBranchAddress("pfCandPhotonIso04Muon", pfCandPhotonIso04Muon, &b_pfCandPhotonIso04Muon);
   fChain->SetBranchAddress("pfCandChargedIso05Muon", pfCandChargedIso05Muon, &b_pfCandChargedIso05Muon);
   fChain->SetBranchAddress("pfCandNeutralIso05Muon", pfCandNeutralIso05Muon, &b_pfCandNeutralIso05Muon);
   fChain->SetBranchAddress("pfCandPhotonIso05Muon", pfCandPhotonIso05Muon, &b_pfCandPhotonIso05Muon);
   fChain->SetBranchAddress("pfCandChargedIso06Muon", pfCandChargedIso06Muon, &b_pfCandChargedIso06Muon);
   fChain->SetBranchAddress("pfCandNeutralIso06Muon", pfCandNeutralIso06Muon, &b_pfCandNeutralIso06Muon);
   fChain->SetBranchAddress("pfCandPhotonIso06Muon", pfCandPhotonIso06Muon, &b_pfCandPhotonIso06Muon);
   fChain->SetBranchAddress("pfCandChargedIso07Muon", pfCandChargedIso07Muon, &b_pfCandChargedIso07Muon);
   fChain->SetBranchAddress("pfCandNeutralIso07Muon", pfCandNeutralIso07Muon, &b_pfCandNeutralIso07Muon);
   fChain->SetBranchAddress("pfCandPhotonIso07Muon", pfCandPhotonIso07Muon, &b_pfCandPhotonIso07Muon);
   fChain->SetBranchAddress("pfCandChargedDirIso04Muon", pfCandChargedDirIso04Muon, &b_pfCandChargedDirIso04Muon);
   fChain->SetBranchAddress("pfCandNeutralDirIso04Muon", pfCandNeutralDirIso04Muon, &b_pfCandNeutralDirIso04Muon);
   fChain->SetBranchAddress("pfCandPhotonDirIso04Muon", pfCandPhotonDirIso04Muon, &b_pfCandPhotonDirIso04Muon);
   fChain->SetBranchAddress("pfIsolationSumPUPtR03Muon", pfIsolationSumPUPtR03Muon, &b_pfIsolationSumPUPtR03Muon);
   fChain->SetBranchAddress("pfIsolationSumPUPtR04Muon", pfIsolationSumPUPtR04Muon, &b_pfIsolationSumPUPtR04Muon);
   fChain->SetBranchAddress("pfCandChargedPUIso03Muon", pfCandChargedPUIso03Muon, &b_pfCandChargedPUIso03Muon);
   fChain->SetBranchAddress("pfCandChargedPUIso04Muon", pfCandChargedPUIso04Muon, &b_pfCandChargedPUIso04Muon);
   fChain->SetBranchAddress("kinkMuon", kinkMuon, &b_kinkMuon);
   fChain->SetBranchAddress("mvaisoMuon", mvaisoMuon, &b_mvaisoMuon);
   fChain->SetBranchAddress("EcalExpDepoMuon", EcalExpDepoMuon, &b_EcalExpDepoMuon);
   fChain->SetBranchAddress("HcalExpDepoMuon", HcalExpDepoMuon, &b_HcalExpDepoMuon);
   fChain->SetBranchAddress("HoExpDepoMuon", HoExpDepoMuon, &b_HoExpDepoMuon);
   fChain->SetBranchAddress("emS9Muon", emS9Muon, &b_emS9Muon);
   fChain->SetBranchAddress("hadS9Muon", hadS9Muon, &b_hadS9Muon);
   fChain->SetBranchAddress("hoS9Muon", hoS9Muon, &b_hoS9Muon);
   fChain->SetBranchAddress("CaloCompMuon", CaloCompMuon, &b_CaloCompMuon);
   fChain->SetBranchAddress("nPFCand", &nPFCand, &b_nPFCand);
   fChain->SetBranchAddress("chargePFCand", chargePFCand, &b_chargePFCand);
   fChain->SetBranchAddress("energyPFCand", energyPFCand, &b_energyPFCand);
   fChain->SetBranchAddress("thetaPFCand", thetaPFCand, &b_thetaPFCand);
   fChain->SetBranchAddress("etaPFCand", etaPFCand, &b_etaPFCand);
   fChain->SetBranchAddress("phiPFCand", phiPFCand, &b_phiPFCand);
   fChain->SetBranchAddress("pxPFCand", pxPFCand, &b_pxPFCand);
   fChain->SetBranchAddress("pyPFCand", pyPFCand, &b_pyPFCand);
   fChain->SetBranchAddress("pzPFCand", pzPFCand, &b_pzPFCand);
   fChain->SetBranchAddress("vertexXPFCand", vertexXPFCand, &b_vertexXPFCand);
   fChain->SetBranchAddress("vertexYPFCand", vertexYPFCand, &b_vertexYPFCand);
   fChain->SetBranchAddress("vertexZPFCand", vertexZPFCand, &b_vertexZPFCand);
   fChain->SetBranchAddress("particleIdPFCand", particleIdPFCand, &b_particleIdPFCand);
   fChain->SetBranchAddress("ChargedIso03PFCand", ChargedIso03PFCand, &b_ChargedIso03PFCand);
   fChain->SetBranchAddress("NeutralIso03PFCand", NeutralIso03PFCand, &b_NeutralIso03PFCand);
   fChain->SetBranchAddress("PhotonIso03PFCand", PhotonIso03PFCand, &b_PhotonIso03PFCand);
   fChain->SetBranchAddress("SumPUPtR03PFCand", SumPUPtR03PFCand, &b_SumPUPtR03PFCand);
   fChain->SetBranchAddress("nReducedPFCand", &nReducedPFCand, &b_nReducedPFCand);
   fChain->SetBranchAddress("chargeReducedPFCand", chargeReducedPFCand, &b_chargeReducedPFCand);
   fChain->SetBranchAddress("energyReducedPFCand", energyReducedPFCand, &b_energyReducedPFCand);
   fChain->SetBranchAddress("thetaReducedPFCand", thetaReducedPFCand, &b_thetaReducedPFCand);
   fChain->SetBranchAddress("etaReducedPFCand", etaReducedPFCand, &b_etaReducedPFCand);
   fChain->SetBranchAddress("phiReducedPFCand", phiReducedPFCand, &b_phiReducedPFCand);
   fChain->SetBranchAddress("pxReducedPFCand", pxReducedPFCand, &b_pxReducedPFCand);
   fChain->SetBranchAddress("pyReducedPFCand", pyReducedPFCand, &b_pyReducedPFCand);
   fChain->SetBranchAddress("pzReducedPFCand", pzReducedPFCand, &b_pzReducedPFCand);
   fChain->SetBranchAddress("vertexXReducedPFCand", vertexXReducedPFCand, &b_vertexXReducedPFCand);
   fChain->SetBranchAddress("vertexYReducedPFCand", vertexYReducedPFCand, &b_vertexYReducedPFCand);
   fChain->SetBranchAddress("vertexZReducedPFCand", vertexZReducedPFCand, &b_vertexZReducedPFCand);
   fChain->SetBranchAddress("nMet", &nMet, &b_nMet);
   fChain->SetBranchAddress("chargeMet", chargeMet, &b_chargeMet);
   fChain->SetBranchAddress("energyMet", energyMet, &b_energyMet);
   fChain->SetBranchAddress("thetaMet", thetaMet, &b_thetaMet);
   fChain->SetBranchAddress("etaMet", etaMet, &b_etaMet);
   fChain->SetBranchAddress("phiMet", phiMet, &b_phiMet);
   fChain->SetBranchAddress("pxMet", pxMet, &b_pxMet);
   fChain->SetBranchAddress("pyMet", pyMet, &b_pyMet);
   fChain->SetBranchAddress("pzMet", pzMet, &b_pzMet);
   fChain->SetBranchAddress("vertexXMet", vertexXMet, &b_vertexXMet);
   fChain->SetBranchAddress("vertexYMet", vertexYMet, &b_vertexYMet);
   fChain->SetBranchAddress("vertexZMet", vertexZMet, &b_vertexZMet);
   fChain->SetBranchAddress("sumEtMet", sumEtMet, &b_sumEtMet);
   fChain->SetBranchAddress("mEtSigMet", mEtSigMet, &b_mEtSigMet);
   fChain->SetBranchAddress("significanceMet", significanceMet, &b_significanceMet);
   fChain->SetBranchAddress("nPFMet", &nPFMet, &b_nPFMet);
   fChain->SetBranchAddress("chargePFMet", chargePFMet, &b_chargePFMet);
   fChain->SetBranchAddress("energyPFMet", energyPFMet, &b_energyPFMet);
   fChain->SetBranchAddress("thetaPFMet", thetaPFMet, &b_thetaPFMet);
   fChain->SetBranchAddress("etaPFMet", etaPFMet, &b_etaPFMet);
   fChain->SetBranchAddress("phiPFMet", phiPFMet, &b_phiPFMet);
   fChain->SetBranchAddress("pxPFMet", pxPFMet, &b_pxPFMet);
   fChain->SetBranchAddress("pyPFMet", pyPFMet, &b_pyPFMet);
   fChain->SetBranchAddress("pzPFMet", pzPFMet, &b_pzPFMet);
   fChain->SetBranchAddress("vertexXPFMet", vertexXPFMet, &b_vertexXPFMet);
   fChain->SetBranchAddress("vertexYPFMet", vertexYPFMet, &b_vertexYPFMet);
   fChain->SetBranchAddress("vertexZPFMet", vertexZPFMet, &b_vertexZPFMet);
   fChain->SetBranchAddress("sumEtPFMet", sumEtPFMet, &b_sumEtPFMet);
   fChain->SetBranchAddress("mEtSigPFMet", mEtSigPFMet, &b_mEtSigPFMet);
   fChain->SetBranchAddress("significancePFMet", significancePFMet, &b_significancePFMet);
   fChain->SetBranchAddress("nPFChMet", &nPFChMet, &b_nPFChMet);
   fChain->SetBranchAddress("chargePFChMet", chargePFChMet, &b_chargePFChMet);
   fChain->SetBranchAddress("energyPFChMet", energyPFChMet, &b_energyPFChMet);
   fChain->SetBranchAddress("thetaPFChMet", thetaPFChMet, &b_thetaPFChMet);
   fChain->SetBranchAddress("etaPFChMet", etaPFChMet, &b_etaPFChMet);
   fChain->SetBranchAddress("phiPFChMet", phiPFChMet, &b_phiPFChMet);
   fChain->SetBranchAddress("pxPFChMet", pxPFChMet, &b_pxPFChMet);
   fChain->SetBranchAddress("pyPFChMet", pyPFChMet, &b_pyPFChMet);
   fChain->SetBranchAddress("pzPFChMet", pzPFChMet, &b_pzPFChMet);
   fChain->SetBranchAddress("vertexXPFChMet", vertexXPFChMet, &b_vertexXPFChMet);
   fChain->SetBranchAddress("vertexYPFChMet", vertexYPFChMet, &b_vertexYPFChMet);
   fChain->SetBranchAddress("vertexZPFChMet", vertexZPFChMet, &b_vertexZPFChMet);
   fChain->SetBranchAddress("sumEtPFChMet", sumEtPFChMet, &b_sumEtPFChMet);
   fChain->SetBranchAddress("mEtSigPFChMet", mEtSigPFChMet, &b_mEtSigPFChMet);
   fChain->SetBranchAddress("significancePFChMet", significancePFChMet, &b_significancePFChMet);
   fChain->SetBranchAddress("nGenMet", &nGenMet, &b_nGenMet);
   fChain->SetBranchAddress("chargeGenMet", chargeGenMet, &b_chargeGenMet);
   fChain->SetBranchAddress("energyGenMet", energyGenMet, &b_energyGenMet);
   fChain->SetBranchAddress("thetaGenMet", thetaGenMet, &b_thetaGenMet);
   fChain->SetBranchAddress("etaGenMet", etaGenMet, &b_etaGenMet);
   fChain->SetBranchAddress("phiGenMet", phiGenMet, &b_phiGenMet);
   fChain->SetBranchAddress("pxGenMet", pxGenMet, &b_pxGenMet);
   fChain->SetBranchAddress("pyGenMet", pyGenMet, &b_pyGenMet);
   fChain->SetBranchAddress("pzGenMet", pzGenMet, &b_pzGenMet);
   fChain->SetBranchAddress("vertexXGenMet", vertexXGenMet, &b_vertexXGenMet);
   fChain->SetBranchAddress("vertexYGenMet", vertexYGenMet, &b_vertexYGenMet);
   fChain->SetBranchAddress("vertexZGenMet", vertexZGenMet, &b_vertexZGenMet);
   fChain->SetBranchAddress("nAK5Jet", &nAK5Jet, &b_nAK5Jet);
   fChain->SetBranchAddress("chargeAK5Jet", chargeAK5Jet, &b_chargeAK5Jet);
   fChain->SetBranchAddress("energyAK5Jet", energyAK5Jet, &b_energyAK5Jet);
   fChain->SetBranchAddress("thetaAK5Jet", thetaAK5Jet, &b_thetaAK5Jet);
   fChain->SetBranchAddress("etaAK5Jet", etaAK5Jet, &b_etaAK5Jet);
   fChain->SetBranchAddress("phiAK5Jet", phiAK5Jet, &b_phiAK5Jet);
   fChain->SetBranchAddress("pxAK5Jet", pxAK5Jet, &b_pxAK5Jet);
   fChain->SetBranchAddress("pyAK5Jet", pyAK5Jet, &b_pyAK5Jet);
   fChain->SetBranchAddress("pzAK5Jet", pzAK5Jet, &b_pzAK5Jet);
   fChain->SetBranchAddress("vertexXAK5Jet", vertexXAK5Jet, &b_vertexXAK5Jet);
   fChain->SetBranchAddress("vertexYAK5Jet", vertexYAK5Jet, &b_vertexYAK5Jet);
   fChain->SetBranchAddress("vertexZAK5Jet", vertexZAK5Jet, &b_vertexZAK5Jet);
   fChain->SetBranchAddress("emFracAK5Jet", emFracAK5Jet, &b_emFracAK5Jet);
   fChain->SetBranchAddress("hadFracAK5Jet", hadFracAK5Jet, &b_hadFracAK5Jet);
   fChain->SetBranchAddress("areaAK5Jet", areaAK5Jet, &b_areaAK5Jet);
   fChain->SetBranchAddress("IdAK5Jet", IdAK5Jet, &b_IdAK5Jet);
   fChain->SetBranchAddress("nHitAK5Jet", nHitAK5Jet, &b_nHitAK5Jet);
   fChain->SetBranchAddress("nHit90AK5Jet", nHit90AK5Jet, &b_nHit90AK5Jet);
   fChain->SetBranchAddress("fHPDAK5Jet", fHPDAK5Jet, &b_fHPDAK5Jet);
   fChain->SetBranchAddress("covEtaEtaAK5Jet", covEtaEtaAK5Jet, &b_covEtaEtaAK5Jet);
   fChain->SetBranchAddress("covPhiPhiAK5Jet", covPhiPhiAK5Jet, &b_covPhiPhiAK5Jet);
   fChain->SetBranchAddress("fLSAK5Jet", fLSAK5Jet, &b_fLSAK5Jet);
   fChain->SetBranchAddress("fOOTAK5Jet", fOOTAK5Jet, &b_fOOTAK5Jet);
   fChain->SetBranchAddress("combinedSecondaryVertexBJetTagsAK5Jet", combinedSecondaryVertexBJetTagsAK5Jet, &b_combinedSecondaryVertexBJetTagsAK5Jet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighEffBJetTagsAK5Jet", simpleSecondaryVertexHighEffBJetTagsAK5Jet, &b_simpleSecondaryVertexHighEffBJetTagsAK5Jet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighPurBJetTagsAK5Jet", simpleSecondaryVertexHighPurBJetTagsAK5Jet, &b_simpleSecondaryVertexHighPurBJetTagsAK5Jet);
   fChain->SetBranchAddress("trackCountingHighPurBJetTagsAK5Jet", trackCountingHighPurBJetTagsAK5Jet, &b_trackCountingHighPurBJetTagsAK5Jet);
   fChain->SetBranchAddress("trackCountingHighEffBJetTagsAK5Jet", trackCountingHighEffBJetTagsAK5Jet, &b_trackCountingHighEffBJetTagsAK5Jet);
   fChain->SetBranchAddress("trackCountingVeryHighEffBJetTagsAK5Jet", trackCountingVeryHighEffBJetTagsAK5Jet, &b_trackCountingVeryHighEffBJetTagsAK5Jet);
   fChain->SetBranchAddress("uncorrEnergyAK5Jet", uncorrEnergyAK5Jet, &b_uncorrEnergyAK5Jet);
   fChain->SetBranchAddress("nAK5PFNoPUJet", &nAK5PFNoPUJet, &b_nAK5PFNoPUJet);
   fChain->SetBranchAddress("chargeAK5PFNoPUJet", chargeAK5PFNoPUJet, &b_chargeAK5PFNoPUJet);
   fChain->SetBranchAddress("energyAK5PFNoPUJet", energyAK5PFNoPUJet, &b_energyAK5PFNoPUJet);
   fChain->SetBranchAddress("uncorrenergyAK5PFNoPUJet", uncorrenergyAK5PFNoPUJet, &b_uncorrenergyAK5PFNoPUJet);
   fChain->SetBranchAddress("thetaAK5PFNoPUJet", thetaAK5PFNoPUJet, &b_thetaAK5PFNoPUJet);
   fChain->SetBranchAddress("etaAK5PFNoPUJet", etaAK5PFNoPUJet, &b_etaAK5PFNoPUJet);
   fChain->SetBranchAddress("phiAK5PFNoPUJet", phiAK5PFNoPUJet, &b_phiAK5PFNoPUJet);
   fChain->SetBranchAddress("pxAK5PFNoPUJet", pxAK5PFNoPUJet, &b_pxAK5PFNoPUJet);
   fChain->SetBranchAddress("pyAK5PFNoPUJet", pyAK5PFNoPUJet, &b_pyAK5PFNoPUJet);
   fChain->SetBranchAddress("pzAK5PFNoPUJet", pzAK5PFNoPUJet, &b_pzAK5PFNoPUJet);
   fChain->SetBranchAddress("uncorrpxAK5PFNoPUJet", uncorrpxAK5PFNoPUJet, &b_uncorrpxAK5PFNoPUJet);
   fChain->SetBranchAddress("uncorrpyAK5PFNoPUJet", uncorrpyAK5PFNoPUJet, &b_uncorrpyAK5PFNoPUJet);
   fChain->SetBranchAddress("uncorrpzAK5PFNoPUJet", uncorrpzAK5PFNoPUJet, &b_uncorrpzAK5PFNoPUJet);
   fChain->SetBranchAddress("vertexXAK5PFNoPUJet", vertexXAK5PFNoPUJet, &b_vertexXAK5PFNoPUJet);
   fChain->SetBranchAddress("vertexYAK5PFNoPUJet", vertexYAK5PFNoPUJet, &b_vertexYAK5PFNoPUJet);
   fChain->SetBranchAddress("vertexZAK5PFNoPUJet", vertexZAK5PFNoPUJet, &b_vertexZAK5PFNoPUJet);
   fChain->SetBranchAddress("chargedHadronEnergyAK5PFNoPUJet", chargedHadronEnergyAK5PFNoPUJet, &b_chargedHadronEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("neutralHadronEnergyAK5PFNoPUJet", neutralHadronEnergyAK5PFNoPUJet, &b_neutralHadronEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("photonEnergyAK5PFNoPUJet", photonEnergyAK5PFNoPUJet, &b_photonEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("electronEnergyAK5PFNoPUJet", electronEnergyAK5PFNoPUJet, &b_electronEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("muonEnergyAK5PFNoPUJet", muonEnergyAK5PFNoPUJet, &b_muonEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("HFHadronEnergyAK5PFNoPUJet", HFHadronEnergyAK5PFNoPUJet, &b_HFHadronEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("HFEMEnergyAK5PFNoPUJet", HFEMEnergyAK5PFNoPUJet, &b_HFEMEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("chargedHadronMultiplicityAK5PFNoPUJet", chargedHadronMultiplicityAK5PFNoPUJet, &b_chargedHadronMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("neutralHadronMultiplicityAK5PFNoPUJet", neutralHadronMultiplicityAK5PFNoPUJet, &b_neutralHadronMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("photonMultiplicityAK5PFNoPUJet", photonMultiplicityAK5PFNoPUJet, &b_photonMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("electronMultiplicityAK5PFNoPUJet", electronMultiplicityAK5PFNoPUJet, &b_electronMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("muonMultiplicityAK5PFNoPUJet", muonMultiplicityAK5PFNoPUJet, &b_muonMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("HFHadronMultiplicityAK5PFNoPUJet", HFHadronMultiplicityAK5PFNoPUJet, &b_HFHadronMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("HFEMMultiplicityAK5PFNoPUJet", HFEMMultiplicityAK5PFNoPUJet, &b_HFEMMultiplicityAK5PFNoPUJet);
   fChain->SetBranchAddress("areaAK5PFNoPUJet", areaAK5PFNoPUJet, &b_areaAK5PFNoPUJet);
   fChain->SetBranchAddress("weightedDz1AK5PFNoPUJet", weightedDz1AK5PFNoPUJet, &b_weightedDz1AK5PFNoPUJet);
   fChain->SetBranchAddress("weightedDz2AK5PFNoPUJet", weightedDz2AK5PFNoPUJet, &b_weightedDz2AK5PFNoPUJet);
   fChain->SetBranchAddress("betastarAK5PFNoPUJet", betastarAK5PFNoPUJet, &b_betastarAK5PFNoPUJet);
   fChain->SetBranchAddress("rmsCandsHandAK5PFNoPUJet", rmsCandsHandAK5PFNoPUJet, &b_rmsCandsHandAK5PFNoPUJet);
   fChain->SetBranchAddress("jetIdMvaFullAK5PFNoPUJet", jetIdMvaFullAK5PFNoPUJet, &b_jetIdMvaFullAK5PFNoPUJet);
   fChain->SetBranchAddress("dR2MeanIdMvaAK5PFNoPUJet", dR2MeanIdMvaAK5PFNoPUJet, &b_dR2MeanIdMvaAK5PFNoPUJet);
   fChain->SetBranchAddress("dRMeanIdMvaAK5PFNoPUJet", dRMeanIdMvaAK5PFNoPUJet, &b_dRMeanIdMvaAK5PFNoPUJet);
   fChain->SetBranchAddress("betastarIdMvaAK5PFNoPUJet", betastarIdMvaAK5PFNoPUJet, &b_betastarIdMvaAK5PFNoPUJet);
   fChain->SetBranchAddress("betastarclassicIdMvaAK5PFNoPUJet", betastarclassicIdMvaAK5PFNoPUJet, &b_betastarclassicIdMvaAK5PFNoPUJet);
   fChain->SetBranchAddress("chargedEmEnergyAK5PFNoPUJet", chargedEmEnergyAK5PFNoPUJet, &b_chargedEmEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("neutralEmEnergyAK5PFNoPUJet", neutralEmEnergyAK5PFNoPUJet, &b_neutralEmEnergyAK5PFNoPUJet);
   fChain->SetBranchAddress("combinedSecondaryVertexBJetTagsAK5PFNoPUJet", combinedSecondaryVertexBJetTagsAK5PFNoPUJet, &b_combinedSecondaryVertexBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("combinedSecondaryVertexMVABJetTagsAK5PFNoPUJet", combinedSecondaryVertexMVABJetTagsAK5PFNoPUJet, &b_combinedSecondaryVertexMVABJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("jetBProbabilityBJetTagsAK5PFNoPUJet", jetBProbabilityBJetTagsAK5PFNoPUJet, &b_jetBProbabilityBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("jetProbabilityBJetTagsAK5PFNoPUJet", jetProbabilityBJetTagsAK5PFNoPUJet, &b_jetProbabilityBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighEffBJetTagsAK5PFNoPUJet", simpleSecondaryVertexHighEffBJetTagsAK5PFNoPUJet, &b_simpleSecondaryVertexHighEffBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighPurBJetTagsAK5PFNoPUJet", simpleSecondaryVertexHighPurBJetTagsAK5PFNoPUJet, &b_simpleSecondaryVertexHighPurBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("trackCountingHighPurBJetTagsAK5PFNoPUJet", trackCountingHighPurBJetTagsAK5PFNoPUJet, &b_trackCountingHighPurBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("trackCountingHighEffBJetTagsAK5PFNoPUJet", trackCountingHighEffBJetTagsAK5PFNoPUJet, &b_trackCountingHighEffBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("trackCountingVeryHighEffBJetTagsAK5PFNoPUJet", trackCountingVeryHighEffBJetTagsAK5PFNoPUJet, &b_trackCountingVeryHighEffBJetTagsAK5PFNoPUJet);
   fChain->SetBranchAddress("rmsCandAK5PFNoPUJet", rmsCandAK5PFNoPUJet, &b_rmsCandAK5PFNoPUJet);
   fChain->SetBranchAddress("ptDAK5PFNoPUJet", ptDAK5PFNoPUJet, &b_ptDAK5PFNoPUJet);
   fChain->SetBranchAddress("axis1AK5PFNoPUJet", axis1AK5PFNoPUJet, &b_axis1AK5PFNoPUJet);
   fChain->SetBranchAddress("axis2AK5PFNoPUJet", axis2AK5PFNoPUJet, &b_axis2AK5PFNoPUJet);
   fChain->SetBranchAddress("pullAK5PFNoPUJet", pullAK5PFNoPUJet, &b_pullAK5PFNoPUJet);
   fChain->SetBranchAddress("tanaAK5PFNoPUJet", tanaAK5PFNoPUJet, &b_tanaAK5PFNoPUJet);
   fChain->SetBranchAddress("rmsCand_QCAK5PFNoPUJet", rmsCand_QCAK5PFNoPUJet, &b_rmsCand_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("ptD_QCAK5PFNoPUJet", ptD_QCAK5PFNoPUJet, &b_ptD_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("axis1_QCAK5PFNoPUJet", axis1_QCAK5PFNoPUJet, &b_axis1_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("axis2_QCAK5PFNoPUJet", axis2_QCAK5PFNoPUJet, &b_axis2_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("pull_QCAK5PFNoPUJet", pull_QCAK5PFNoPUJet, &b_pull_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("tana_QCAK5PFNoPUJet", tana_QCAK5PFNoPUJet, &b_tana_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("nChg_ptCutAK5PFNoPUJet", nChg_ptCutAK5PFNoPUJet, &b_nChg_ptCutAK5PFNoPUJet);
   fChain->SetBranchAddress("nChg_QCAK5PFNoPUJet", nChg_QCAK5PFNoPUJet, &b_nChg_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("nChg_ptCut_QCAK5PFNoPUJet", nChg_ptCut_QCAK5PFNoPUJet, &b_nChg_ptCut_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("nNeutral_ptCutAK5PFNoPUJet", nNeutral_ptCutAK5PFNoPUJet, &b_nNeutral_ptCutAK5PFNoPUJet);
   fChain->SetBranchAddress("RchgAK5PFNoPUJet", RchgAK5PFNoPUJet, &b_RchgAK5PFNoPUJet);
   fChain->SetBranchAddress("RneutralAK5PFNoPUJet", RneutralAK5PFNoPUJet, &b_RneutralAK5PFNoPUJet);
   fChain->SetBranchAddress("RAK5PFNoPUJet", RAK5PFNoPUJet, &b_RAK5PFNoPUJet);
   fChain->SetBranchAddress("Rchg_QCAK5PFNoPUJet", Rchg_QCAK5PFNoPUJet, &b_Rchg_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("pTMaxAK5PFNoPUJet", pTMaxAK5PFNoPUJet, &b_pTMaxAK5PFNoPUJet);
   fChain->SetBranchAddress("pTMaxChgAK5PFNoPUJet", pTMaxChgAK5PFNoPUJet, &b_pTMaxChgAK5PFNoPUJet);
   fChain->SetBranchAddress("pTMaxNeutralAK5PFNoPUJet", pTMaxNeutralAK5PFNoPUJet, &b_pTMaxNeutralAK5PFNoPUJet);
   fChain->SetBranchAddress("pTMaxChg_QCAK5PFNoPUJet", pTMaxChg_QCAK5PFNoPUJet, &b_pTMaxChg_QCAK5PFNoPUJet);
   fChain->SetBranchAddress("nAK5PFPUcorrJet", &nAK5PFPUcorrJet, &b_nAK5PFPUcorrJet);
   fChain->SetBranchAddress("chargeAK5PFPUcorrJet", chargeAK5PFPUcorrJet, &b_chargeAK5PFPUcorrJet);
   fChain->SetBranchAddress("energyAK5PFPUcorrJet", energyAK5PFPUcorrJet, &b_energyAK5PFPUcorrJet);
   fChain->SetBranchAddress("uncorrenergyAK5PFPUcorrJet", uncorrenergyAK5PFPUcorrJet, &b_uncorrenergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("thetaAK5PFPUcorrJet", thetaAK5PFPUcorrJet, &b_thetaAK5PFPUcorrJet);
   fChain->SetBranchAddress("etaAK5PFPUcorrJet", etaAK5PFPUcorrJet, &b_etaAK5PFPUcorrJet);
   fChain->SetBranchAddress("phiAK5PFPUcorrJet", phiAK5PFPUcorrJet, &b_phiAK5PFPUcorrJet);
   fChain->SetBranchAddress("pxAK5PFPUcorrJet", pxAK5PFPUcorrJet, &b_pxAK5PFPUcorrJet);
   fChain->SetBranchAddress("pyAK5PFPUcorrJet", pyAK5PFPUcorrJet, &b_pyAK5PFPUcorrJet);
   fChain->SetBranchAddress("pzAK5PFPUcorrJet", pzAK5PFPUcorrJet, &b_pzAK5PFPUcorrJet);
   fChain->SetBranchAddress("uncorrpxAK5PFPUcorrJet", uncorrpxAK5PFPUcorrJet, &b_uncorrpxAK5PFPUcorrJet);
   fChain->SetBranchAddress("uncorrpyAK5PFPUcorrJet", uncorrpyAK5PFPUcorrJet, &b_uncorrpyAK5PFPUcorrJet);
   fChain->SetBranchAddress("uncorrpzAK5PFPUcorrJet", uncorrpzAK5PFPUcorrJet, &b_uncorrpzAK5PFPUcorrJet);
   fChain->SetBranchAddress("vertexXAK5PFPUcorrJet", vertexXAK5PFPUcorrJet, &b_vertexXAK5PFPUcorrJet);
   fChain->SetBranchAddress("vertexYAK5PFPUcorrJet", vertexYAK5PFPUcorrJet, &b_vertexYAK5PFPUcorrJet);
   fChain->SetBranchAddress("vertexZAK5PFPUcorrJet", vertexZAK5PFPUcorrJet, &b_vertexZAK5PFPUcorrJet);
   fChain->SetBranchAddress("chargedHadronEnergyAK5PFPUcorrJet", chargedHadronEnergyAK5PFPUcorrJet, &b_chargedHadronEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("neutralHadronEnergyAK5PFPUcorrJet", neutralHadronEnergyAK5PFPUcorrJet, &b_neutralHadronEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("photonEnergyAK5PFPUcorrJet", photonEnergyAK5PFPUcorrJet, &b_photonEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("electronEnergyAK5PFPUcorrJet", electronEnergyAK5PFPUcorrJet, &b_electronEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("muonEnergyAK5PFPUcorrJet", muonEnergyAK5PFPUcorrJet, &b_muonEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("HFHadronEnergyAK5PFPUcorrJet", HFHadronEnergyAK5PFPUcorrJet, &b_HFHadronEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("HFEMEnergyAK5PFPUcorrJet", HFEMEnergyAK5PFPUcorrJet, &b_HFEMEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("chargedHadronMultiplicityAK5PFPUcorrJet", chargedHadronMultiplicityAK5PFPUcorrJet, &b_chargedHadronMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("neutralHadronMultiplicityAK5PFPUcorrJet", neutralHadronMultiplicityAK5PFPUcorrJet, &b_neutralHadronMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("photonMultiplicityAK5PFPUcorrJet", photonMultiplicityAK5PFPUcorrJet, &b_photonMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("electronMultiplicityAK5PFPUcorrJet", electronMultiplicityAK5PFPUcorrJet, &b_electronMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("muonMultiplicityAK5PFPUcorrJet", muonMultiplicityAK5PFPUcorrJet, &b_muonMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("HFHadronMultiplicityAK5PFPUcorrJet", HFHadronMultiplicityAK5PFPUcorrJet, &b_HFHadronMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("HFEMMultiplicityAK5PFPUcorrJet", HFEMMultiplicityAK5PFPUcorrJet, &b_HFEMMultiplicityAK5PFPUcorrJet);
   fChain->SetBranchAddress("areaAK5PFPUcorrJet", areaAK5PFPUcorrJet, &b_areaAK5PFPUcorrJet);
   fChain->SetBranchAddress("weightedDz1AK5PFPUcorrJet", weightedDz1AK5PFPUcorrJet, &b_weightedDz1AK5PFPUcorrJet);
   fChain->SetBranchAddress("weightedDz2AK5PFPUcorrJet", weightedDz2AK5PFPUcorrJet, &b_weightedDz2AK5PFPUcorrJet);
   fChain->SetBranchAddress("betastarAK5PFPUcorrJet", betastarAK5PFPUcorrJet, &b_betastarAK5PFPUcorrJet);
   fChain->SetBranchAddress("rmsCandsHandAK5PFPUcorrJet", rmsCandsHandAK5PFPUcorrJet, &b_rmsCandsHandAK5PFPUcorrJet);
   fChain->SetBranchAddress("jetIdMvaFullAK5PFPUcorrJet", jetIdMvaFullAK5PFPUcorrJet, &b_jetIdMvaFullAK5PFPUcorrJet);
   fChain->SetBranchAddress("dR2MeanIdMvaAK5PFPUcorrJet", dR2MeanIdMvaAK5PFPUcorrJet, &b_dR2MeanIdMvaAK5PFPUcorrJet);
   fChain->SetBranchAddress("dRMeanIdMvaAK5PFPUcorrJet", dRMeanIdMvaAK5PFPUcorrJet, &b_dRMeanIdMvaAK5PFPUcorrJet);
   fChain->SetBranchAddress("betastarIdMvaAK5PFPUcorrJet", betastarIdMvaAK5PFPUcorrJet, &b_betastarIdMvaAK5PFPUcorrJet);
   fChain->SetBranchAddress("betastarclassicIdMvaAK5PFPUcorrJet", betastarclassicIdMvaAK5PFPUcorrJet, &b_betastarclassicIdMvaAK5PFPUcorrJet);
   fChain->SetBranchAddress("chargedEmEnergyAK5PFPUcorrJet", chargedEmEnergyAK5PFPUcorrJet, &b_chargedEmEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("neutralEmEnergyAK5PFPUcorrJet", neutralEmEnergyAK5PFPUcorrJet, &b_neutralEmEnergyAK5PFPUcorrJet);
   fChain->SetBranchAddress("combinedSecondaryVertexBJetTagsAK5PFPUcorrJet", combinedSecondaryVertexBJetTagsAK5PFPUcorrJet, &b_combinedSecondaryVertexBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("combinedSecondaryVertexMVABJetTagsAK5PFPUcorrJet", combinedSecondaryVertexMVABJetTagsAK5PFPUcorrJet, &b_combinedSecondaryVertexMVABJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("jetBProbabilityBJetTagsAK5PFPUcorrJet", jetBProbabilityBJetTagsAK5PFPUcorrJet, &b_jetBProbabilityBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("jetProbabilityBJetTagsAK5PFPUcorrJet", jetProbabilityBJetTagsAK5PFPUcorrJet, &b_jetProbabilityBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighEffBJetTagsAK5PFPUcorrJet", simpleSecondaryVertexHighEffBJetTagsAK5PFPUcorrJet, &b_simpleSecondaryVertexHighEffBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("simpleSecondaryVertexHighPurBJetTagsAK5PFPUcorrJet", simpleSecondaryVertexHighPurBJetTagsAK5PFPUcorrJet, &b_simpleSecondaryVertexHighPurBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("trackCountingHighPurBJetTagsAK5PFPUcorrJet", trackCountingHighPurBJetTagsAK5PFPUcorrJet, &b_trackCountingHighPurBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("trackCountingHighEffBJetTagsAK5PFPUcorrJet", trackCountingHighEffBJetTagsAK5PFPUcorrJet, &b_trackCountingHighEffBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("trackCountingVeryHighEffBJetTagsAK5PFPUcorrJet", trackCountingVeryHighEffBJetTagsAK5PFPUcorrJet, &b_trackCountingVeryHighEffBJetTagsAK5PFPUcorrJet);
   fChain->SetBranchAddress("rmsCandAK5PFPUcorrJet", rmsCandAK5PFPUcorrJet, &b_rmsCandAK5PFPUcorrJet);
   fChain->SetBranchAddress("ptDAK5PFPUcorrJet", ptDAK5PFPUcorrJet, &b_ptDAK5PFPUcorrJet);
   fChain->SetBranchAddress("axis1AK5PFPUcorrJet", axis1AK5PFPUcorrJet, &b_axis1AK5PFPUcorrJet);
   fChain->SetBranchAddress("axis2AK5PFPUcorrJet", axis2AK5PFPUcorrJet, &b_axis2AK5PFPUcorrJet);
   fChain->SetBranchAddress("pullAK5PFPUcorrJet", pullAK5PFPUcorrJet, &b_pullAK5PFPUcorrJet);
   fChain->SetBranchAddress("tanaAK5PFPUcorrJet", tanaAK5PFPUcorrJet, &b_tanaAK5PFPUcorrJet);
   fChain->SetBranchAddress("rmsCand_QCAK5PFPUcorrJet", rmsCand_QCAK5PFPUcorrJet, &b_rmsCand_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("ptD_QCAK5PFPUcorrJet", ptD_QCAK5PFPUcorrJet, &b_ptD_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("axis1_QCAK5PFPUcorrJet", axis1_QCAK5PFPUcorrJet, &b_axis1_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("axis2_QCAK5PFPUcorrJet", axis2_QCAK5PFPUcorrJet, &b_axis2_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("pull_QCAK5PFPUcorrJet", pull_QCAK5PFPUcorrJet, &b_pull_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("tana_QCAK5PFPUcorrJet", tana_QCAK5PFPUcorrJet, &b_tana_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("nChg_ptCutAK5PFPUcorrJet", nChg_ptCutAK5PFPUcorrJet, &b_nChg_ptCutAK5PFPUcorrJet);
   fChain->SetBranchAddress("nChg_QCAK5PFPUcorrJet", nChg_QCAK5PFPUcorrJet, &b_nChg_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("nChg_ptCut_QCAK5PFPUcorrJet", nChg_ptCut_QCAK5PFPUcorrJet, &b_nChg_ptCut_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("nNeutral_ptCutAK5PFPUcorrJet", nNeutral_ptCutAK5PFPUcorrJet, &b_nNeutral_ptCutAK5PFPUcorrJet);
   fChain->SetBranchAddress("RchgAK5PFPUcorrJet", RchgAK5PFPUcorrJet, &b_RchgAK5PFPUcorrJet);
   fChain->SetBranchAddress("RneutralAK5PFPUcorrJet", RneutralAK5PFPUcorrJet, &b_RneutralAK5PFPUcorrJet);
   fChain->SetBranchAddress("RAK5PFPUcorrJet", RAK5PFPUcorrJet, &b_RAK5PFPUcorrJet);
   fChain->SetBranchAddress("Rchg_QCAK5PFPUcorrJet", Rchg_QCAK5PFPUcorrJet, &b_Rchg_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("pTMaxAK5PFPUcorrJet", pTMaxAK5PFPUcorrJet, &b_pTMaxAK5PFPUcorrJet);
   fChain->SetBranchAddress("pTMaxChgAK5PFPUcorrJet", pTMaxChgAK5PFPUcorrJet, &b_pTMaxChgAK5PFPUcorrJet);
   fChain->SetBranchAddress("pTMaxNeutralAK5PFPUcorrJet", pTMaxNeutralAK5PFPUcorrJet, &b_pTMaxNeutralAK5PFPUcorrJet);
   fChain->SetBranchAddress("pTMaxChg_QCAK5PFPUcorrJet", pTMaxChg_QCAK5PFPUcorrJet, &b_pTMaxChg_QCAK5PFPUcorrJet);
   fChain->SetBranchAddress("nAK5GenJet", &nAK5GenJet, &b_nAK5GenJet);
   fChain->SetBranchAddress("chargeAK5GenJet", chargeAK5GenJet, &b_chargeAK5GenJet);
   fChain->SetBranchAddress("energyAK5GenJet", energyAK5GenJet, &b_energyAK5GenJet);
   fChain->SetBranchAddress("thetaAK5GenJet", thetaAK5GenJet, &b_thetaAK5GenJet);
   fChain->SetBranchAddress("etaAK5GenJet", etaAK5GenJet, &b_etaAK5GenJet);
   fChain->SetBranchAddress("phiAK5GenJet", phiAK5GenJet, &b_phiAK5GenJet);
   fChain->SetBranchAddress("pxAK5GenJet", pxAK5GenJet, &b_pxAK5GenJet);
   fChain->SetBranchAddress("pyAK5GenJet", pyAK5GenJet, &b_pyAK5GenJet);
   fChain->SetBranchAddress("pzAK5GenJet", pzAK5GenJet, &b_pzAK5GenJet);
   fChain->SetBranchAddress("vertexXAK5GenJet", vertexXAK5GenJet, &b_vertexXAK5GenJet);
   fChain->SetBranchAddress("vertexYAK5GenJet", vertexYAK5GenJet, &b_vertexYAK5GenJet);
   fChain->SetBranchAddress("vertexZAK5GenJet", vertexZAK5GenJet, &b_vertexZAK5GenJet);
   fChain->SetBranchAddress("genPtHat", &genPtHat, &b_genPtHat);
   fChain->SetBranchAddress("genProcessId", &genProcessId, &b_genProcessId);
   fChain->SetBranchAddress("genWeight", &genWeight, &b_genWeight);
   fChain->SetBranchAddress("genAlphaQCD", &genAlphaQCD, &b_genAlphaQCD);
   fChain->SetBranchAddress("genAlphaQED", &genAlphaQED, &b_genAlphaQED);
   fChain->SetBranchAddress("failHPDHits", &failHPDHits, &b_failHPDHits);
   fChain->SetBranchAddress("failHPDNoOtherHits", &failHPDNoOtherHits, &b_failHPDNoOtherHits);
   fChain->SetBranchAddress("failMaxZeros", &failMaxZeros, &b_failMaxZeros);
   fChain->SetBranchAddress("failTS4TS5", &failTS4TS5, &b_failTS4TS5);
   fChain->SetBranchAddress("failE2E10", &failE2E10, &b_failE2E10);
   fChain->SetBranchAddress("failICHEPFilter", &failICHEPFilter, &b_failICHEPFilter);
   fChain->SetBranchAddress("fail2011Filter", &fail2011Filter, &b_fail2011Filter);
   fChain->SetBranchAddress("nIsolatedHBHENoise", &nIsolatedHBHENoise, &b_nIsolatedHBHENoise);
   fChain->SetBranchAddress("sumEIsolatedHBHENoise", &sumEIsolatedHBHENoise, &b_sumEIsolatedHBHENoise);
   fChain->SetBranchAddress("nTimingHBHENoise", &nTimingHBHENoise, &b_nTimingHBHENoise);
   fChain->SetBranchAddress("sumETimingHBHENoise", &sumETimingHBHENoise, &b_sumETimingHBHENoise);
   fChain->SetBranchAddress("nFlatHBHENoise", &nFlatHBHENoise, &b_nFlatHBHENoise);
   fChain->SetBranchAddress("sumEFlatHBHENoise", &sumEFlatHBHENoise, &b_sumEFlatHBHENoise);
   fChain->SetBranchAddress("nSpikeHBHENoise", &nSpikeHBHENoise, &b_nSpikeHBHENoise);
   fChain->SetBranchAddress("sumESpikeHBHENoise", &sumESpikeHBHENoise, &b_sumESpikeHBHENoise);
   fChain->SetBranchAddress("nTriangleHBHENoise", &nTriangleHBHENoise, &b_nTriangleHBHENoise);
   fChain->SetBranchAddress("sumETriangleHBHENoise", &sumETriangleHBHENoise, &b_sumETriangleHBHENoise);
   fChain->SetBranchAddress("nHFPMT", &nHFPMT, &b_nHFPMT);
   fChain->SetBranchAddress("sumEHFPMT", &sumEHFPMT, &b_sumEHFPMT);
   Notify();
}

Bool_t boh::Notify()
{
   // The Notify() function is called when a new file is opened. This
   // can be either for a new TTree in a TChain or when when a new TTree
   // is started when using PROOF. It is normally not necessary to make changes
   // to the generated code, but the routine can be extended by the
   // user if needed. The return value is currently not used.

   return kTRUE;
}

void boh::Show(Long64_t entry)
{
// Print contents of entry.
// If entry is not specified, print current entry
   if (!fChain) return;
   fChain->Show(entry);
}
Int_t boh::Cut(Long64_t entry)
{
// This function may be called from Loop.
// returns  1 if entry is accepted.
// returns -1 otherwise.
   return 1;
}
#endif // #ifdef boh_cxx
